

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Jun 07 09:47:55 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    55  0000                     
    56                           	psect	idataCOMRAM
    57  002E22                     __pidataCOMRAM:
    58                           	opt stack 0
    59                           
    60                           ;initializer for _frecuencia
    61  002E22  00FF               	dw	255
    62                           
    63                           ;initializer for _tecla
    64  002E24  00FF               	dw	255
    65                           
    66                           	psect	idataBANK0
    67  002BD8                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _seno
    71  002BD8  007F               	dw	127
    72  002BDA  0093               	dw	147
    73  002BDC  00A6               	dw	166
    74  002BDE  00B8               	dw	184
    75  002BE0  00C9               	dw	201
    76  002BE2  00D9               	dw	217
    77  002BE4  00E8               	dw	232
    78  002BE6  00F6               	dw	246
    79  002BE8  00FF               	dw	255
    80  002BEA  00FF               	dw	255
    81  002BEC  00FF               	dw	255
    82  002BEE  00F6               	dw	246
    83  002BF0  00E8               	dw	232
    84  002BF2  00D9               	dw	217
    85  002BF4  00C9               	dw	201
    86  002BF6  00B8               	dw	184
    87  002BF8  00A6               	dw	166
    88  002BFA  0093               	dw	147
    89  002BFC  007F               	dw	127
    90  002BFE  006B               	dw	107
    91  002C00  0058               	dw	88
    92  002C02  0046               	dw	70
    93  002C04  0035               	dw	53
    94  002C06  0025               	dw	37
    95  002C08  0016               	dw	22
    96  002C0A  0008               	dw	8
    97  002C0C  0000               	dw	0
    98  002C0E  0000               	dw	0
    99  002C10  0000               	dw	0
   100  002C12  0008               	dw	8
   101  002C14  0016               	dw	22
   102  002C16  0025               	dw	37
   103  002C18  0035               	dw	53
   104  002C1A  0046               	dw	70
   105  002C1C  0058               	dw	88
   106  002C1E  006B               	dw	107
   107                           
   108                           	psect	smallconst
   109  000800                     __psmallconst:
   110                           	opt stack 0
   111  000800  00                 	db	0
   112  000801                     exp@coeff:
   113                           	opt stack 0
   114  000801  00                 	db	0
   115  000802  80                 	db	128
   116  000803  3F                 	db	63
   117  000804  72                 	db	114
   118  000805  31                 	db	49
   119  000806  3F                 	db	63
   120  000807  FE                 	db	254
   121  000808  75                 	db	117
   122  000809  3E                 	db	62
   123  00080A  58                 	db	88
   124  00080B  63                 	db	99
   125  00080C  3D                 	db	61
   126  00080D  95                 	db	149
   127  00080E  1D                 	db	29
   128  00080F  3C                 	db	60
   129  000810  C5                 	db	197
   130  000811  AE                 	db	174
   131  000812  3A                 	db	58
   132  000813  79                 	db	121
   133  000814  21                 	db	33
   134  000815  39                 	db	57
   135  000816  94                 	db	148
   136  000817  80                 	db	128
   137  000818  37                 	db	55
   138  000819  93                 	db	147
   139  00081A  A7                 	db	167
   140  00081B  35                 	db	53
   141  00081C  56                 	db	86
   142  00081D  15                 	db	21
   143  00081E  34                 	db	52
   144  00081F                     __end_ofexp@coeff:
   145                           	opt stack 0
   146  00081F                     log@coeff:
   147                           	opt stack 0
   148  00081F  00                 	db	0
   149  000820  00                 	db	0
   150  000821  00                 	db	0
   151  000822  00                 	db	0
   152  000823  80                 	db	128
   153  000824  3F                 	db	63
   154  000825  F0                 	db	240
   155  000826  FF                 	db	255
   156  000827  BE                 	db	190
   157  000828  E2                 	db	226
   158  000829  A9                 	db	169
   159  00082A  3E                 	db	62
   160  00082B  83                 	db	131
   161  00082C  76                 	db	118
   162  00082D  BE                 	db	190
   163  00082E  AE                 	db	174
   164  00082F  2B                 	db	43
   165  000830  3E                 	db	62
   166  000831  3C                 	db	60
   167  000832  C3                 	db	195
   168  000833  BD                 	db	189
   169  000834  D2                 	db	210
   170  000835  13                 	db	19
   171  000836  3D                 	db	61
   172  000837  78                 	db	120
   173  000838  D3                 	db	211
   174  000839  BB                 	db	187
   175  00083A                     __end_oflog@coeff:
   176                           	opt stack 0
   177  0000                     _ADCON1	set	4033
   178  0000                     _EEADR	set	4009
   179  0000                     _EECON2	set	4007
   180  0000                     _EEDATA	set	4008
   181  0000                     _INTCON2bits	set	4081
   182  0000                     _INTCONbits	set	4082
   183  0000                     _LATA	set	3977
   184  0000                     _LATB	set	3978
   185  0000                     _LATC	set	3979
   186  0000                     _LATD	set	3980
   187  0000                     _LATEbits	set	3981
   188  0000                     _OSCCONbits	set	4051
   189  0000                     _PIE2	set	4000
   190  0000                     _PIR2	set	4001
   191  0000                     _PORTA	set	3968
   192  0000                     _PORTB	set	3969
   193  0000                     _PORTC	set	3970
   194  0000                     _PORTE	set	3972
   195  0000                     _TRISA	set	3986
   196  0000                     _TRISB	set	3987
   197  0000                     _TRISC	set	3988
   198  0000                     _TRISD	set	3989
   199  0000                     _TRISE	set	3990
   200  0000                     _TRISEbits	set	3990
   201  0000                     _CARRY	set	32448
   202  0000                     _GIE	set	32663
   203  0000                     _RB4	set	31756
   204  0000                     _RB5	set	31757
   205  0000                     _RB6	set	31758
   206  0000                     _RB7	set	31759
   207  0000                     _RD	set	32048
   208  0000                     _WR	set	32049
   209  0000                     _WREN	set	32050
   210  00083A                     STR_3:
   211  00083A  47                 	db	71	;'G'
   212  00083B  45                 	db	69	;'E'
   213  00083C  4E                 	db	78	;'N'
   214  00083D  45                 	db	69	;'E'
   215  00083E  52                 	db	82	;'R'
   216  00083F  41                 	db	65	;'A'
   217  000840  44                 	db	68	;'D'
   218  000841  4F                 	db	79	;'O'
   219  000842  52                 	db	82	;'R'
   220  000843  20                 	db	32
   221  000844  44                 	db	68	;'D'
   222  000845  45                 	db	69	;'E'
   223  000846  20                 	db	32
   224  000847  20                 	db	32
   225  000848  20                 	db	32
   226  000849  20                 	db	32
   227  00084A  00                 	db	0
   228  00084B                     STR_6:
   229  00084B  33                 	db	51	;'3'
   230  00084C  2E                 	db	46
   231  00084D  53                 	db	83	;'S'
   232  00084E  45                 	db	69	;'E'
   233  00084F  4E                 	db	78	;'N'
   234  000850  4F                 	db	79	;'O'
   235  000851  34                 	db	52	;'4'
   236  000852  2E                 	db	46
   237  000853  52                 	db	82	;'R'
   238  000854  45                 	db	69	;'E'
   239  000855  53                 	db	83	;'S'
   240  000856  45                 	db	69	;'E'
   241  000857  54                 	db	84	;'T'
   242  000858  3A                 	db	58	;':'
   243  000859  20                 	db	32
   244  00085A  20                 	db	32
   245  00085B  00                 	db	0
   246  00085C                     STR_4:
   247  00085C  2D                 	db	45
   248  00085D  2D                 	db	45
   249  00085E  2D                 	db	45
   250  00085F  2D                 	db	45
   251  000860  53                 	db	83	;'S'
   252  000861  45                 	db	69	;'E'
   253  000862  4E                 	db	78	;'N'
   254  000863  49                 	db	73	;'I'
   255  000864  41                 	db	65	;'A'
   256  000865  4C                 	db	76	;'L'
   257  000866  45                 	db	69	;'E'
   258  000867  53                 	db	83	;'S'
   259  000868  2D                 	db	45
   260  000869  2D                 	db	45
   261  00086A  2D                 	db	45
   262  00086B  2D                 	db	45
   263  00086C  00                 	db	0
   264  00086D                     STR_5:
   265  00086D  31                 	db	49	;'1'
   266  00086E  2E                 	db	46
   267  00086F  52                 	db	82	;'R'
   268  000870  41                 	db	65	;'A'
   269  000871  4D                 	db	77	;'M'
   270  000872  50                 	db	80	;'P'
   271  000873  41                 	db	65	;'A'
   272  000874  20                 	db	32
   273  000875  32                 	db	50	;'2'
   274  000876  2E                 	db	46
   275  000877  43                 	db	67	;'C'
   276  000878  55                 	db	85	;'U'
   277  000879  41                 	db	65	;'A'
   278  00087A  44                 	db	68	;'D'
   279  00087B  52                 	db	82	;'R'
   280  00087C  41                 	db	65	;'A'
   281  00087D  00                 	db	0
   282  00087E                     STR_1:
   283  00087E  49                 	db	73	;'I'
   284  00087F  4E                 	db	78	;'N'
   285  000880  47                 	db	71	;'G'
   286  000881  52                 	db	82	;'R'
   287  000882  45                 	db	69	;'E'
   288  000883  53                 	db	83	;'S'
   289  000884  45                 	db	69	;'E'
   290  000885  20                 	db	32
   291  000886  4C                 	db	76	;'L'
   292  000887  41                 	db	65	;'A'
   293  000888  20                 	db	32
   294  000889  20                 	db	32
   295  00088A  20                 	db	32
   296  00088B  20                 	db	32
   297  00088C  20                 	db	32
   298  00088D  00                 	db	0
   299  00088E                     STR_9:
   300  00088E  53                 	db	83	;'S'
   301  00088F  45                 	db	69	;'E'
   302  000890  4E                 	db	78	;'N'
   303  000891  49                 	db	73	;'I'
   304  000892  41                 	db	65	;'A'
   305  000893  4C                 	db	76	;'L'
   306  000894  20                 	db	32
   307  000895  43                 	db	67	;'C'
   308  000896  55                 	db	85	;'U'
   309  000897  41                 	db	65	;'A'
   310  000898  44                 	db	68	;'D'
   311  000899  52                 	db	82	;'R'
   312  00089A  41                 	db	65	;'A'
   313  00089B  44                 	db	68	;'D'
   314  00089C  41                 	db	65	;'A'
   315  00089D  00                 	db	0
   316  00089E                     STR_13:
   317  00089E  42                 	db	66	;'B'
   318  00089F  4F                 	db	79	;'O'
   319  0008A0  52                 	db	82	;'R'
   320  0008A1  52                 	db	82	;'R'
   321  0008A2  41                 	db	65	;'A'
   322  0008A3  44                 	db	68	;'D'
   323  0008A4  4F                 	db	79	;'O'
   324  0008A5  20                 	db	32
   325  0008A6  45                 	db	69	;'E'
   326  0008A7  58                 	db	88	;'X'
   327  0008A8  49                 	db	73	;'I'
   328  0008A9  54                 	db	84	;'T'
   329  0008AA  4F                 	db	79	;'O'
   330  0008AB  53                 	db	83	;'S'
   331  0008AC  4F                 	db	79	;'O'
   332  0008AD  00                 	db	0
   333  0008AE                     STR_7:
   334  0008AE  53                 	db	83	;'S'
   335  0008AF  45                 	db	69	;'E'
   336  0008B0  4E                 	db	78	;'N'
   337  0008B1  49                 	db	73	;'I'
   338  0008B2  41                 	db	65	;'A'
   339  0008B3  4C                 	db	76	;'L'
   340  0008B4  20                 	db	32
   341  0008B5  52                 	db	82	;'R'
   342  0008B6  41                 	db	65	;'A'
   343  0008B7  4D                 	db	77	;'M'
   344  0008B8  50                 	db	80	;'P'
   345  0008B9  41                 	db	65	;'A'
   346  0008BA  00                 	db	0
   347  0008BB                     STR_2:
   348  0008BB  46                 	db	70	;'F'
   349  0008BC  52                 	db	82	;'R'
   350  0008BD  45                 	db	69	;'E'
   351  0008BE  43                 	db	67	;'C'
   352  0008BF  2E                 	db	46
   353  0008C0  3A                 	db	58	;':'
   354  0008C1  20                 	db	32
   355  0008C2  20                 	db	32
   356  0008C3  20                 	db	32
   357  0008C4  20                 	db	32
   358  0008C5  48                 	db	72	;'H'
   359  0008C6  7A                 	db	122	;'z'
   360  0008C7  00                 	db	0
   361  0008C8                     STR_8:
   362  0008C8  46                 	db	70	;'F'
   363  0008C9  52                 	db	82	;'R'
   364  0008CA  45                 	db	69	;'E'
   365  0008CB  43                 	db	67	;'C'
   366  0008CC  2E                 	db	46
   367  0008CD  3D                 	db	61	;'='
   368  0008CE  20                 	db	32
   369  0008CF  20                 	db	32
   370  0008D0  20                 	db	32
   371  0008D1  20                 	db	32
   372  0008D2  48                 	db	72	;'H'
   373  0008D3  7A                 	db	122	;'z'
   374  0008D4  00                 	db	0
   375  0008D5                     STR_11:
   376  0008D5  53                 	db	83	;'S'
   377  0008D6  45                 	db	69	;'E'
   378  0008D7  4E                 	db	78	;'N'
   379  0008D8  49                 	db	73	;'I'
   380  0008D9  41                 	db	65	;'A'
   381  0008DA  4C                 	db	76	;'L'
   382  0008DB  20                 	db	32
   383  0008DC  53                 	db	83	;'S'
   384  0008DD  45                 	db	69	;'E'
   385  0008DE  4E                 	db	78	;'N'
   386  0008DF  4F                 	db	79	;'O'
   387  0008E0  00                 	db	0
   388  0000                     
   389                           ; #config settings
   390  0008E1  00                 	db	0	; dummy byte at the end
   391  0000                     
   392                           	psect	cinit
   393  002B7E                     __pcinit:
   394                           	opt stack 0
   395  002B7E                     start_initialization:
   396                           	opt stack 0
   397  002B7E                     __initialization:
   398                           	opt stack 0
   399                           
   400                           ; Clear objects allocated to COMRAM (10 bytes)
   401  002B7E  EE00  F043         	lfsr	0,__pbssCOMRAM
   402  002B82  0E0A               	movlw	10
   403  002B84                     clear_0:
   404  002B84  6AEE               	clrf	postinc0,c
   405  002B86  06E8               	decf	wreg,f,c
   406  002B88  E1FD               	bnz	clear_0
   407                           
   408                           ; Initialize objects allocated to BANK0 (72 bytes)
   409                           ; load TBLPTR registers with __pidataBANK0
   410  002B8A  0ED8               	movlw	low __pidataBANK0
   411  002B8C  6EF6               	movwf	tblptrl,c
   412  002B8E  0E2B               	movlw	high __pidataBANK0
   413  002B90  6EF7               	movwf	tblptrh,c
   414  002B92  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   415  002B94  6EF8               	movwf	tblptru,c
   416  002B96  EE00  F060         	lfsr	0,__pdataBANK0
   417  002B9A  EE10 F048          	lfsr	1,72
   418  002B9E                     copy_data0:
   419  002B9E  0009               	tblrd		*+
   420  002BA0  CFF5 FFEE          	movff	tablat,postinc0
   421  002BA4  50E5               	movf	postdec1,w,c
   422  002BA6  50E1               	movf	fsr1l,w,c
   423  002BA8  E1FA               	bnz	copy_data0
   424                           
   425                           ; Initialize objects allocated to COMRAM (4 bytes)
   426                           ; load TBLPTR registers with __pidataCOMRAM
   427  002BAA  0E22               	movlw	low __pidataCOMRAM
   428  002BAC  6EF6               	movwf	tblptrl,c
   429  002BAE  0E2E               	movlw	high __pidataCOMRAM
   430  002BB0  6EF7               	movwf	tblptrh,c
   431  002BB2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   432  002BB4  6EF8               	movwf	tblptru,c
   433  002BB6  EE00  F04D         	lfsr	0,__pdataCOMRAM
   434  002BBA  EE10 F004          	lfsr	1,4
   435  002BBE                     copy_data1:
   436  002BBE  0009               	tblrd		*+
   437  002BC0  CFF5 FFEE          	movff	tablat,postinc0
   438  002BC4  50E5               	movf	postdec1,w,c
   439  002BC6  50E1               	movf	fsr1l,w,c
   440  002BC8  E1FA               	bnz	copy_data1
   441  002BCA                     end_of_initialization:
   442                           	opt stack 0
   443  002BCA                     __end_of__initialization:
   444                           	opt stack 0
   445  002BCA  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   446  002BCC  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   447  002BCE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   448  002BD0  6EF8               	movwf	tblptru,c
   449  002BD2  0100               	movlb	0
   450  002BD4  EF71  F004         	goto	_main	;jump to C main() function
   451                           tblptru	equ	0xFF8
   452                           tblptrh	equ	0xFF7
   453                           tblptrl	equ	0xFF6
   454                           tablat	equ	0xFF5
   455                           postinc0	equ	0xFEE
   456                           wreg	equ	0xFE8
   457                           postdec1	equ	0xFE5
   458                           fsr1l	equ	0xFE1
   459                           
   460                           	psect	bssCOMRAM
   461  000043                     __pbssCOMRAM:
   462                           	opt stack 0
   463  000043                     _centenas:
   464                           	opt stack 0
   465  000043                     	ds	2
   466  000045                     _decenas:
   467                           	opt stack 0
   468  000045                     	ds	2
   469  000047                     _errno:
   470                           	opt stack 0
   471  000047                     	ds	2
   472  000049                     _opcion:
   473                           	opt stack 0
   474  000049                     	ds	2
   475  00004B                     _unidades:
   476                           	opt stack 0
   477  00004B                     	ds	2
   478                           tblptru	equ	0xFF8
   479                           tblptrh	equ	0xFF7
   480                           tblptrl	equ	0xFF6
   481                           tablat	equ	0xFF5
   482                           postinc0	equ	0xFEE
   483                           wreg	equ	0xFE8
   484                           postdec1	equ	0xFE5
   485                           fsr1l	equ	0xFE1
   486                           
   487                           	psect	dataCOMRAM
   488  00004D                     __pdataCOMRAM:
   489                           	opt stack 0
   490  00004D                     _frecuencia:
   491                           	opt stack 0
   492  00004D                     	ds	2
   493  00004F                     _tecla:
   494                           	opt stack 0
   495  00004F                     	ds	2
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           postinc0	equ	0xFEE
   501                           wreg	equ	0xFE8
   502                           postdec1	equ	0xFE5
   503                           fsr1l	equ	0xFE1
   504                           
   505                           	psect	dataBANK0
   506  000060                     __pdataBANK0:
   507                           	opt stack 0
   508  000060                     _seno:
   509                           	opt stack 0
   510  000060                     	ds	72
   511                           tblptru	equ	0xFF8
   512                           tblptrh	equ	0xFF7
   513                           tblptrl	equ	0xFF6
   514                           tablat	equ	0xFF5
   515                           postinc0	equ	0xFEE
   516                           wreg	equ	0xFE8
   517                           postdec1	equ	0xFE5
   518                           fsr1l	equ	0xFE1
   519                           
   520                           	psect	cstackBANK0
   521  0000A8                     __pcstackBANK0:
   522                           	opt stack 0
   523  0000A8                     ?_log:
   524                           	opt stack 0
   525  0000A8                     ?_floor:
   526                           	opt stack 0
   527  0000A8                     ?_ldexp:
   528                           	opt stack 0
   529  0000A8                     floor@x:
   530                           	opt stack 0
   531  0000A8                     ldexp@value:
   532                           	opt stack 0
   533  0000A8                     log@x:
   534                           	opt stack 0
   535                           
   536                           ; 3 bytes @ 0x0
   537  0000A8                     	ds	3
   538  0000AB                     ldexp@newexp:
   539                           	opt stack 0
   540  0000AB                     log@exponent:
   541                           	opt stack 0
   542  0000AB                     floor@i:
   543                           	opt stack 0
   544                           
   545                           ; 3 bytes @ 0x3
   546  0000AB                     	ds	2
   547  0000AD                     ??_ldexp:
   548                           
   549                           ; 1 bytes @ 0x5
   550  0000AD                     	ds	1
   551  0000AE                     floor@expon:
   552                           	opt stack 0
   553                           
   554                           ; 2 bytes @ 0x6
   555  0000AE                     	ds	2
   556  0000B0                     ?_exp:
   557                           	opt stack 0
   558  0000B0                     exp@x:
   559                           	opt stack 0
   560                           
   561                           ; 3 bytes @ 0x8
   562  0000B0                     	ds	3
   563  0000B3                     _exp$1052:
   564                           	opt stack 0
   565                           
   566                           ; 3 bytes @ 0xB
   567  0000B3                     	ds	3
   568  0000B6                     exp@exponent:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0xE
   572  0000B6                     	ds	2
   573  0000B8                     exp@sign:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x10
   577  0000B8                     	ds	1
   578  0000B9                     ?_pow:
   579                           	opt stack 0
   580  0000B9                     pow@x:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x11
   584  0000B9                     	ds	3
   585  0000BC                     pow@y:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x14
   589  0000BC                     	ds	3
   590  0000BF                     _pow$1050:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x17
   594  0000BF                     	ds	3
   595  0000C2                     _pow$1051:
   596                           	opt stack 0
   597                           
   598                           ; 3 bytes @ 0x1A
   599  0000C2                     	ds	3
   600  0000C5                     pow@sign:
   601                           	opt stack 0
   602                           
   603                           ; 1 bytes @ 0x1D
   604  0000C5                     	ds	1
   605  0000C6                     pow@yi:
   606                           	opt stack 0
   607                           
   608                           ; 4 bytes @ 0x1E
   609  0000C6                     	ds	4
   610  0000CA                     rampa@frecu:
   611                           	opt stack 0
   612  0000CA                     cuadrada@frec:
   613                           	opt stack 0
   614  0000CA                     sen@frecuen:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x22
   618  0000CA                     	ds	2
   619  0000CC                     rampa@q_249:
   620                           	opt stack 0
   621  0000CC                     _cuadrada$1046:
   622                           	opt stack 0
   623  0000CC                     _sen$1048:
   624                           	opt stack 0
   625                           
   626                           ; 3 bytes @ 0x24
   627  0000CC                     	ds	2
   628  0000CE                     rampa@j:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x26
   632  0000CE                     	ds	1
   633  0000CF                     _cuadrada$1047:
   634                           	opt stack 0
   635  0000CF                     _sen$1049:
   636                           	opt stack 0
   637                           
   638                           ; 3 bytes @ 0x27
   639  0000CF                     	ds	1
   640  0000D0                     _rampa$1044:
   641                           	opt stack 0
   642                           
   643                           ; 3 bytes @ 0x28
   644  0000D0                     	ds	2
   645  0000D2                     cuadrada@z:
   646                           	opt stack 0
   647  0000D2                     sen@i:
   648                           	opt stack 0
   649                           
   650                           ; 2 bytes @ 0x2A
   651  0000D2                     	ds	1
   652  0000D3                     _rampa$1045:
   653                           	opt stack 0
   654                           
   655                           ; 3 bytes @ 0x2B
   656  0000D3                     	ds	1
   657  0000D4                     cuadrada@h:
   658                           	opt stack 0
   659  0000D4                     sen@i_262:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x2C
   663  0000D4                     	ds	2
   664  0000D6                     rampa@i:
   665                           	opt stack 0
   666  0000D6                     cuadrada@x:
   667                           	opt stack 0
   668  0000D6                     sen@i_263:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0x2E
   672  0000D6                     	ds	2
   673  0000D8                     rampa@i_248:
   674                           	opt stack 0
   675  0000D8                     sen@t:
   676                           	opt stack 0
   677                           
   678                           ; 2 bytes @ 0x30
   679  0000D8                     	ds	2
   680  0000DA                     rampa@i_250:
   681                           	opt stack 0
   682  0000DA                     sen@b:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x32
   686  0000DA                     	ds	2
   687  0000DC                     rampa@q:
   688                           	opt stack 0
   689                           
   690                           ; 2 bytes @ 0x34
   691  0000DC                     	ds	2
   692  0000DE                     ??_main:
   693                           
   694                           ; 1 bytes @ 0x36
   695  0000DE                     	ds	1
   696                           tblptru	equ	0xFF8
   697                           tblptrh	equ	0xFF7
   698                           tblptrl	equ	0xFF6
   699                           tablat	equ	0xFF5
   700                           postinc0	equ	0xFEE
   701                           wreg	equ	0xFE8
   702                           postdec1	equ	0xFE5
   703                           fsr1l	equ	0xFE1
   704                           
   705                           	psect	cstackCOMRAM
   706  000001                     __pcstackCOMRAM:
   707                           	opt stack 0
   708  000001                     ??_ISR:
   709  000001                     
   710                           ; 2 bytes @ 0x0
   711  000001                     	ds	14
   712  00000F                     ??_lcd_time_control:
   713  00000F                     ?___wmul:
   714                           	opt stack 0
   715  00000F                     ?___awdiv:
   716                           	opt stack 0
   717  00000F                     ?___ftpack:
   718                           	opt stack 0
   719  00000F                     ?_frexp:
   720                           	opt stack 0
   721  00000F                     ?___ftneg:
   722                           	opt stack 0
   723  00000F                     Delay100TCYx@unit:
   724                           	opt stack 0
   725  00000F                     Delay10TCYx@unit:
   726                           	opt stack 0
   727  00000F                     Delay1KTCYx@unit:
   728                           	opt stack 0
   729  00000F                     Delay1TCYx@unit:
   730                           	opt stack 0
   731  00000F                     ___wmul@multiplier:
   732                           	opt stack 0
   733  00000F                     ___awdiv@dividend:
   734                           	opt stack 0
   735  00000F                     ___ftpack@arg:
   736                           	opt stack 0
   737  00000F                     ___ftge@ff1:
   738                           	opt stack 0
   739  00000F                     ___ftneg@f1:
   740                           	opt stack 0
   741  00000F                     frexp@value:
   742                           	opt stack 0
   743                           
   744                           ; 3 bytes @ 0xE
   745  00000F                     	ds	1
   746  000010                     ??_lcd_dato:
   747  000010                     ??_lcd_control:
   748                           
   749                           ; 1 bytes @ 0xF
   750  000010                     	ds	1
   751  000011                     lcd_control@dato:
   752                           	opt stack 0
   753  000011                     lcd_dato@dato:
   754                           	opt stack 0
   755  000011                     ___wmul@multiplicand:
   756                           	opt stack 0
   757  000011                     ___awdiv@divisor:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0x10
   761  000011                     	ds	1
   762  000012                     ??_lcd_init:
   763  000012                     ___ftpack@exp:
   764                           	opt stack 0
   765  000012                     lcd_print@dato:
   766                           	opt stack 0
   767  000012                     lcd_goto@x:
   768                           	opt stack 0
   769  000012                     frexp@eptr:
   770                           	opt stack 0
   771  000012                     ___ftge@ff2:
   772                           	opt stack 0
   773                           
   774                           ; 3 bytes @ 0x11
   775  000012                     	ds	1
   776  000013                     ___awdiv@counter:
   777                           	opt stack 0
   778  000013                     ___ftpack@sign:
   779                           	opt stack 0
   780  000013                     ___wmul@product:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x12
   784  000013                     	ds	1
   785  000014                     ??___ftpack:
   786  000014                     ??_frexp:
   787  000014                     ___awdiv@sign:
   788                           	opt stack 0
   789  000014                     lcd_goto@y:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x13
   793  000014                     	ds	1
   794  000015                     ??___ftge:
   795  000015                     ___awdiv@quotient:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x14
   799  000015                     	ds	1
   800  000016                     ??_lcd_goto:
   801                           
   802                           ; 1 bytes @ 0x15
   803  000016                     	ds	1
   804  000017                     ?___awtoft:
   805                           	opt stack 0
   806  000017                     ?___lltoft:
   807                           	opt stack 0
   808  000017                     ___awtoft@c:
   809                           	opt stack 0
   810  000017                     ___lltoft@c:
   811                           	opt stack 0
   812                           
   813                           ; 4 bytes @ 0x16
   814  000017                     	ds	1
   815  000018                     lcd_goto@posicion:
   816                           	opt stack 0
   817                           
   818                           ; 1 bytes @ 0x17
   819  000018                     	ds	1
   820  000019                     ??_ingresar_frecuencia:
   821                           
   822                           ; 1 bytes @ 0x18
   823  000019                     	ds	1
   824  00001A                     ___awtoft@sign:
   825                           	opt stack 0
   826                           
   827                           ; 1 bytes @ 0x19
   828  00001A                     	ds	1
   829  00001B                     ??___lltoft:
   830  00001B                     ?___ftdiv:
   831                           	opt stack 0
   832  00001B                     ?___ftmul:
   833                           	opt stack 0
   834  00001B                     ___ftdiv@f1:
   835                           	opt stack 0
   836  00001B                     ___ftmul@f1:
   837                           	opt stack 0
   838                           
   839                           ; 3 bytes @ 0x1A
   840  00001B                     	ds	3
   841  00001E                     ___ftdiv@f2:
   842                           	opt stack 0
   843  00001E                     ___ftmul@f2:
   844                           	opt stack 0
   845                           
   846                           ; 3 bytes @ 0x1D
   847  00001E                     	ds	1
   848  00001F                     ___lltoft@exp:
   849                           	opt stack 0
   850                           
   851                           ; 1 bytes @ 0x1E
   852  00001F                     	ds	2
   853  000021                     ??___ftdiv:
   854  000021                     ??___ftmul:
   855                           
   856                           ; 1 bytes @ 0x20
   857  000021                     	ds	3
   858  000024                     ___ftdiv@cntr:
   859                           	opt stack 0
   860  000024                     ___ftmul@exp:
   861                           	opt stack 0
   862                           
   863                           ; 1 bytes @ 0x23
   864  000024                     	ds	1
   865  000025                     ___ftdiv@f3:
   866                           	opt stack 0
   867  000025                     ___ftmul@f3_as_product:
   868                           	opt stack 0
   869                           
   870                           ; 3 bytes @ 0x24
   871  000025                     	ds	3
   872  000028                     ___ftdiv@exp:
   873                           	opt stack 0
   874  000028                     ___ftmul@cntr:
   875                           	opt stack 0
   876                           
   877                           ; 1 bytes @ 0x27
   878  000028                     	ds	1
   879  000029                     ___ftdiv@sign:
   880                           	opt stack 0
   881  000029                     ___ftmul@sign:
   882                           	opt stack 0
   883                           
   884                           ; 1 bytes @ 0x28
   885  000029                     	ds	1
   886  00002A                     ?___ftadd:
   887                           	opt stack 0
   888  00002A                     ?___fttol:
   889                           	opt stack 0
   890  00002A                     ___ftadd@f1:
   891                           	opt stack 0
   892  00002A                     ___fttol@f1:
   893                           	opt stack 0
   894                           
   895                           ; 3 bytes @ 0x29
   896  00002A                     	ds	3
   897  00002D                     ___ftadd@f2:
   898                           	opt stack 0
   899                           
   900                           ; 3 bytes @ 0x2C
   901  00002D                     	ds	1
   902  00002E                     ??___fttol:
   903                           
   904                           ; 1 bytes @ 0x2D
   905  00002E                     	ds	2
   906  000030                     ??___ftadd:
   907                           
   908                           ; 1 bytes @ 0x2F
   909  000030                     	ds	3
   910  000033                     ___ftadd@sign:
   911                           	opt stack 0
   912  000033                     ___fttol@sign1:
   913                           	opt stack 0
   914                           
   915                           ; 1 bytes @ 0x32
   916  000033                     	ds	1
   917  000034                     ___ftadd@exp2:
   918                           	opt stack 0
   919  000034                     ___fttol@lval:
   920                           	opt stack 0
   921                           
   922                           ; 4 bytes @ 0x33
   923  000034                     	ds	1
   924  000035                     ___ftadd@exp1:
   925                           	opt stack 0
   926                           
   927                           ; 1 bytes @ 0x34
   928  000035                     	ds	1
   929  000036                     ?___ftsub:
   930                           	opt stack 0
   931  000036                     ?_eval_poly:
   932                           	opt stack 0
   933  000036                     ___ftsub@f1:
   934                           	opt stack 0
   935  000036                     eval_poly@x:
   936                           	opt stack 0
   937                           
   938                           ; 3 bytes @ 0x35
   939  000036                     	ds	2
   940  000038                     ___fttol@exp1:
   941                           	opt stack 0
   942                           
   943                           ; 1 bytes @ 0x37
   944  000038                     	ds	1
   945  000039                     ?___altoft:
   946                           	opt stack 0
   947  000039                     eval_poly@d:
   948                           	opt stack 0
   949  000039                     ___ftsub@f2:
   950                           	opt stack 0
   951  000039                     ___altoft@c:
   952                           	opt stack 0
   953                           
   954                           ; 4 bytes @ 0x38
   955  000039                     	ds	2
   956  00003B                     eval_poly@n:
   957                           	opt stack 0
   958                           
   959                           ; 2 bytes @ 0x3A
   960  00003B                     	ds	1
   961  00003C                     
   962                           ; 1 bytes @ 0x3B
   963  00003C                     	ds	1
   964  00003D                     ??_eval_poly:
   965  00003D                     ??___altoft:
   966                           
   967                           ; 1 bytes @ 0x3C
   968  00003D                     	ds	2
   969  00003F                     eval_poly@res:
   970                           	opt stack 0
   971                           
   972                           ; 3 bytes @ 0x3E
   973  00003F                     	ds	2
   974  000041                     ___altoft@exp:
   975                           	opt stack 0
   976                           
   977                           ; 1 bytes @ 0x40
   978  000041                     	ds	1
   979  000042                     ___altoft@sign:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x41
   983  000042                     	ds	1
   984  000043                     tblptru	equ	0xFF8
   985                           tblptrh	equ	0xFF7
   986                           tblptrl	equ	0xFF6
   987                           tablat	equ	0xFF5
   988                           postinc0	equ	0xFEE
   989                           wreg	equ	0xFE8
   990                           postdec1	equ	0xFE5
   991                           fsr1l	equ	0xFE1
   992                           
   993                           ; 1 bytes @ 0x42
   994 ;;
   995 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   996 ;;
   997 ;; *************** function _main *****************
   998 ;; Defined at:
   999 ;;		line 327 in file "LAB4.c"
  1000 ;; Parameters:    Size  Location     Type
  1001 ;;		None
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;		None
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : 0/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1013 ;;      Params:         0       0       0       0       0       0       0       0       0
  1014 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1015 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1016 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1017 ;;Total ram usage:        1 bytes
  1018 ;; Hardware stack levels required when called:    7
  1019 ;; This function calls:
  1020 ;;		_cuadrada
  1021 ;;		_ingresar_frecuencia
  1022 ;;		_lcd_clear_display
  1023 ;;		_lcd_dato
  1024 ;;		_lcd_goto
  1025 ;;		_lcd_init
  1026 ;;		_lcd_print
  1027 ;;		_rampa
  1028 ;;		_sen
  1029 ;; This function is called by:
  1030 ;;		Startup code after reset
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text0
  1035  0008E2                     __ptext0:
  1036                           	opt stack 0
  1037  0008E2                     _main:
  1038                           	opt stack 24
  1039                           
  1040                           ;LAB4.c: 330: ADCON1=0x06;
  1041                           
  1042                           ;incstack = 0
  1043  0008E2  0E06               	movlw	6
  1044  0008E4  6EC1               	movwf	4033,c	;volatile
  1045                           
  1046                           ;LAB4.c: 331: OSCCONbits.IRCF =7;
  1047  0008E6  88D3               	bsf	4051,4,c	;volatile
  1048  0008E8  8AD3               	bsf	4051,5,c	;volatile
  1049  0008EA  8CD3               	bsf	4051,6,c	;volatile
  1050                           
  1051                           ;LAB4.c: 332: TRISA=0X00;
  1052  0008EC  0E00               	movlw	0
  1053  0008EE  6E92               	movwf	3986,c	;volatile
  1054                           
  1055                           ;LAB4.c: 333: TRISC=0X00;
  1056  0008F0  0E00               	movlw	0
  1057  0008F2  6E94               	movwf	3988,c	;volatile
  1058                           
  1059                           ;LAB4.c: 334: TRISB=0xF0;
  1060  0008F4  0EF0               	movlw	240
  1061  0008F6  6E93               	movwf	3987,c	;volatile
  1062                           
  1063                           ;LAB4.c: 335: TRISD=0x00;
  1064  0008F8  0E00               	movlw	0
  1065  0008FA  6E95               	movwf	3989,c	;volatile
  1066                           
  1067                           ;LAB4.c: 336: TRISE=0X00;
  1068  0008FC  0E00               	movlw	0
  1069  0008FE  6E96               	movwf	3990,c	;volatile
  1070                           
  1071                           ;LAB4.c: 338: PORTB=0XF0;
  1072  000900  0EF0               	movlw	240
  1073  000902  6E81               	movwf	3969,c	;volatile
  1074                           
  1075                           ;LAB4.c: 339: PORTC=0X00;
  1076  000904  0E00               	movlw	0
  1077  000906  6E82               	movwf	3970,c	;volatile
  1078                           
  1079                           ;LAB4.c: 340: PORTA=0X00;
  1080  000908  0E00               	movlw	0
  1081  00090A  6E80               	movwf	3968,c	;volatile
  1082                           
  1083                           ;LAB4.c: 341: PORTE=0X00;
  1084  00090C  0E00               	movlw	0
  1085  00090E  6E84               	movwf	3972,c	;volatile
  1086                           
  1087                           ;LAB4.c: 342: INTCON2bits.nRBPU = 0;
  1088  000910  9EF1               	bcf	intcon2,7,c	;volatile
  1089                           
  1090                           ;LAB4.c: 343: INTCONbits.RBIE=1;
  1091  000912  86F2               	bsf	intcon,3,c	;volatile
  1092                           
  1093                           ;LAB4.c: 344: INTCONbits.RBIF=0;
  1094  000914  90F2               	bcf	intcon,0,c	;volatile
  1095                           
  1096                           ;LAB4.c: 345: INTCONbits.PEIE=1;
  1097  000916  8CF2               	bsf	intcon,6,c	;volatile
  1098                           
  1099                           ;LAB4.c: 346: INTCONbits.GIE=1;
  1100  000918  8EF2               	bsf	intcon,7,c	;volatile
  1101                           
  1102                           ;LAB4.c: 347: lcd_init();
  1103  00091A  EC30  F016         	call	_lcd_init	;wreg free
  1104                           
  1105                           ;LAB4.c: 348: _delay((unsigned long)((10)*(8000000/4000.0)));
  1106  00091E  0E1A               	movlw	26
  1107  000920  0100               	movlb	0	; () banked
  1108  000922  6FDE               	movwf	??_main& (0+255),b
  1109  000924  0EF8               	movlw	248
  1110  000926                     u5877:
  1111  000926  2EE8               	decfsz	wreg,f,c
  1112  000928  D7FE               	goto	u5877
  1113  00092A  2FDE               	decfsz	??_main& (0+255),f,b
  1114  00092C  D7FC               	goto	u5877
  1115  00092E  D000               	nop2	
  1116                           
  1117                           ;LAB4.c: 349: lcd_clear_display();
  1118  000930  EC0D  F017         	call	_lcd_clear_display	;wreg free
  1119                           
  1120                           ;LAB4.c: 351: lcd_goto(1,1);
  1121  000934  0E00               	movlw	0
  1122  000936  6E13               	movwf	lcd_goto@x+1,c
  1123  000938  0E01               	movlw	1
  1124  00093A  6E12               	movwf	lcd_goto@x,c
  1125  00093C  0E00               	movlw	0
  1126  00093E  6E15               	movwf	lcd_goto@y+1,c
  1127  000940  0E01               	movlw	1
  1128  000942  6E14               	movwf	lcd_goto@y,c
  1129  000944  EC4C  F016         	call	_lcd_goto	;wreg free
  1130                           
  1131                           ;LAB4.c: 352: lcd_print("GENERADOR DE    ");
  1132  000948  0E3A               	movlw	low STR_3
  1133  00094A  6E12               	movwf	lcd_print@dato,c
  1134  00094C  0E08               	movlw	high STR_3
  1135  00094E  6E13               	movwf	lcd_print@dato+1,c
  1136  000950  EC84  F016         	call	_lcd_print	;wreg free
  1137                           
  1138                           ;LAB4.c: 353: lcd_goto(1,2);
  1139  000954  0E00               	movlw	0
  1140  000956  6E13               	movwf	lcd_goto@x+1,c
  1141  000958  0E01               	movlw	1
  1142  00095A  6E12               	movwf	lcd_goto@x,c
  1143  00095C  0E00               	movlw	0
  1144  00095E  6E15               	movwf	lcd_goto@y+1,c
  1145  000960  0E02               	movlw	2
  1146  000962  6E14               	movwf	lcd_goto@y,c
  1147  000964  EC4C  F016         	call	_lcd_goto	;wreg free
  1148                           
  1149                           ;LAB4.c: 354: lcd_print("----SENIALES----");
  1150  000968  0E5C               	movlw	low STR_4
  1151  00096A  6E12               	movwf	lcd_print@dato,c
  1152  00096C  0E08               	movlw	high STR_4
  1153  00096E  6E13               	movwf	lcd_print@dato+1,c
  1154  000970  EC84  F016         	call	_lcd_print	;wreg free
  1155                           
  1156                           ;LAB4.c: 355: opcion=( EEADR = 0, (void)0, RD = 1, EEDATA);
  1157  000974  0E00               	movlw	0
  1158  000976  6EA9               	movwf	4009,c	;volatile
  1159  000978  80A6               	bsf	4006,0,c	;volatile
  1160  00097A  CFA8 F049          	movff	4008,_opcion	;volatile
  1161  00097E  6A4A               	clrf	_opcion+1,c
  1162  000980                     l5281:
  1163  000980  0E0F               	movlw	15
  1164  000982  184F               	xorwf	_tecla,w,c
  1165  000984  1050               	iorwf	_tecla+1,w,c
  1166  000986  A4D8               	btfss	status,2,c
  1167  000988  D7FB               	goto	l5281
  1168                           
  1169                           ;LAB4.c: 358: }
  1170                           ;LAB4.c: 360: if(opcion!=255){
  1171  00098A  2849               	incf	_opcion,w,c
  1172  00098C  104A               	iorwf	_opcion+1,w,c
  1173  00098E  B4D8               	btfsc	status,2,c
  1174  000990  D007               	goto	l5291
  1175                           
  1176                           ;LAB4.c: 361: frecuencia=( EEADR = 4, (void)0, RD = 1, EEDATA);
  1177  000992  0E04               	movlw	4
  1178  000994  6EA9               	movwf	4009,c	;volatile
  1179  000996  80A6               	bsf	4006,0,c	;volatile
  1180  000998  CFA8 F04D          	movff	4008,_frecuencia	;volatile
  1181  00099C  6A4E               	clrf	_frecuencia+1,c
  1182                           
  1183                           ;LAB4.c: 362: goto PRINCIPAL;
  1184  00099E  D06C               	goto	l5343
  1185  0009A0                     l5291:
  1186                           
  1187                           ;LAB4.c: 367: lcd_clear_display();
  1188  0009A0  EC0D  F017         	call	_lcd_clear_display	;wreg free
  1189                           
  1190                           ;LAB4.c: 368: lcd_goto(1,1);
  1191  0009A4  0E00               	movlw	0
  1192  0009A6  6E13               	movwf	lcd_goto@x+1,c
  1193  0009A8  0E01               	movlw	1
  1194  0009AA  6E12               	movwf	lcd_goto@x,c
  1195  0009AC  0E00               	movlw	0
  1196  0009AE  6E15               	movwf	lcd_goto@y+1,c
  1197  0009B0  0E01               	movlw	1
  1198  0009B2  6E14               	movwf	lcd_goto@y,c
  1199  0009B4  EC4C  F016         	call	_lcd_goto	;wreg free
  1200                           
  1201                           ;LAB4.c: 369: lcd_print("1.RAMPA 2.CUADRA");
  1202  0009B8  0E6D               	movlw	low STR_5
  1203  0009BA  6E12               	movwf	lcd_print@dato,c
  1204  0009BC  0E08               	movlw	high STR_5
  1205  0009BE  6E13               	movwf	lcd_print@dato+1,c
  1206  0009C0  EC84  F016         	call	_lcd_print	;wreg free
  1207                           
  1208                           ;LAB4.c: 370: lcd_goto(1,2);
  1209  0009C4  0E00               	movlw	0
  1210  0009C6  6E13               	movwf	lcd_goto@x+1,c
  1211  0009C8  0E01               	movlw	1
  1212  0009CA  6E12               	movwf	lcd_goto@x,c
  1213  0009CC  0E00               	movlw	0
  1214  0009CE  6E15               	movwf	lcd_goto@y+1,c
  1215  0009D0  0E02               	movlw	2
  1216  0009D2  6E14               	movwf	lcd_goto@y,c
  1217  0009D4  EC4C  F016         	call	_lcd_goto	;wreg free
  1218                           
  1219                           ;LAB4.c: 371: lcd_print("3.SENO4.RESET:  ");
  1220  0009D8  0E4B               	movlw	low STR_6
  1221  0009DA  6E12               	movwf	lcd_print@dato,c
  1222  0009DC  0E08               	movlw	high STR_6
  1223  0009DE  6E13               	movwf	lcd_print@dato+1,c
  1224  0009E0  EC84  F016         	call	_lcd_print	;wreg free
  1225  0009E4                     l5301:
  1226                           
  1227                           ;LAB4.c: 373: tecla=255;
  1228  0009E4  0E00               	movlw	0
  1229  0009E6  6E50               	movwf	_tecla+1,c
  1230  0009E8  684F               	setf	_tecla,c
  1231                           
  1232                           ;LAB4.c: 374: lcd_goto(15,2);
  1233  0009EA  0E00               	movlw	0
  1234  0009EC  6E13               	movwf	lcd_goto@x+1,c
  1235  0009EE  0E0F               	movlw	15
  1236  0009F0  6E12               	movwf	lcd_goto@x,c
  1237  0009F2  0E00               	movlw	0
  1238  0009F4  6E15               	movwf	lcd_goto@y+1,c
  1239  0009F6  0E02               	movlw	2
  1240  0009F8  6E14               	movwf	lcd_goto@y,c
  1241  0009FA  EC4C  F016         	call	_lcd_goto	;wreg free
  1242  0009FE                     l5305:
  1243  0009FE  044F               	decf	_tecla,w,c
  1244  000A00  1050               	iorwf	_tecla+1,w,c
  1245  000A02  B4D8               	btfsc	status,2,c
  1246  000A04  D00F               	goto	l257
  1247  000A06  0E02               	movlw	2
  1248  000A08  184F               	xorwf	_tecla,w,c
  1249  000A0A  1050               	iorwf	_tecla+1,w,c
  1250  000A0C  B4D8               	btfsc	status,2,c
  1251  000A0E  D00A               	goto	l257
  1252  000A10  0E03               	movlw	3
  1253  000A12  184F               	xorwf	_tecla,w,c
  1254  000A14  1050               	iorwf	_tecla+1,w,c
  1255  000A16  B4D8               	btfsc	status,2,c
  1256  000A18  D005               	goto	l257
  1257  000A1A  0E04               	movlw	4
  1258  000A1C  184F               	xorwf	_tecla,w,c
  1259  000A1E  1050               	iorwf	_tecla+1,w,c
  1260  000A20  A4D8               	btfss	status,2,c
  1261  000A22  D7ED               	goto	l5305
  1262  000A24                     l257:
  1263                           
  1264                           ;LAB4.c: 376: }
  1265                           ;LAB4.c: 377: opcion=tecla;
  1266  000A24  C04F  F049         	movff	_tecla,_opcion
  1267  000A28  C050  F04A         	movff	_tecla+1,_opcion+1
  1268  000A2C                     l259:
  1269  000A2C  B2A6               	btfsc	4006,1,c	;volatile
  1270  000A2E  D7FE               	goto	l259
  1271  000A30  0E00               	movlw	0
  1272  000A32  6EA9               	movwf	4009,c	;volatile
  1273  000A34  C049  FFA8         	movff	_opcion,4008	;volatile
  1274  000A38  90D8               	bcf	status,0,c	;volatile
  1275  000A3A  BEF2               	btfsc	intcon,7,c	;volatile
  1276  000A3C  80D8               	bsf	status,0,c	;volatile
  1277  000A3E  9EF2               	bcf	intcon,7,c	;volatile
  1278  000A40  84A6               	bsf	4006,2,c	;volatile
  1279  000A42  0E55               	movlw	85
  1280  000A44  6EA7               	movwf	4007,c	;volatile
  1281  000A46  0EAA               	movlw	170
  1282  000A48  6EA7               	movwf	4007,c	;volatile
  1283  000A4A  82A6               	bsf	4006,1,c	;volatile
  1284  000A4C  94A6               	bcf	4006,2,c	;volatile
  1285  000A4E  B0D8               	btfsc	status,0,c	;volatile
  1286  000A50  8EF2               	bsf	intcon,7,c	;volatile
  1287                           
  1288                           ;LAB4.c: 379: lcd_dato(tecla+48);
  1289  000A52  504F               	movf	_tecla,w,c
  1290  000A54  0F30               	addlw	48
  1291  000A56  ECE1  F016         	call	_lcd_dato
  1292  000A5A                     l5335:
  1293  000A5A  0E0A               	movlw	10
  1294  000A5C  184F               	xorwf	_tecla,w,c
  1295  000A5E  1050               	iorwf	_tecla+1,w,c
  1296  000A60  B4D8               	btfsc	status,2,c
  1297  000A62  D005               	goto	l5339
  1298  000A64  0E0F               	movlw	15
  1299  000A66  184F               	xorwf	_tecla,w,c
  1300  000A68  1050               	iorwf	_tecla+1,w,c
  1301  000A6A  A4D8               	btfss	status,2,c
  1302  000A6C  D7F6               	goto	l5335
  1303  000A6E                     l5339:
  1304                           
  1305                           ;LAB4.c: 381: }
  1306                           ;LAB4.c: 383: if (tecla==10){
  1307  000A6E  0E0A               	movlw	10
  1308  000A70  184F               	xorwf	_tecla,w,c
  1309  000A72  1050               	iorwf	_tecla+1,w,c
  1310  000A74  B4D8               	btfsc	status,2,c
  1311  000A76  D7B6               	goto	l5301
  1312  000A78                     l5343:
  1313                           
  1314                           ;LAB4.c: 388: if(opcion==1){
  1315  000A78  0449               	decf	_opcion,w,c
  1316  000A7A  104A               	iorwf	_opcion+1,w,c
  1317  000A7C  A4D8               	btfss	status,2,c
  1318  000A7E  D061               	goto	l5399
  1319                           
  1320                           ;LAB4.c: 390: if(frecuencia!=255){
  1321  000A80  284D               	incf	_frecuencia,w,c
  1322  000A82  104E               	iorwf	_frecuencia+1,w,c
  1323  000A84  B4D8               	btfsc	status,2,c
  1324  000A86                     l5349:
  1325                           
  1326                           ;LAB4.c: 394: ingresar_frecuencia();
  1327  000A86  EC6C  F00D         	call	_ingresar_frecuencia	;wreg free
  1328                           
  1329                           ;LAB4.c: 397: lcd_clear_display();
  1330                           
  1331                           ;LAB4.c: 396: SALIR1:
  1332  000A8A  EC0D  F017         	call	_lcd_clear_display	;wreg free
  1333                           
  1334                           ;LAB4.c: 398: lcd_goto(1,1);
  1335  000A8E  0E00               	movlw	0
  1336  000A90  6E13               	movwf	lcd_goto@x+1,c
  1337  000A92  0E01               	movlw	1
  1338  000A94  6E12               	movwf	lcd_goto@x,c
  1339  000A96  0E00               	movlw	0
  1340  000A98  6E15               	movwf	lcd_goto@y+1,c
  1341  000A9A  0E01               	movlw	1
  1342  000A9C  6E14               	movwf	lcd_goto@y,c
  1343  000A9E  EC4C  F016         	call	_lcd_goto	;wreg free
  1344                           
  1345                           ;LAB4.c: 399: lcd_print("SENIAL RAMPA");
  1346  000AA2  0EAE               	movlw	low STR_7
  1347  000AA4  6E12               	movwf	lcd_print@dato,c
  1348  000AA6  0E08               	movlw	high STR_7
  1349  000AA8  6E13               	movwf	lcd_print@dato+1,c
  1350  000AAA  EC84  F016         	call	_lcd_print	;wreg free
  1351                           
  1352                           ;LAB4.c: 400: lcd_goto(1,2);
  1353  000AAE  0E00               	movlw	0
  1354  000AB0  6E13               	movwf	lcd_goto@x+1,c
  1355  000AB2  0E01               	movlw	1
  1356  000AB4  6E12               	movwf	lcd_goto@x,c
  1357  000AB6  0E00               	movlw	0
  1358  000AB8  6E15               	movwf	lcd_goto@y+1,c
  1359  000ABA  0E02               	movlw	2
  1360  000ABC  6E14               	movwf	lcd_goto@y,c
  1361  000ABE  EC4C  F016         	call	_lcd_goto	;wreg free
  1362                           
  1363                           ;LAB4.c: 401: lcd_print("FREC.=    Hz");
  1364  000AC2  0EC8               	movlw	low STR_8
  1365  000AC4  6E12               	movwf	lcd_print@dato,c
  1366  000AC6  0E08               	movlw	high STR_8
  1367  000AC8  6E13               	movwf	lcd_print@dato+1,c
  1368  000ACA  EC84  F016         	call	_lcd_print	;wreg free
  1369                           
  1370                           ;LAB4.c: 402: lcd_goto(7,2);
  1371  000ACE  0E00               	movlw	0
  1372  000AD0  6E13               	movwf	lcd_goto@x+1,c
  1373  000AD2  0E07               	movlw	7
  1374  000AD4  6E12               	movwf	lcd_goto@x,c
  1375  000AD6  0E00               	movlw	0
  1376  000AD8  6E15               	movwf	lcd_goto@y+1,c
  1377  000ADA  0E02               	movlw	2
  1378  000ADC  6E14               	movwf	lcd_goto@y,c
  1379  000ADE  EC4C  F016         	call	_lcd_goto	;wreg free
  1380                           
  1381                           ;LAB4.c: 403: centenas=( EEADR = 1, (void)0, RD = 1, EEDATA);
  1382  000AE2  0E01               	movlw	1
  1383  000AE4  6EA9               	movwf	4009,c	;volatile
  1384  000AE6  80A6               	bsf	4006,0,c	;volatile
  1385  000AE8  CFA8 F043          	movff	4008,_centenas	;volatile
  1386  000AEC  6A44               	clrf	_centenas+1,c
  1387                           
  1388                           ;LAB4.c: 404: lcd_dato(centenas+48);
  1389  000AEE  5043               	movf	_centenas,w,c
  1390  000AF0  0F30               	addlw	48
  1391  000AF2  ECE1  F016         	call	_lcd_dato
  1392                           
  1393                           ;LAB4.c: 405: decenas=( EEADR = 2, (void)0, RD = 1, EEDATA);
  1394  000AF6  0E02               	movlw	2
  1395  000AF8  6EA9               	movwf	4009,c	;volatile
  1396  000AFA  80A6               	bsf	4006,0,c	;volatile
  1397  000AFC  CFA8 F045          	movff	4008,_decenas	;volatile
  1398  000B00  6A46               	clrf	_decenas+1,c
  1399                           
  1400                           ;LAB4.c: 406: lcd_dato(decenas+48);
  1401  000B02  5045               	movf	_decenas,w,c
  1402  000B04  0F30               	addlw	48
  1403  000B06  ECE1  F016         	call	_lcd_dato
  1404                           
  1405                           ;LAB4.c: 407: unidades=( EEADR = 3, (void)0, RD = 1, EEDATA);
  1406  000B0A  0E03               	movlw	3
  1407  000B0C  6EA9               	movwf	4009,c	;volatile
  1408  000B0E  80A6               	bsf	4006,0,c	;volatile
  1409  000B10  CFA8 F04B          	movff	4008,_unidades	;volatile
  1410  000B14  6A4C               	clrf	_unidades+1,c
  1411                           
  1412                           ;LAB4.c: 408: lcd_dato(unidades+48);
  1413  000B16  504B               	movf	_unidades,w,c
  1414  000B18  0F30               	addlw	48
  1415  000B1A  ECE1  F016         	call	_lcd_dato
  1416                           
  1417                           ;LAB4.c: 409: frecuencia=( EEADR = 4, (void)0, RD = 1, EEDATA);
  1418  000B1E  0E04               	movlw	4
  1419  000B20  6EA9               	movwf	4009,c	;volatile
  1420  000B22  80A6               	bsf	4006,0,c	;volatile
  1421  000B24  CFA8 F04D          	movff	4008,_frecuencia	;volatile
  1422  000B28  6A4E               	clrf	_frecuencia+1,c
  1423                           
  1424                           ;LAB4.c: 410: rampa(frecuencia);
  1425  000B2A  C04D  F0CA         	movff	_frecuencia,rampa@frecu
  1426  000B2E  C04E  F0CB         	movff	_frecuencia+1,rampa@frecu+1
  1427  000B32  ECD4  F00A         	call	_rampa	;wreg free
  1428                           
  1429                           ;LAB4.c: 411: if(tecla==11){
  1430  000B36  0E0B               	movlw	11
  1431  000B38  184F               	xorwf	_tecla,w,c
  1432  000B3A  1050               	iorwf	_tecla+1,w,c
  1433  000B3C  B4D8               	btfsc	status,2,c
  1434  000B3E  D7A3               	goto	l5349
  1435  000B40  D72F               	goto	l5291
  1436  000B42                     l5399:
  1437                           
  1438                           ;LAB4.c: 415: }
  1439                           ;LAB4.c: 417: if(opcion==2){
  1440  000B42  0E02               	movlw	2
  1441  000B44  1849               	xorwf	_opcion,w,c
  1442  000B46  104A               	iorwf	_opcion+1,w,c
  1443  000B48  A4D8               	btfss	status,2,c
  1444  000B4A  D061               	goto	l5455
  1445                           
  1446                           ;LAB4.c: 419: if(frecuencia!=255){
  1447  000B4C  284D               	incf	_frecuencia,w,c
  1448  000B4E  104E               	iorwf	_frecuencia+1,w,c
  1449  000B50  B4D8               	btfsc	status,2,c
  1450  000B52                     l5405:
  1451                           
  1452                           ;LAB4.c: 423: ingresar_frecuencia();
  1453  000B52  EC6C  F00D         	call	_ingresar_frecuencia	;wreg free
  1454                           
  1455                           ;LAB4.c: 425: lcd_clear_display();
  1456                           
  1457                           ;LAB4.c: 424: SALIR2:
  1458  000B56  EC0D  F017         	call	_lcd_clear_display	;wreg free
  1459                           
  1460                           ;LAB4.c: 426: lcd_goto(1,1);
  1461  000B5A  0E00               	movlw	0
  1462  000B5C  6E13               	movwf	lcd_goto@x+1,c
  1463  000B5E  0E01               	movlw	1
  1464  000B60  6E12               	movwf	lcd_goto@x,c
  1465  000B62  0E00               	movlw	0
  1466  000B64  6E15               	movwf	lcd_goto@y+1,c
  1467  000B66  0E01               	movlw	1
  1468  000B68  6E14               	movwf	lcd_goto@y,c
  1469  000B6A  EC4C  F016         	call	_lcd_goto	;wreg free
  1470                           
  1471                           ;LAB4.c: 427: lcd_print("SENIAL CUADRADA");
  1472  000B6E  0E8E               	movlw	low STR_9
  1473  000B70  6E12               	movwf	lcd_print@dato,c
  1474  000B72  0E08               	movlw	high STR_9
  1475  000B74  6E13               	movwf	lcd_print@dato+1,c
  1476  000B76  EC84  F016         	call	_lcd_print	;wreg free
  1477                           
  1478                           ;LAB4.c: 428: lcd_goto(1,2);
  1479  000B7A  0E00               	movlw	0
  1480  000B7C  6E13               	movwf	lcd_goto@x+1,c
  1481  000B7E  0E01               	movlw	1
  1482  000B80  6E12               	movwf	lcd_goto@x,c
  1483  000B82  0E00               	movlw	0
  1484  000B84  6E15               	movwf	lcd_goto@y+1,c
  1485  000B86  0E02               	movlw	2
  1486  000B88  6E14               	movwf	lcd_goto@y,c
  1487  000B8A  EC4C  F016         	call	_lcd_goto	;wreg free
  1488                           
  1489                           ;LAB4.c: 429: lcd_print("FREC.=    Hz");
  1490  000B8E  0EC8               	movlw	low STR_8
  1491  000B90  6E12               	movwf	lcd_print@dato,c
  1492  000B92  0E08               	movlw	high STR_8
  1493  000B94  6E13               	movwf	lcd_print@dato+1,c
  1494  000B96  EC84  F016         	call	_lcd_print	;wreg free
  1495                           
  1496                           ;LAB4.c: 430: lcd_goto(7,2);
  1497  000B9A  0E00               	movlw	0
  1498  000B9C  6E13               	movwf	lcd_goto@x+1,c
  1499  000B9E  0E07               	movlw	7
  1500  000BA0  6E12               	movwf	lcd_goto@x,c
  1501  000BA2  0E00               	movlw	0
  1502  000BA4  6E15               	movwf	lcd_goto@y+1,c
  1503  000BA6  0E02               	movlw	2
  1504  000BA8  6E14               	movwf	lcd_goto@y,c
  1505  000BAA  EC4C  F016         	call	_lcd_goto	;wreg free
  1506                           
  1507                           ;LAB4.c: 431: centenas=( EEADR = 1, (void)0, RD = 1, EEDATA);
  1508  000BAE  0E01               	movlw	1
  1509  000BB0  6EA9               	movwf	4009,c	;volatile
  1510  000BB2  80A6               	bsf	4006,0,c	;volatile
  1511  000BB4  CFA8 F043          	movff	4008,_centenas	;volatile
  1512  000BB8  6A44               	clrf	_centenas+1,c
  1513                           
  1514                           ;LAB4.c: 432: lcd_dato(centenas+48);
  1515  000BBA  5043               	movf	_centenas,w,c
  1516  000BBC  0F30               	addlw	48
  1517  000BBE  ECE1  F016         	call	_lcd_dato
  1518                           
  1519                           ;LAB4.c: 433: decenas=( EEADR = 2, (void)0, RD = 1, EEDATA);
  1520  000BC2  0E02               	movlw	2
  1521  000BC4  6EA9               	movwf	4009,c	;volatile
  1522  000BC6  80A6               	bsf	4006,0,c	;volatile
  1523  000BC8  CFA8 F045          	movff	4008,_decenas	;volatile
  1524  000BCC  6A46               	clrf	_decenas+1,c
  1525                           
  1526                           ;LAB4.c: 434: lcd_dato(decenas+48);
  1527  000BCE  5045               	movf	_decenas,w,c
  1528  000BD0  0F30               	addlw	48
  1529  000BD2  ECE1  F016         	call	_lcd_dato
  1530                           
  1531                           ;LAB4.c: 435: unidades=( EEADR = 3, (void)0, RD = 1, EEDATA);
  1532  000BD6  0E03               	movlw	3
  1533  000BD8  6EA9               	movwf	4009,c	;volatile
  1534  000BDA  80A6               	bsf	4006,0,c	;volatile
  1535  000BDC  CFA8 F04B          	movff	4008,_unidades	;volatile
  1536  000BE0  6A4C               	clrf	_unidades+1,c
  1537                           
  1538                           ;LAB4.c: 436: lcd_dato(unidades+48);
  1539  000BE2  504B               	movf	_unidades,w,c
  1540  000BE4  0F30               	addlw	48
  1541  000BE6  ECE1  F016         	call	_lcd_dato
  1542                           
  1543                           ;LAB4.c: 437: frecuencia=( EEADR = 4, (void)0, RD = 1, EEDATA);
  1544  000BEA  0E04               	movlw	4
  1545  000BEC  6EA9               	movwf	4009,c	;volatile
  1546  000BEE  80A6               	bsf	4006,0,c	;volatile
  1547  000BF0  CFA8 F04D          	movff	4008,_frecuencia	;volatile
  1548  000BF4  6A4E               	clrf	_frecuencia+1,c
  1549                           
  1550                           ;LAB4.c: 438: cuadrada(frecuencia);
  1551  000BF6  C04D  F0CA         	movff	_frecuencia,cuadrada@frec
  1552  000BFA  C04E  F0CB         	movff	_frecuencia+1,cuadrada@frec+1
  1553  000BFE  EC0B  F009         	call	_cuadrada	;wreg free
  1554                           
  1555                           ;LAB4.c: 439: if(tecla==11){
  1556  000C02  0E0B               	movlw	11
  1557  000C04  184F               	xorwf	_tecla,w,c
  1558  000C06  1050               	iorwf	_tecla+1,w,c
  1559  000C08  B4D8               	btfsc	status,2,c
  1560  000C0A  D7A3               	goto	l5405
  1561  000C0C  D6C9               	goto	l5291
  1562  000C0E                     l5455:
  1563                           
  1564                           ;LAB4.c: 443: }
  1565                           ;LAB4.c: 445: if(opcion==3){
  1566  000C0E  0E03               	movlw	3
  1567  000C10  1849               	xorwf	_opcion,w,c
  1568  000C12  104A               	iorwf	_opcion+1,w,c
  1569  000C14  A4D8               	btfss	status,2,c
  1570  000C16  D061               	goto	l5511
  1571                           
  1572                           ;LAB4.c: 447: if(frecuencia!=255){
  1573  000C18  284D               	incf	_frecuencia,w,c
  1574  000C1A  104E               	iorwf	_frecuencia+1,w,c
  1575  000C1C  B4D8               	btfsc	status,2,c
  1576  000C1E                     l5461:
  1577                           
  1578                           ;LAB4.c: 451: ingresar_frecuencia();
  1579  000C1E  EC6C  F00D         	call	_ingresar_frecuencia	;wreg free
  1580                           
  1581                           ;LAB4.c: 453: lcd_clear_display();
  1582                           
  1583                           ;LAB4.c: 452: SALIR3:
  1584  000C22  EC0D  F017         	call	_lcd_clear_display	;wreg free
  1585                           
  1586                           ;LAB4.c: 454: lcd_goto(1,1);
  1587  000C26  0E00               	movlw	0
  1588  000C28  6E13               	movwf	lcd_goto@x+1,c
  1589  000C2A  0E01               	movlw	1
  1590  000C2C  6E12               	movwf	lcd_goto@x,c
  1591  000C2E  0E00               	movlw	0
  1592  000C30  6E15               	movwf	lcd_goto@y+1,c
  1593  000C32  0E01               	movlw	1
  1594  000C34  6E14               	movwf	lcd_goto@y,c
  1595  000C36  EC4C  F016         	call	_lcd_goto	;wreg free
  1596                           
  1597                           ;LAB4.c: 455: lcd_print("SENIAL SENO");
  1598  000C3A  0ED5               	movlw	low STR_11
  1599  000C3C  6E12               	movwf	lcd_print@dato,c
  1600  000C3E  0E08               	movlw	high STR_11
  1601  000C40  6E13               	movwf	lcd_print@dato+1,c
  1602  000C42  EC84  F016         	call	_lcd_print	;wreg free
  1603                           
  1604                           ;LAB4.c: 456: lcd_goto(1,2);
  1605  000C46  0E00               	movlw	0
  1606  000C48  6E13               	movwf	lcd_goto@x+1,c
  1607  000C4A  0E01               	movlw	1
  1608  000C4C  6E12               	movwf	lcd_goto@x,c
  1609  000C4E  0E00               	movlw	0
  1610  000C50  6E15               	movwf	lcd_goto@y+1,c
  1611  000C52  0E02               	movlw	2
  1612  000C54  6E14               	movwf	lcd_goto@y,c
  1613  000C56  EC4C  F016         	call	_lcd_goto	;wreg free
  1614                           
  1615                           ;LAB4.c: 457: lcd_print("FREC.=    Hz");
  1616  000C5A  0EC8               	movlw	low STR_8
  1617  000C5C  6E12               	movwf	lcd_print@dato,c
  1618  000C5E  0E08               	movlw	high STR_8
  1619  000C60  6E13               	movwf	lcd_print@dato+1,c
  1620  000C62  EC84  F016         	call	_lcd_print	;wreg free
  1621                           
  1622                           ;LAB4.c: 458: lcd_goto(7,2);
  1623  000C66  0E00               	movlw	0
  1624  000C68  6E13               	movwf	lcd_goto@x+1,c
  1625  000C6A  0E07               	movlw	7
  1626  000C6C  6E12               	movwf	lcd_goto@x,c
  1627  000C6E  0E00               	movlw	0
  1628  000C70  6E15               	movwf	lcd_goto@y+1,c
  1629  000C72  0E02               	movlw	2
  1630  000C74  6E14               	movwf	lcd_goto@y,c
  1631  000C76  EC4C  F016         	call	_lcd_goto	;wreg free
  1632                           
  1633                           ;LAB4.c: 459: centenas=( EEADR = 1, (void)0, RD = 1, EEDATA);
  1634  000C7A  0E01               	movlw	1
  1635  000C7C  6EA9               	movwf	4009,c	;volatile
  1636  000C7E  80A6               	bsf	4006,0,c	;volatile
  1637  000C80  CFA8 F043          	movff	4008,_centenas	;volatile
  1638  000C84  6A44               	clrf	_centenas+1,c
  1639                           
  1640                           ;LAB4.c: 460: lcd_dato(centenas+48);
  1641  000C86  5043               	movf	_centenas,w,c
  1642  000C88  0F30               	addlw	48
  1643  000C8A  ECE1  F016         	call	_lcd_dato
  1644                           
  1645                           ;LAB4.c: 461: decenas=( EEADR = 2, (void)0, RD = 1, EEDATA);
  1646  000C8E  0E02               	movlw	2
  1647  000C90  6EA9               	movwf	4009,c	;volatile
  1648  000C92  80A6               	bsf	4006,0,c	;volatile
  1649  000C94  CFA8 F045          	movff	4008,_decenas	;volatile
  1650  000C98  6A46               	clrf	_decenas+1,c
  1651                           
  1652                           ;LAB4.c: 462: lcd_dato(decenas+48);
  1653  000C9A  5045               	movf	_decenas,w,c
  1654  000C9C  0F30               	addlw	48
  1655  000C9E  ECE1  F016         	call	_lcd_dato
  1656                           
  1657                           ;LAB4.c: 463: unidades=( EEADR = 3, (void)0, RD = 1, EEDATA);
  1658  000CA2  0E03               	movlw	3
  1659  000CA4  6EA9               	movwf	4009,c	;volatile
  1660  000CA6  80A6               	bsf	4006,0,c	;volatile
  1661  000CA8  CFA8 F04B          	movff	4008,_unidades	;volatile
  1662  000CAC  6A4C               	clrf	_unidades+1,c
  1663                           
  1664                           ;LAB4.c: 464: lcd_dato(unidades+48);
  1665  000CAE  504B               	movf	_unidades,w,c
  1666  000CB0  0F30               	addlw	48
  1667  000CB2  ECE1  F016         	call	_lcd_dato
  1668                           
  1669                           ;LAB4.c: 465: frecuencia=( EEADR = 4, (void)0, RD = 1, EEDATA);
  1670  000CB6  0E04               	movlw	4
  1671  000CB8  6EA9               	movwf	4009,c	;volatile
  1672  000CBA  80A6               	bsf	4006,0,c	;volatile
  1673  000CBC  CFA8 F04D          	movff	4008,_frecuencia	;volatile
  1674  000CC0  6A4E               	clrf	_frecuencia+1,c
  1675                           
  1676                           ;LAB4.c: 466: sen(frecuencia);
  1677  000CC2  C04D  F0CA         	movff	_frecuencia,sen@frecuen
  1678  000CC6  C04E  F0CB         	movff	_frecuencia+1,sen@frecuen+1
  1679  000CCA  ECEB  F006         	call	_sen	;wreg free
  1680                           
  1681                           ;LAB4.c: 467: if(tecla==11){
  1682  000CCE  0E0B               	movlw	11
  1683  000CD0  184F               	xorwf	_tecla,w,c
  1684  000CD2  1050               	iorwf	_tecla+1,w,c
  1685  000CD4  B4D8               	btfsc	status,2,c
  1686  000CD6  D7A3               	goto	l5461
  1687  000CD8  D663               	goto	l5291
  1688  000CDA                     l5511:
  1689                           
  1690                           ;LAB4.c: 471: }
  1691                           ;LAB4.c: 473: if (opcion==4){
  1692  000CDA  0E04               	movlw	4
  1693  000CDC  1849               	xorwf	_opcion,w,c
  1694  000CDE  104A               	iorwf	_opcion+1,w,c
  1695  000CE0  A4D8               	btfss	status,2,c
  1696  000CE2  EF0B  F000         	goto	start
  1697  000CE6                     l288:
  1698  000CE6  B2A6               	btfsc	4006,1,c	;volatile
  1699  000CE8  D7FE               	goto	l288
  1700  000CEA  0E00               	movlw	0
  1701  000CEC  6EA9               	movwf	4009,c	;volatile
  1702  000CEE  68A8               	setf	4008,c	;volatile
  1703  000CF0  90D8               	bcf	status,0,c	;volatile
  1704  000CF2  BEF2               	btfsc	intcon,7,c	;volatile
  1705  000CF4  80D8               	bsf	status,0,c	;volatile
  1706  000CF6  9EF2               	bcf	intcon,7,c	;volatile
  1707  000CF8  84A6               	bsf	4006,2,c	;volatile
  1708  000CFA  0E55               	movlw	85
  1709  000CFC  6EA7               	movwf	4007,c	;volatile
  1710  000CFE  0EAA               	movlw	170
  1711  000D00  6EA7               	movwf	4007,c	;volatile
  1712  000D02  82A6               	bsf	4006,1,c	;volatile
  1713  000D04  94A6               	bcf	4006,2,c	;volatile
  1714  000D06  B0D8               	btfsc	status,0,c	;volatile
  1715  000D08  8EF2               	bsf	intcon,7,c	;volatile
  1716  000D0A                     l295:
  1717  000D0A  B2A6               	btfsc	4006,1,c	;volatile
  1718  000D0C  D7FE               	goto	l295
  1719  000D0E  0E01               	movlw	1
  1720  000D10  6EA9               	movwf	4009,c	;volatile
  1721  000D12  68A8               	setf	4008,c	;volatile
  1722  000D14  90D8               	bcf	status,0,c	;volatile
  1723  000D16  BEF2               	btfsc	intcon,7,c	;volatile
  1724  000D18  80D8               	bsf	status,0,c	;volatile
  1725  000D1A  9EF2               	bcf	intcon,7,c	;volatile
  1726  000D1C  84A6               	bsf	4006,2,c	;volatile
  1727  000D1E  0E55               	movlw	85
  1728  000D20  6EA7               	movwf	4007,c	;volatile
  1729  000D22  0EAA               	movlw	170
  1730  000D24  6EA7               	movwf	4007,c	;volatile
  1731  000D26  82A6               	bsf	4006,1,c	;volatile
  1732  000D28  94A6               	bcf	4006,2,c	;volatile
  1733  000D2A  B0D8               	btfsc	status,0,c	;volatile
  1734  000D2C  8EF2               	bsf	intcon,7,c	;volatile
  1735  000D2E                     l302:
  1736  000D2E  B2A6               	btfsc	4006,1,c	;volatile
  1737  000D30  D7FE               	goto	l302
  1738  000D32  0E02               	movlw	2
  1739  000D34  6EA9               	movwf	4009,c	;volatile
  1740  000D36  68A8               	setf	4008,c	;volatile
  1741  000D38  90D8               	bcf	status,0,c	;volatile
  1742  000D3A  BEF2               	btfsc	intcon,7,c	;volatile
  1743  000D3C  80D8               	bsf	status,0,c	;volatile
  1744  000D3E  9EF2               	bcf	intcon,7,c	;volatile
  1745  000D40  84A6               	bsf	4006,2,c	;volatile
  1746  000D42  0E55               	movlw	85
  1747  000D44  6EA7               	movwf	4007,c	;volatile
  1748  000D46  0EAA               	movlw	170
  1749  000D48  6EA7               	movwf	4007,c	;volatile
  1750  000D4A  82A6               	bsf	4006,1,c	;volatile
  1751  000D4C  94A6               	bcf	4006,2,c	;volatile
  1752  000D4E  B0D8               	btfsc	status,0,c	;volatile
  1753  000D50  8EF2               	bsf	intcon,7,c	;volatile
  1754  000D52                     l309:
  1755  000D52  B2A6               	btfsc	4006,1,c	;volatile
  1756  000D54  D7FE               	goto	l309
  1757  000D56  0E03               	movlw	3
  1758  000D58  6EA9               	movwf	4009,c	;volatile
  1759  000D5A  68A8               	setf	4008,c	;volatile
  1760  000D5C  90D8               	bcf	status,0,c	;volatile
  1761  000D5E  BEF2               	btfsc	intcon,7,c	;volatile
  1762  000D60  80D8               	bsf	status,0,c	;volatile
  1763  000D62  9EF2               	bcf	intcon,7,c	;volatile
  1764  000D64  84A6               	bsf	4006,2,c	;volatile
  1765  000D66  0E55               	movlw	85
  1766  000D68  6EA7               	movwf	4007,c	;volatile
  1767  000D6A  0EAA               	movlw	170
  1768  000D6C  6EA7               	movwf	4007,c	;volatile
  1769  000D6E  82A6               	bsf	4006,1,c	;volatile
  1770  000D70  94A6               	bcf	4006,2,c	;volatile
  1771  000D72  B0D8               	btfsc	status,0,c	;volatile
  1772  000D74  8EF2               	bsf	intcon,7,c	;volatile
  1773  000D76                     l316:
  1774  000D76  B2A6               	btfsc	4006,1,c	;volatile
  1775  000D78  D7FE               	goto	l316
  1776  000D7A  0E04               	movlw	4
  1777  000D7C  6EA9               	movwf	4009,c	;volatile
  1778  000D7E  68A8               	setf	4008,c	;volatile
  1779  000D80  90D8               	bcf	status,0,c	;volatile
  1780  000D82  BEF2               	btfsc	intcon,7,c	;volatile
  1781  000D84  80D8               	bsf	status,0,c	;volatile
  1782  000D86  9EF2               	bcf	intcon,7,c	;volatile
  1783  000D88  84A6               	bsf	4006,2,c	;volatile
  1784  000D8A  0E55               	movlw	85
  1785  000D8C  6EA7               	movwf	4007,c	;volatile
  1786  000D8E  0EAA               	movlw	170
  1787  000D90  6EA7               	movwf	4007,c	;volatile
  1788  000D92  82A6               	bsf	4006,1,c	;volatile
  1789  000D94  94A6               	bcf	4006,2,c	;volatile
  1790  000D96  B0D8               	btfsc	status,0,c	;volatile
  1791  000D98  8EF2               	bsf	intcon,7,c	;volatile
  1792                           
  1793                           ;LAB4.c: 479: frecuencia=255;
  1794  000D9A  0E00               	movlw	0
  1795  000D9C  6E4E               	movwf	_frecuencia+1,c
  1796  000D9E  684D               	setf	_frecuencia,c
  1797                           
  1798                           ;LAB4.c: 480: lcd_clear_display();
  1799  000DA0  EC0D  F017         	call	_lcd_clear_display	;wreg free
  1800                           
  1801                           ;LAB4.c: 481: lcd_goto(1,1);
  1802  000DA4  0E00               	movlw	0
  1803  000DA6  6E13               	movwf	lcd_goto@x+1,c
  1804  000DA8  0E01               	movlw	1
  1805  000DAA  6E12               	movwf	lcd_goto@x,c
  1806  000DAC  0E00               	movlw	0
  1807  000DAE  6E15               	movwf	lcd_goto@y+1,c
  1808  000DB0  0E01               	movlw	1
  1809  000DB2  6E14               	movwf	lcd_goto@y,c
  1810  000DB4  EC4C  F016         	call	_lcd_goto	;wreg free
  1811                           
  1812                           ;LAB4.c: 482: lcd_print("BORRADO EXITOSO");
  1813  000DB8  0E9E               	movlw	low STR_13
  1814  000DBA  6E12               	movwf	lcd_print@dato,c
  1815  000DBC  0E08               	movlw	high STR_13
  1816  000DBE  6E13               	movwf	lcd_print@dato+1,c
  1817  000DC0  EC84  F016         	call	_lcd_print	;wreg free
  1818                           
  1819                           ;LAB4.c: 483: tecla=255;
  1820  000DC4  0E00               	movlw	0
  1821  000DC6  6E50               	movwf	_tecla+1,c
  1822  000DC8  684F               	setf	_tecla,c
  1823  000DCA                     l5623:
  1824  000DCA  0E0F               	movlw	15
  1825  000DCC  184F               	xorwf	_tecla,w,c
  1826  000DCE  1050               	iorwf	_tecla+1,w,c
  1827  000DD0  B4D8               	btfsc	status,2,c
  1828  000DD2  D5E6               	goto	l5291
  1829  000DD4  D7FA               	goto	l5623
  1830  000DD6                     __end_of_main:
  1831                           	opt stack 0
  1832                           tblptru	equ	0xFF8
  1833                           tblptrh	equ	0xFF7
  1834                           tblptrl	equ	0xFF6
  1835                           tablat	equ	0xFF5
  1836                           intcon	equ	0xFF2
  1837                           intcon2	equ	0xFF1
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postdec1	equ	0xFE5
  1841                           fsr1l	equ	0xFE1
  1842                           status	equ	0xFD8
  1843                           
  1844 ;; *************** function _sen *****************
  1845 ;; Defined at:
  1846 ;;		line 265 in file "LAB4.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  frecuen         2   34[BANK0 ] int 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;  i               2   46[BANK0 ] int 
  1851 ;;  i               2   44[BANK0 ] int 
  1852 ;;  i               2   42[BANK0 ] int 
  1853 ;;  t               2   48[BANK0 ] int 
  1854 ;;  b               2   50[BANK0 ] int 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2   34[BANK0 ] int 
  1857 ;; Registers used:
  1858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1864 ;;      Params:         0       2       0       0       0       0       0       0       0
  1865 ;;      Locals:         0      16       0       0       0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1867 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1868 ;;Total ram usage:       18 bytes
  1869 ;; Hardware stack levels used:    1
  1870 ;; Hardware stack levels required when called:    6
  1871 ;; This function calls:
  1872 ;;		_Delay100TCYx
  1873 ;;		_Delay10TCYx
  1874 ;;		_Delay1TCYx
  1875 ;;		___awdiv
  1876 ;;		___awtoft
  1877 ;;		___ftmul
  1878 ;;		___fttol
  1879 ;;		_pow
  1880 ;; This function is called by:
  1881 ;;		_main
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text1
  1886  000DD6                     __ptext1:
  1887                           	opt stack 0
  1888  000DD6                     _sen:
  1889                           	opt stack 24
  1890                           
  1891                           ;LAB4.c: 267: if (frecuen >=40){
  1892                           
  1893                           ;incstack = 0
  1894  000DD6  0100               	movlb	0	; () banked
  1895  000DD8  BFCB               	btfsc	(sen@frecuen+1)& (0+255),7,b
  1896  000DDA  D0B7               	goto	l5169
  1897  000DDC  0100               	movlb	0	; () banked
  1898  000DDE  51CB               	movf	(sen@frecuen+1)& (0+255),w,b
  1899  000DE0  E105               	bnz	u5330
  1900  000DE2  0E28               	movlw	40
  1901  000DE4  0100               	movlb	0	; () banked
  1902  000DE6  5DCA               	subwf	sen@frecuen& (0+255),w,b
  1903  000DE8  A0D8               	btfss	status,0,c
  1904  000DEA  D0AF               	goto	l5169
  1905  000DEC                     u5330:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;LAB4.c: 268: int b=0;
  1909  000DEC  0E00               	movlw	0
  1910  000DEE  0100               	movlb	0	; () banked
  1911  000DF0  6FDB               	movwf	(sen@b+1)& (0+255),b
  1912  000DF2  0E00               	movlw	0
  1913  000DF4  6FDA               	movwf	sen@b& (0+255),b
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;LAB4.c: 269: b=12686*pow(frecuen,-1.59);
  1917  000DF6  C0CA  F017         	movff	sen@frecuen,___awtoft@c
  1918  000DFA  C0CB  F018         	movff	sen@frecuen+1,___awtoft@c+1
  1919  000DFE  EC68  F016         	call	___awtoft	;wreg free
  1920  000E02  C017  F0CC         	movff	?___awtoft,_sen$1048
  1921  000E06  C018  F0CD         	movff	?___awtoft+1,_sen$1048+1
  1922  000E0A  C019  F0CE         	movff	?___awtoft+2,_sen$1048+2
  1923                           
  1924                           ;LAB4.c: 269: b=12686*pow(frecuen,-1.59);
  1925  000E0E  0E85               	movlw	133
  1926  000E10  0100               	movlb	0	; () banked
  1927  000E12  6FBC               	movwf	pow@y& (0+255),b
  1928  000E14  0ECB               	movlw	203
  1929  000E16  0100               	movlb	0	; () banked
  1930  000E18  6FBD               	movwf	(pow@y+1)& (0+255),b
  1931  000E1A  0EBF               	movlw	191
  1932  000E1C  0100               	movlb	0	; () banked
  1933  000E1E  6FBE               	movwf	(pow@y+2)& (0+255),b
  1934  000E20  C0CC  F0B9         	movff	_sen$1048,pow@x
  1935  000E24  C0CD  F0BA         	movff	_sen$1048+1,pow@x+1
  1936  000E28  C0CE  F0BB         	movff	_sen$1048+2,pow@x+2
  1937  000E2C  EC43  F00F         	call	_pow	;wreg free
  1938  000E30  C0B9  F0CF         	movff	?_pow,_sen$1049
  1939  000E34  C0BA  F0D0         	movff	?_pow+1,_sen$1049+1
  1940  000E38  C0BB  F0D1         	movff	?_pow+2,_sen$1049+2
  1941                           
  1942                           ;LAB4.c: 269: b=12686*pow(frecuen,-1.59);
  1943  000E3C  0E38               	movlw	56
  1944  000E3E  6E1E               	movwf	___ftmul@f2,c
  1945  000E40  0E46               	movlw	70
  1946  000E42  6E1F               	movwf	___ftmul@f2+1,c
  1947  000E44  0E46               	movlw	70
  1948  000E46  6E20               	movwf	___ftmul@f2+2,c
  1949  000E48  C0CF  F01B         	movff	_sen$1049,___ftmul@f1
  1950  000E4C  C0D0  F01C         	movff	_sen$1049+1,___ftmul@f1+1
  1951  000E50  C0D1  F01D         	movff	_sen$1049+2,___ftmul@f1+2
  1952  000E54  EC5D  F012         	call	___ftmul	;wreg free
  1953  000E58  C01B  F02A         	movff	?___ftmul,___fttol@f1
  1954  000E5C  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  1955  000E60  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  1956  000E64  ECE3  F011         	call	___fttol	;wreg free
  1957  000E68  C02A  F0DA         	movff	?___fttol,sen@b
  1958  000E6C  C02B  F0DB         	movff	?___fttol+1,sen@b+1
  1959                           
  1960                           ;LAB4.c: 270: while (tecla!=11 && tecla!=12){
  1961  000E70  D062               	goto	l5165
  1962  000E72                     l5127:
  1963                           
  1964                           ;LAB4.c: 271: for(int i=0;i<=35;i++){
  1965  000E72  0E00               	movlw	0
  1966  000E74  0100               	movlb	0	; () banked
  1967  000E76  6FD3               	movwf	(sen@i+1)& (0+255),b
  1968  000E78  0E00               	movlw	0
  1969  000E7A  6FD2               	movwf	sen@i& (0+255),b
  1970  000E7C                     l5129:
  1971                           
  1972                           ; BSR set to: 0
  1973  000E7C  0100               	movlb	0	; () banked
  1974  000E7E  BFD3               	btfsc	(sen@i+1)& (0+255),7,b
  1975  000E80  D008               	goto	l5133
  1976  000E82  0100               	movlb	0	; () banked
  1977  000E84  51D3               	movf	(sen@i+1)& (0+255),w,b
  1978  000E86  E157               	bnz	l5165
  1979  000E88  0E24               	movlw	36
  1980  000E8A  0100               	movlb	0	; () banked
  1981  000E8C  5DD2               	subwf	sen@i& (0+255),w,b
  1982  000E8E  B0D8               	btfsc	status,0,c
  1983  000E90  D052               	goto	l5165
  1984  000E92                     l5133:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;LAB4.c: 272: LATA =seno[i];
  1988  000E92  90D8               	bcf	status,0,c
  1989  000E94  0100               	movlb	0	; () banked
  1990  000E96  35D2               	rlcf	sen@i& (0+255),w,b
  1991  000E98  6ED9               	movwf	fsr2l,c
  1992  000E9A  0100               	movlb	0	; () banked
  1993  000E9C  35D3               	rlcf	(sen@i+1)& (0+255),w,b
  1994  000E9E  6EDA               	movwf	fsr2h,c
  1995  000EA0  0E60               	movlw	low _seno
  1996  000EA2  26D9               	addwf	fsr2l,f,c
  1997  000EA4  0E00               	movlw	high _seno
  1998  000EA6  22DA               	addwfc	fsr2h,f,c
  1999  000EA8  50DF               	movf	indf2,w,c
  2000  000EAA  6E89               	movwf	3977,c	;volatile
  2001                           
  2002                           ;LAB4.c: 273: LATC =seno[i];
  2003  000EAC  90D8               	bcf	status,0,c
  2004  000EAE  0100               	movlb	0	; () banked
  2005  000EB0  35D2               	rlcf	sen@i& (0+255),w,b
  2006  000EB2  6ED9               	movwf	fsr2l,c
  2007  000EB4  0100               	movlb	0	; () banked
  2008  000EB6  35D3               	rlcf	(sen@i+1)& (0+255),w,b
  2009  000EB8  6EDA               	movwf	fsr2h,c
  2010  000EBA  0E60               	movlw	low _seno
  2011  000EBC  26D9               	addwf	fsr2l,f,c
  2012  000EBE  0E00               	movlw	high _seno
  2013  000EC0  22DA               	addwfc	fsr2h,f,c
  2014  000EC2  50DF               	movf	indf2,w,c
  2015  000EC4  6E8B               	movwf	3979,c	;volatile
  2016                           
  2017                           ; BSR set to: 0
  2018                           ;LAB4.c: 274: Delay1TCYx(b);
  2019  000EC6  0100               	movlb	0	; () banked
  2020  000EC8  51DA               	movf	sen@b& (0+255),w,b
  2021  000ECA  EC08  F017         	call	_Delay1TCYx
  2022                           
  2023                           ;LAB4.c: 275: Delay1TCYx(b);
  2024  000ECE  0100               	movlb	0	; () banked
  2025  000ED0  51DA               	movf	sen@b& (0+255),w,b
  2026  000ED2  EC08  F017         	call	_Delay1TCYx
  2027                           
  2028                           ;LAB4.c: 276: Delay1TCYx(b);
  2029  000ED6  0100               	movlb	0	; () banked
  2030  000ED8  51DA               	movf	sen@b& (0+255),w,b
  2031  000EDA  EC08  F017         	call	_Delay1TCYx
  2032                           
  2033                           ;LAB4.c: 277: Delay1TCYx(b);
  2034  000EDE  0100               	movlb	0	; () banked
  2035  000EE0  51DA               	movf	sen@b& (0+255),w,b
  2036  000EE2  EC08  F017         	call	_Delay1TCYx
  2037                           
  2038                           ;LAB4.c: 278: Delay1TCYx(b);
  2039  000EE6  0100               	movlb	0	; () banked
  2040  000EE8  51DA               	movf	sen@b& (0+255),w,b
  2041  000EEA  EC08  F017         	call	_Delay1TCYx
  2042                           
  2043                           ;LAB4.c: 279: Delay1TCYx(b);
  2044  000EEE  0100               	movlb	0	; () banked
  2045  000EF0  51DA               	movf	sen@b& (0+255),w,b
  2046  000EF2  EC08  F017         	call	_Delay1TCYx
  2047                           
  2048                           ;LAB4.c: 280: Delay1TCYx(b);
  2049  000EF6  0100               	movlb	0	; () banked
  2050  000EF8  51DA               	movf	sen@b& (0+255),w,b
  2051  000EFA  EC08  F017         	call	_Delay1TCYx
  2052                           
  2053                           ;LAB4.c: 281: Delay1TCYx(b);
  2054  000EFE  0100               	movlb	0	; () banked
  2055  000F00  51DA               	movf	sen@b& (0+255),w,b
  2056  000F02  EC08  F017         	call	_Delay1TCYx
  2057                           
  2058                           ;LAB4.c: 282: Delay1TCYx(b);
  2059  000F06  0100               	movlb	0	; () banked
  2060  000F08  51DA               	movf	sen@b& (0+255),w,b
  2061  000F0A  EC08  F017         	call	_Delay1TCYx
  2062                           
  2063                           ;LAB4.c: 283: Delay1TCYx(b);
  2064  000F0E  0100               	movlb	0	; () banked
  2065  000F10  51DA               	movf	sen@b& (0+255),w,b
  2066  000F12  EC08  F017         	call	_Delay1TCYx
  2067                           
  2068                           ;LAB4.c: 284: Delay1TCYx(b);
  2069  000F16  0100               	movlb	0	; () banked
  2070  000F18  51DA               	movf	sen@b& (0+255),w,b
  2071  000F1A  EC08  F017         	call	_Delay1TCYx
  2072                           
  2073                           ;LAB4.c: 285: Delay1TCYx(b);
  2074  000F1E  0100               	movlb	0	; () banked
  2075  000F20  51DA               	movf	sen@b& (0+255),w,b
  2076  000F22  EC08  F017         	call	_Delay1TCYx
  2077                           
  2078                           ;LAB4.c: 286: Delay1TCYx(b);
  2079  000F26  0100               	movlb	0	; () banked
  2080  000F28  51DA               	movf	sen@b& (0+255),w,b
  2081  000F2A  EC08  F017         	call	_Delay1TCYx
  2082  000F2E  0100               	movlb	0	; () banked
  2083  000F30  4BD2               	infsnz	sen@i& (0+255),f,b
  2084  000F32  2BD3               	incf	(sen@i+1)& (0+255),f,b
  2085  000F34  D7A3               	goto	l5129
  2086  000F36                     l5165:
  2087  000F36  0E0B               	movlw	11
  2088  000F38  184F               	xorwf	_tecla,w,c
  2089  000F3A  1050               	iorwf	_tecla+1,w,c
  2090  000F3C  B4D8               	btfsc	status,2,c
  2091  000F3E  D005               	goto	l5169
  2092  000F40  0E0C               	movlw	12
  2093  000F42  184F               	xorwf	_tecla,w,c
  2094  000F44  1050               	iorwf	_tecla+1,w,c
  2095  000F46  A4D8               	btfss	status,2,c
  2096  000F48  D794               	goto	l5127
  2097  000F4A                     l5169:
  2098                           
  2099                           ;LAB4.c: 287: }
  2100                           ;LAB4.c: 288: }
  2101                           ;LAB4.c: 289: }
  2102                           ;LAB4.c: 290: if (frecuen <40 && frecuen >= 3){
  2103  000F4A  0100               	movlb	0	; () banked
  2104  000F4C  BFCB               	btfsc	(sen@frecuen+1)& (0+255),7,b
  2105  000F4E  D008               	goto	l5171
  2106  000F50  0100               	movlb	0	; () banked
  2107  000F52  51CB               	movf	(sen@frecuen+1)& (0+255),w,b
  2108  000F54  E104               	bnz	u5381
  2109  000F56  0E28               	movlw	40
  2110  000F58  0100               	movlb	0	; () banked
  2111  000F5A  5DCA               	subwf	sen@frecuen& (0+255),w,b
  2112  000F5C  B0D8               	btfsc	status,0,c
  2113  000F5E                     u5381:
  2114  000F5E  D0A6               	goto	l5213
  2115  000F60                     l5171:
  2116                           
  2117                           ; BSR set to: 0
  2118  000F60  0100               	movlb	0	; () banked
  2119  000F62  BFCB               	btfsc	(sen@frecuen+1)& (0+255),7,b
  2120  000F64  D0A3               	goto	l5213
  2121  000F66  0100               	movlb	0	; () banked
  2122  000F68  51CB               	movf	(sen@frecuen+1)& (0+255),w,b
  2123  000F6A  E105               	bnz	u5390
  2124  000F6C  0E03               	movlw	3
  2125  000F6E  0100               	movlb	0	; () banked
  2126  000F70  5DCA               	subwf	sen@frecuen& (0+255),w,b
  2127  000F72  A0D8               	btfss	status,0,c
  2128  000F74  D09B               	goto	l5213
  2129  000F76                     u5390:
  2130                           
  2131                           ; BSR set to: 0
  2132                           ;LAB4.c: 291: int t=0;
  2133  000F76  0E00               	movlw	0
  2134  000F78  0100               	movlb	0	; () banked
  2135  000F7A  6FD9               	movwf	(sen@t+1)& (0+255),b
  2136  000F7C  0E00               	movlw	0
  2137  000F7E  6FD8               	movwf	sen@t& (0+255),b
  2138                           
  2139                           ; BSR set to: 0
  2140                           ;LAB4.c: 292: t=571.24*pow(frecuen,-1.061);
  2141  000F80  C0CA  F017         	movff	sen@frecuen,___awtoft@c
  2142  000F84  C0CB  F018         	movff	sen@frecuen+1,___awtoft@c+1
  2143  000F88  EC68  F016         	call	___awtoft	;wreg free
  2144  000F8C  C017  F0CC         	movff	?___awtoft,_sen$1048
  2145  000F90  C018  F0CD         	movff	?___awtoft+1,_sen$1048+1
  2146  000F94  C019  F0CE         	movff	?___awtoft+2,_sen$1048+2
  2147                           
  2148                           ;LAB4.c: 292: t=571.24*pow(frecuen,-1.061);
  2149  000F98  0ECF               	movlw	207
  2150  000F9A  0100               	movlb	0	; () banked
  2151  000F9C  6FBC               	movwf	pow@y& (0+255),b
  2152  000F9E  0E87               	movlw	135
  2153  000FA0  0100               	movlb	0	; () banked
  2154  000FA2  6FBD               	movwf	(pow@y+1)& (0+255),b
  2155  000FA4  0EBF               	movlw	191
  2156  000FA6  0100               	movlb	0	; () banked
  2157  000FA8  6FBE               	movwf	(pow@y+2)& (0+255),b
  2158  000FAA  C0CC  F0B9         	movff	_sen$1048,pow@x
  2159  000FAE  C0CD  F0BA         	movff	_sen$1048+1,pow@x+1
  2160  000FB2  C0CE  F0BB         	movff	_sen$1048+2,pow@x+2
  2161  000FB6  EC43  F00F         	call	_pow	;wreg free
  2162  000FBA  C0B9  F0CF         	movff	?_pow,_sen$1049
  2163  000FBE  C0BA  F0D0         	movff	?_pow+1,_sen$1049+1
  2164  000FC2  C0BB  F0D1         	movff	?_pow+2,_sen$1049+2
  2165                           
  2166                           ;LAB4.c: 292: t=571.24*pow(frecuen,-1.061);
  2167  000FC6  0ECF               	movlw	207
  2168  000FC8  6E1E               	movwf	___ftmul@f2,c
  2169  000FCA  0E0E               	movlw	14
  2170  000FCC  6E1F               	movwf	___ftmul@f2+1,c
  2171  000FCE  0E44               	movlw	68
  2172  000FD0  6E20               	movwf	___ftmul@f2+2,c
  2173  000FD2  C0CF  F01B         	movff	_sen$1049,___ftmul@f1
  2174  000FD6  C0D0  F01C         	movff	_sen$1049+1,___ftmul@f1+1
  2175  000FDA  C0D1  F01D         	movff	_sen$1049+2,___ftmul@f1+2
  2176  000FDE  EC5D  F012         	call	___ftmul	;wreg free
  2177  000FE2  C01B  F02A         	movff	?___ftmul,___fttol@f1
  2178  000FE6  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  2179  000FEA  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  2180  000FEE  ECE3  F011         	call	___fttol	;wreg free
  2181  000FF2  C02A  F0D8         	movff	?___fttol,sen@t
  2182  000FF6  C02B  F0D9         	movff	?___fttol+1,sen@t+1
  2183                           
  2184                           ;LAB4.c: 293: while (tecla!=11 && tecla!=12){
  2185  000FFA  D04E               	goto	l5209
  2186  000FFC                     l5181:
  2187                           
  2188                           ;LAB4.c: 294: for(int i=0;i<=35;i++){
  2189  000FFC  0E00               	movlw	0
  2190  000FFE  0100               	movlb	0	; () banked
  2191  001000  6FD5               	movwf	(sen@i_262+1)& (0+255),b
  2192  001002  0E00               	movlw	0
  2193  001004  6FD4               	movwf	sen@i_262& (0+255),b
  2194  001006                     l5183:
  2195                           
  2196                           ; BSR set to: 0
  2197  001006  0100               	movlb	0	; () banked
  2198  001008  BFD5               	btfsc	(sen@i_262+1)& (0+255),7,b
  2199  00100A  D008               	goto	l5187
  2200  00100C  0100               	movlb	0	; () banked
  2201  00100E  51D5               	movf	(sen@i_262+1)& (0+255),w,b
  2202  001010  E143               	bnz	l5209
  2203  001012  0E24               	movlw	36
  2204  001014  0100               	movlb	0	; () banked
  2205  001016  5DD4               	subwf	sen@i_262& (0+255),w,b
  2206  001018  B0D8               	btfsc	status,0,c
  2207  00101A  D03E               	goto	l5209
  2208  00101C                     l5187:
  2209                           
  2210                           ; BSR set to: 0
  2211                           ;LAB4.c: 295: LATA =seno[i];
  2212  00101C  90D8               	bcf	status,0,c
  2213  00101E  0100               	movlb	0	; () banked
  2214  001020  35D4               	rlcf	sen@i_262& (0+255),w,b
  2215  001022  6ED9               	movwf	fsr2l,c
  2216  001024  0100               	movlb	0	; () banked
  2217  001026  35D5               	rlcf	(sen@i_262+1)& (0+255),w,b
  2218  001028  6EDA               	movwf	fsr2h,c
  2219  00102A  0E60               	movlw	low _seno
  2220  00102C  26D9               	addwf	fsr2l,f,c
  2221  00102E  0E00               	movlw	high _seno
  2222  001030  22DA               	addwfc	fsr2h,f,c
  2223  001032  50DF               	movf	indf2,w,c
  2224  001034  6E89               	movwf	3977,c	;volatile
  2225                           
  2226                           ;LAB4.c: 296: LATC =seno[i];
  2227  001036  90D8               	bcf	status,0,c
  2228  001038  0100               	movlb	0	; () banked
  2229  00103A  35D4               	rlcf	sen@i_262& (0+255),w,b
  2230  00103C  6ED9               	movwf	fsr2l,c
  2231  00103E  0100               	movlb	0	; () banked
  2232  001040  35D5               	rlcf	(sen@i_262+1)& (0+255),w,b
  2233  001042  6EDA               	movwf	fsr2h,c
  2234  001044  0E60               	movlw	low _seno
  2235  001046  26D9               	addwf	fsr2l,f,c
  2236  001048  0E00               	movlw	high _seno
  2237  00104A  22DA               	addwfc	fsr2h,f,c
  2238  00104C  50DF               	movf	indf2,w,c
  2239  00104E  6E8B               	movwf	3979,c	;volatile
  2240                           
  2241                           ; BSR set to: 0
  2242                           ;LAB4.c: 297: Delay10TCYx(t);
  2243  001050  0100               	movlb	0	; () banked
  2244  001052  51D8               	movf	sen@t& (0+255),w,b
  2245  001054  ECF8  F016         	call	_Delay10TCYx
  2246                           
  2247                           ;LAB4.c: 298: Delay10TCYx(t);
  2248  001058  0100               	movlb	0	; () banked
  2249  00105A  51D8               	movf	sen@t& (0+255),w,b
  2250  00105C  ECF8  F016         	call	_Delay10TCYx
  2251                           
  2252                           ;LAB4.c: 299: Delay10TCYx(t);
  2253  001060  0100               	movlb	0	; () banked
  2254  001062  51D8               	movf	sen@t& (0+255),w,b
  2255  001064  ECF8  F016         	call	_Delay10TCYx
  2256                           
  2257                           ;LAB4.c: 300: Delay10TCYx(t);
  2258  001068  0100               	movlb	0	; () banked
  2259  00106A  51D8               	movf	sen@t& (0+255),w,b
  2260  00106C  ECF8  F016         	call	_Delay10TCYx
  2261                           
  2262                           ;LAB4.c: 301: Delay10TCYx(t);
  2263  001070  0100               	movlb	0	; () banked
  2264  001072  51D8               	movf	sen@t& (0+255),w,b
  2265  001074  ECF8  F016         	call	_Delay10TCYx
  2266                           
  2267                           ;LAB4.c: 302: Delay10TCYx(t);
  2268  001078  0100               	movlb	0	; () banked
  2269  00107A  51D8               	movf	sen@t& (0+255),w,b
  2270  00107C  ECF8  F016         	call	_Delay10TCYx
  2271                           
  2272                           ;LAB4.c: 303: Delay10TCYx(t);
  2273  001080  0100               	movlb	0	; () banked
  2274  001082  51D8               	movf	sen@t& (0+255),w,b
  2275  001084  ECF8  F016         	call	_Delay10TCYx
  2276                           
  2277                           ;LAB4.c: 304: Delay10TCYx(t);
  2278  001088  0100               	movlb	0	; () banked
  2279  00108A  51D8               	movf	sen@t& (0+255),w,b
  2280  00108C  ECF8  F016         	call	_Delay10TCYx
  2281  001090  0100               	movlb	0	; () banked
  2282  001092  4BD4               	infsnz	sen@i_262& (0+255),f,b
  2283  001094  2BD5               	incf	(sen@i_262+1)& (0+255),f,b
  2284  001096  D7B7               	goto	l5183
  2285  001098                     l5209:
  2286  001098  0E0B               	movlw	11
  2287  00109A  184F               	xorwf	_tecla,w,c
  2288  00109C  1050               	iorwf	_tecla+1,w,c
  2289  00109E  B4D8               	btfsc	status,2,c
  2290  0010A0  D005               	goto	l5213
  2291  0010A2  0E0C               	movlw	12
  2292  0010A4  184F               	xorwf	_tecla,w,c
  2293  0010A6  1050               	iorwf	_tecla+1,w,c
  2294  0010A8  A4D8               	btfss	status,2,c
  2295  0010AA  D7A8               	goto	l5181
  2296  0010AC                     l5213:
  2297                           
  2298                           ;LAB4.c: 305: }
  2299                           ;LAB4.c: 306: }
  2300                           ;LAB4.c: 307: }
  2301                           ;LAB4.c: 308: if (frecuen <3){
  2302  0010AC  0100               	movlb	0	; () banked
  2303  0010AE  BFCB               	btfsc	(sen@frecuen+1)& (0+255),7,b
  2304  0010B0  D0A7               	goto	l5245
  2305  0010B2  0100               	movlb	0	; () banked
  2306  0010B4  51CB               	movf	(sen@frecuen+1)& (0+255),w,b
  2307  0010B6  E105               	bnz	u5441
  2308  0010B8  0E03               	movlw	3
  2309  0010BA  0100               	movlb	0	; () banked
  2310  0010BC  5DCA               	subwf	sen@frecuen& (0+255),w,b
  2311  0010BE  A0D8               	btfss	status,0,c
  2312  0010C0  D09F               	goto	l5245
  2313  0010C2                     u5441:
  2314  0010C2  0012               	return	
  2315  0010C4                     l5217:
  2316                           
  2317                           ; BSR set to: 0
  2318                           ;LAB4.c: 310: for(int i=0;i<=35;i++){
  2319  0010C4  0E00               	movlw	0
  2320  0010C6  0100               	movlb	0	; () banked
  2321  0010C8  6FD7               	movwf	(sen@i_263+1)& (0+255),b
  2322  0010CA  0E00               	movlw	0
  2323  0010CC  6FD6               	movwf	sen@i_263& (0+255),b
  2324                           
  2325                           ; BSR set to: 0
  2326  0010CE  0100               	movlb	0	; () banked
  2327  0010D0  BFD7               	btfsc	(sen@i_263+1)& (0+255),7,b
  2328  0010D2  D00A               	goto	l5223
  2329  0010D4  0100               	movlb	0	; () banked
  2330  0010D6  51D7               	movf	(sen@i_263+1)& (0+255),w,b
  2331  0010D8  E106               	bnz	u5450
  2332  0010DA  0E24               	movlw	36
  2333  0010DC  0100               	movlb	0	; () banked
  2334  0010DE  5DD6               	subwf	sen@i_263& (0+255),w,b
  2335  0010E0  B0D8               	btfsc	status,0,c
  2336  0010E2  D08E               	goto	l5245
  2337  0010E4  D001               	goto	l5223
  2338  0010E6                     u5450:
  2339                           
  2340                           ; BSR set to: 0
  2341  0010E6  D08C               	goto	l5245
  2342  0010E8                     l5223:
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;LAB4.c: 311: LATA =seno[i];
  2346  0010E8  90D8               	bcf	status,0,c
  2347  0010EA  0100               	movlb	0	; () banked
  2348  0010EC  35D6               	rlcf	sen@i_263& (0+255),w,b
  2349  0010EE  6ED9               	movwf	fsr2l,c
  2350  0010F0  0100               	movlb	0	; () banked
  2351  0010F2  35D7               	rlcf	(sen@i_263+1)& (0+255),w,b
  2352  0010F4  6EDA               	movwf	fsr2h,c
  2353  0010F6  0E60               	movlw	low _seno
  2354  0010F8  26D9               	addwf	fsr2l,f,c
  2355  0010FA  0E00               	movlw	high _seno
  2356  0010FC  22DA               	addwfc	fsr2h,f,c
  2357  0010FE  50DF               	movf	indf2,w,c
  2358  001100  6E89               	movwf	3977,c	;volatile
  2359                           
  2360                           ;LAB4.c: 312: LATC =seno[i];
  2361  001102  90D8               	bcf	status,0,c
  2362  001104  0100               	movlb	0	; () banked
  2363  001106  35D6               	rlcf	sen@i_263& (0+255),w,b
  2364  001108  6ED9               	movwf	fsr2l,c
  2365  00110A  0100               	movlb	0	; () banked
  2366  00110C  35D7               	rlcf	(sen@i_263+1)& (0+255),w,b
  2367  00110E  6EDA               	movwf	fsr2h,c
  2368  001110  0E60               	movlw	low _seno
  2369  001112  26D9               	addwf	fsr2l,f,c
  2370  001114  0E00               	movlw	high _seno
  2371  001116  22DA               	addwfc	fsr2h,f,c
  2372  001118  50DF               	movf	indf2,w,c
  2373  00111A  6E8B               	movwf	3979,c	;volatile
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;LAB4.c: 313: Delay100TCYx(68/frecuen);
  2377  00111C  0E00               	movlw	0
  2378  00111E  6E10               	movwf	___awdiv@dividend+1,c
  2379  001120  0E44               	movlw	68
  2380  001122  6E0F               	movwf	___awdiv@dividend,c
  2381  001124  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2382  001128  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2383  00112C  EC13  F015         	call	___awdiv	;wreg free
  2384  001130  500F               	movf	?___awdiv,w,c
  2385  001132  EC00  F017         	call	_Delay100TCYx
  2386                           
  2387                           ;LAB4.c: 314: Delay100TCYx(68/frecuen);
  2388  001136  0E00               	movlw	0
  2389  001138  6E10               	movwf	___awdiv@dividend+1,c
  2390  00113A  0E44               	movlw	68
  2391  00113C  6E0F               	movwf	___awdiv@dividend,c
  2392  00113E  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2393  001142  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2394  001146  EC13  F015         	call	___awdiv	;wreg free
  2395  00114A  500F               	movf	?___awdiv,w,c
  2396  00114C  EC00  F017         	call	_Delay100TCYx
  2397                           
  2398                           ;LAB4.c: 315: Delay100TCYx(68/frecuen);
  2399  001150  0E00               	movlw	0
  2400  001152  6E10               	movwf	___awdiv@dividend+1,c
  2401  001154  0E44               	movlw	68
  2402  001156  6E0F               	movwf	___awdiv@dividend,c
  2403  001158  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2404  00115C  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2405  001160  EC13  F015         	call	___awdiv	;wreg free
  2406  001164  500F               	movf	?___awdiv,w,c
  2407  001166  EC00  F017         	call	_Delay100TCYx
  2408                           
  2409                           ;LAB4.c: 316: Delay100TCYx(68/frecuen);
  2410  00116A  0E00               	movlw	0
  2411  00116C  6E10               	movwf	___awdiv@dividend+1,c
  2412  00116E  0E44               	movlw	68
  2413  001170  6E0F               	movwf	___awdiv@dividend,c
  2414  001172  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2415  001176  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2416  00117A  EC13  F015         	call	___awdiv	;wreg free
  2417  00117E  500F               	movf	?___awdiv,w,c
  2418  001180  EC00  F017         	call	_Delay100TCYx
  2419                           
  2420                           ;LAB4.c: 317: Delay100TCYx(68/frecuen);
  2421  001184  0E00               	movlw	0
  2422  001186  6E10               	movwf	___awdiv@dividend+1,c
  2423  001188  0E44               	movlw	68
  2424  00118A  6E0F               	movwf	___awdiv@dividend,c
  2425  00118C  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2426  001190  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2427  001194  EC13  F015         	call	___awdiv	;wreg free
  2428  001198  500F               	movf	?___awdiv,w,c
  2429  00119A  EC00  F017         	call	_Delay100TCYx
  2430                           
  2431                           ;LAB4.c: 318: Delay100TCYx(68/frecuen);
  2432  00119E  0E00               	movlw	0
  2433  0011A0  6E10               	movwf	___awdiv@dividend+1,c
  2434  0011A2  0E44               	movlw	68
  2435  0011A4  6E0F               	movwf	___awdiv@dividend,c
  2436  0011A6  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2437  0011AA  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2438  0011AE  EC13  F015         	call	___awdiv	;wreg free
  2439  0011B2  500F               	movf	?___awdiv,w,c
  2440  0011B4  EC00  F017         	call	_Delay100TCYx
  2441                           
  2442                           ;LAB4.c: 319: Delay100TCYx(68/frecuen);
  2443  0011B8  0E00               	movlw	0
  2444  0011BA  6E10               	movwf	___awdiv@dividend+1,c
  2445  0011BC  0E44               	movlw	68
  2446  0011BE  6E0F               	movwf	___awdiv@dividend,c
  2447  0011C0  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2448  0011C4  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2449  0011C8  EC13  F015         	call	___awdiv	;wreg free
  2450  0011CC  500F               	movf	?___awdiv,w,c
  2451  0011CE  EC00  F017         	call	_Delay100TCYx
  2452                           
  2453                           ;LAB4.c: 320: Delay100TCYx(68/frecuen);
  2454  0011D2  0E00               	movlw	0
  2455  0011D4  6E10               	movwf	___awdiv@dividend+1,c
  2456  0011D6  0E44               	movlw	68
  2457  0011D8  6E0F               	movwf	___awdiv@dividend,c
  2458  0011DA  C0CA  F011         	movff	sen@frecuen,___awdiv@divisor
  2459  0011DE  C0CB  F012         	movff	sen@frecuen+1,___awdiv@divisor+1
  2460  0011E2  EC13  F015         	call	___awdiv	;wreg free
  2461  0011E6  500F               	movf	?___awdiv,w,c
  2462  0011E8  EC00  F017         	call	_Delay100TCYx
  2463  0011EC  0100               	movlb	0	; () banked
  2464  0011EE  4BD6               	infsnz	sen@i_263& (0+255),f,b
  2465  0011F0  2BD7               	incf	(sen@i_263+1)& (0+255),f,b
  2466                           
  2467                           ; BSR set to: 0
  2468  0011F2  0100               	movlb	0	; () banked
  2469  0011F4  BFD7               	btfsc	(sen@i_263+1)& (0+255),7,b
  2470  0011F6  D778               	goto	l5223
  2471  0011F8  0100               	movlb	0	; () banked
  2472  0011FA  51D7               	movf	(sen@i_263+1)& (0+255),w,b
  2473  0011FC  E101               	bnz	l5245
  2474  0011FE  D76D               	goto	L1
  2475  001200                     l5245:
  2476                           
  2477                           ; BSR set to: 0
  2478  001200  0E0B               	movlw	11
  2479  001202  184F               	xorwf	_tecla,w,c
  2480  001204  1050               	iorwf	_tecla+1,w,c
  2481  001206  B4D8               	btfsc	status,2,c
  2482  001208  0012               	return	
  2483                           
  2484                           ; BSR set to: 0
  2485  00120A  0E0C               	movlw	12
  2486  00120C  184F               	xorwf	_tecla,w,c
  2487  00120E  1050               	iorwf	_tecla+1,w,c
  2488  001210  B4D8               	btfsc	status,2,c
  2489  001212  0012               	return	
  2490  001214  D757               	goto	l5217
  2491  001216                     __end_of_sen:
  2492                           	opt stack 0
  2493                           tblptru	equ	0xFF8
  2494                           tblptrh	equ	0xFF7
  2495                           tblptrl	equ	0xFF6
  2496                           tablat	equ	0xFF5
  2497                           intcon	equ	0xFF2
  2498                           intcon2	equ	0xFF1
  2499                           postinc0	equ	0xFEE
  2500                           wreg	equ	0xFE8
  2501                           postdec1	equ	0xFE5
  2502                           fsr1l	equ	0xFE1
  2503                           indf2	equ	0xFDF
  2504                           fsr2h	equ	0xFDA
  2505                           fsr2l	equ	0xFD9
  2506                           status	equ	0xFD8
  2507                           
  2508 ;; *************** function ___awdiv *****************
  2509 ;; Defined at:
  2510 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  dividend        2   14[COMRAM] int 
  2513 ;;  divisor         2   16[COMRAM] int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  quotient        2   20[COMRAM] int 
  2516 ;;  sign            1   19[COMRAM] unsigned char 
  2517 ;;  counter         1   18[COMRAM] unsigned char 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  2   14[COMRAM] int 
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2527 ;;      Params:         4       0       0       0       0       0       0       0       0
  2528 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2530 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2531 ;;Total ram usage:        8 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:    1
  2534 ;; This function calls:
  2535 ;;		Nothing
  2536 ;; This function is called by:
  2537 ;;		_sen
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           	psect	text2
  2542  002A26                     __ptext2:
  2543                           	opt stack 0
  2544  002A26                     ___awdiv:
  2545                           	opt stack 28
  2546                           
  2547                           ; BSR set to: 0
  2548                           ;incstack = 0
  2549  002A26  0E00               	movlw	0
  2550  002A28  6E14               	movwf	___awdiv@sign,c
  2551  002A2A  AE12               	btfss	___awdiv@divisor+1,7,c
  2552  002A2C  D006               	goto	l3305
  2553  002A2E  6C11               	negf	___awdiv@divisor,c
  2554  002A30  1E12               	comf	___awdiv@divisor+1,f,c
  2555  002A32  B0D8               	btfsc	status,0,c
  2556  002A34  2A12               	incf	___awdiv@divisor+1,f,c
  2557  002A36  0E01               	movlw	1
  2558  002A38  6E14               	movwf	___awdiv@sign,c
  2559  002A3A                     l3305:
  2560  002A3A  AE10               	btfss	___awdiv@dividend+1,7,c
  2561  002A3C  D006               	goto	l3311
  2562  002A3E  6C0F               	negf	___awdiv@dividend,c
  2563  002A40  1E10               	comf	___awdiv@dividend+1,f,c
  2564  002A42  B0D8               	btfsc	status,0,c
  2565  002A44  2A10               	incf	___awdiv@dividend+1,f,c
  2566  002A46  0E01               	movlw	1
  2567  002A48  1A14               	xorwf	___awdiv@sign,f,c
  2568  002A4A                     l3311:
  2569  002A4A  0E00               	movlw	0
  2570  002A4C  6E16               	movwf	___awdiv@quotient+1,c
  2571  002A4E  0E00               	movlw	0
  2572  002A50  6E15               	movwf	___awdiv@quotient,c
  2573  002A52  5011               	movf	___awdiv@divisor,w,c
  2574  002A54  1012               	iorwf	___awdiv@divisor+1,w,c
  2575  002A56  B4D8               	btfsc	status,2,c
  2576  002A58  D01C               	goto	l3333
  2577  002A5A  0E01               	movlw	1
  2578  002A5C  6E13               	movwf	___awdiv@counter,c
  2579  002A5E  D004               	goto	l3319
  2580  002A60                     l3317:
  2581  002A60  90D8               	bcf	status,0,c
  2582  002A62  3611               	rlcf	___awdiv@divisor,f,c
  2583  002A64  3612               	rlcf	___awdiv@divisor+1,f,c
  2584  002A66  2A13               	incf	___awdiv@counter,f,c
  2585  002A68                     l3319:
  2586  002A68  AE12               	btfss	___awdiv@divisor+1,7,c
  2587  002A6A  D7FA               	goto	l3317
  2588  002A6C                     l3321:
  2589  002A6C  90D8               	bcf	status,0,c
  2590  002A6E  3615               	rlcf	___awdiv@quotient,f,c
  2591  002A70  3616               	rlcf	___awdiv@quotient+1,f,c
  2592  002A72  5011               	movf	___awdiv@divisor,w,c
  2593  002A74  5C0F               	subwf	___awdiv@dividend,w,c
  2594  002A76  5012               	movf	___awdiv@divisor+1,w,c
  2595  002A78  5810               	subwfb	___awdiv@dividend+1,w,c
  2596  002A7A  A0D8               	btfss	status,0,c
  2597  002A7C  D005               	goto	l3329
  2598  002A7E  5011               	movf	___awdiv@divisor,w,c
  2599  002A80  5E0F               	subwf	___awdiv@dividend,f,c
  2600  002A82  5012               	movf	___awdiv@divisor+1,w,c
  2601  002A84  5A10               	subwfb	___awdiv@dividend+1,f,c
  2602  002A86  8015               	bsf	___awdiv@quotient,0,c
  2603  002A88                     l3329:
  2604  002A88  90D8               	bcf	status,0,c
  2605  002A8A  3212               	rrcf	___awdiv@divisor+1,f,c
  2606  002A8C  3211               	rrcf	___awdiv@divisor,f,c
  2607  002A8E  2E13               	decfsz	___awdiv@counter,f,c
  2608  002A90  D7ED               	goto	l3321
  2609  002A92                     l3333:
  2610  002A92  5014               	movf	___awdiv@sign,w,c
  2611  002A94  B4D8               	btfsc	status,2,c
  2612  002A96  D004               	goto	l3337
  2613  002A98  6C15               	negf	___awdiv@quotient,c
  2614  002A9A  1E16               	comf	___awdiv@quotient+1,f,c
  2615  002A9C  B0D8               	btfsc	status,0,c
  2616  002A9E  2A16               	incf	___awdiv@quotient+1,f,c
  2617  002AA0                     l3337:
  2618  002AA0  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  2619  002AA4  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  2620  002AA8  0012               	return	
  2621  002AAA                     __end_of___awdiv:
  2622                           	opt stack 0
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           intcon	equ	0xFF2
  2628                           intcon2	equ	0xFF1
  2629                           postinc0	equ	0xFEE
  2630                           wreg	equ	0xFE8
  2631                           postdec1	equ	0xFE5
  2632                           fsr1l	equ	0xFE1
  2633                           indf2	equ	0xFDF
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function _rampa *****************
  2639 ;; Defined at:
  2640 ;;		line 119 in file "LAB4.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  frecu           2   34[BANK0 ] int 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  i               2   50[BANK0 ] int 
  2645 ;;  i               2   48[BANK0 ] int 
  2646 ;;  i               2   46[BANK0 ] int 
  2647 ;;  q               2   36[BANK0 ] int 
  2648 ;;  q               2   52[BANK0 ] int 
  2649 ;;  j               2   38[BANK0 ] int 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  2   34[BANK0 ] int 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2659 ;;      Params:         0       2       0       0       0       0       0       0       0
  2660 ;;      Locals:         0      18       0       0       0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2662 ;;      Totals:         0      20       0       0       0       0       0       0       0
  2663 ;;Total ram usage:       20 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    6
  2666 ;; This function calls:
  2667 ;;		_Delay10TCYx
  2668 ;;		_Delay1TCYx
  2669 ;;		___awtoft
  2670 ;;		___ftmul
  2671 ;;		___fttol
  2672 ;;		_pow
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text3
  2679  0015A8                     __ptext3:
  2680                           	opt stack 0
  2681  0015A8                     _rampa:
  2682                           	opt stack 24
  2683                           
  2684                           ;LAB4.c: 122: if (frecu>=20){
  2685                           
  2686                           ;incstack = 0
  2687  0015A8  0100               	movlb	0	; () banked
  2688  0015AA  BFCB               	btfsc	(rampa@frecu+1)& (0+255),7,b
  2689  0015AC  D06D               	goto	l4911
  2690  0015AE  0100               	movlb	0	; () banked
  2691  0015B0  51CB               	movf	(rampa@frecu+1)& (0+255),w,b
  2692  0015B2  E105               	bnz	u5080
  2693  0015B4  0E14               	movlw	20
  2694  0015B6  0100               	movlb	0	; () banked
  2695  0015B8  5DCA               	subwf	rampa@frecu& (0+255),w,b
  2696  0015BA  A0D8               	btfss	status,0,c
  2697  0015BC  D065               	goto	l4911
  2698  0015BE                     u5080:
  2699                           
  2700                           ; BSR set to: 0
  2701                           ;LAB4.c: 123: int j=0;
  2702  0015BE  0E00               	movlw	0
  2703  0015C0  0100               	movlb	0	; () banked
  2704  0015C2  6FCF               	movwf	(rampa@j+1)& (0+255),b
  2705  0015C4  0E00               	movlw	0
  2706  0015C6  6FCE               	movwf	rampa@j& (0+255),b
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;LAB4.c: 124: j=9140.8*pow(frecu,-1.43);
  2710  0015C8  C0CA  F017         	movff	rampa@frecu,___awtoft@c
  2711  0015CC  C0CB  F018         	movff	rampa@frecu+1,___awtoft@c+1
  2712  0015D0  EC68  F016         	call	___awtoft	;wreg free
  2713  0015D4  C017  F0D0         	movff	?___awtoft,_rampa$1044
  2714  0015D8  C018  F0D1         	movff	?___awtoft+1,_rampa$1044+1
  2715  0015DC  C019  F0D2         	movff	?___awtoft+2,_rampa$1044+2
  2716                           
  2717                           ;LAB4.c: 124: j=9140.8*pow(frecu,-1.43);
  2718  0015E0  0E0A               	movlw	10
  2719  0015E2  0100               	movlb	0	; () banked
  2720  0015E4  6FBC               	movwf	pow@y& (0+255),b
  2721  0015E6  0EB7               	movlw	183
  2722  0015E8  0100               	movlb	0	; () banked
  2723  0015EA  6FBD               	movwf	(pow@y+1)& (0+255),b
  2724  0015EC  0EBF               	movlw	191
  2725  0015EE  0100               	movlb	0	; () banked
  2726  0015F0  6FBE               	movwf	(pow@y+2)& (0+255),b
  2727  0015F2  C0D0  F0B9         	movff	_rampa$1044,pow@x
  2728  0015F6  C0D1  F0BA         	movff	_rampa$1044+1,pow@x+1
  2729  0015FA  C0D2  F0BB         	movff	_rampa$1044+2,pow@x+2
  2730  0015FE  EC43  F00F         	call	_pow	;wreg free
  2731  001602  C0B9  F0D3         	movff	?_pow,_rampa$1045
  2732  001606  C0BA  F0D4         	movff	?_pow+1,_rampa$1045+1
  2733  00160A  C0BB  F0D5         	movff	?_pow+2,_rampa$1045+2
  2734                           
  2735                           ;LAB4.c: 124: j=9140.8*pow(frecu,-1.43);
  2736  00160E  0ED3               	movlw	211
  2737  001610  6E1E               	movwf	___ftmul@f2,c
  2738  001612  0E0E               	movlw	14
  2739  001614  6E1F               	movwf	___ftmul@f2+1,c
  2740  001616  0E46               	movlw	70
  2741  001618  6E20               	movwf	___ftmul@f2+2,c
  2742  00161A  C0D3  F01B         	movff	_rampa$1045,___ftmul@f1
  2743  00161E  C0D4  F01C         	movff	_rampa$1045+1,___ftmul@f1+1
  2744  001622  C0D5  F01D         	movff	_rampa$1045+2,___ftmul@f1+2
  2745  001626  EC5D  F012         	call	___ftmul	;wreg free
  2746  00162A  C01B  F02A         	movff	?___ftmul,___fttol@f1
  2747  00162E  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  2748  001632  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  2749  001636  ECE3  F011         	call	___fttol	;wreg free
  2750  00163A  C02A  F0CE         	movff	?___fttol,rampa@j
  2751  00163E  C02B  F0CF         	movff	?___fttol+1,rampa@j+1
  2752                           
  2753                           ;LAB4.c: 125: while (tecla!=11 && tecla!=12){
  2754  001642  D018               	goto	l4907
  2755  001644                     l4895:
  2756                           
  2757                           ;LAB4.c: 126: for(int i=0;i<=255;i++){
  2758  001644  0E00               	movlw	0
  2759  001646  0100               	movlb	0	; () banked
  2760  001648  6FD7               	movwf	(rampa@i+1)& (0+255),b
  2761  00164A  0E00               	movlw	0
  2762  00164C  6FD6               	movwf	rampa@i& (0+255),b
  2763  00164E                     l4897:
  2764                           
  2765                           ; BSR set to: 0
  2766  00164E  0100               	movlb	0	; () banked
  2767  001650  BFD7               	btfsc	(rampa@i+1)& (0+255),7,b
  2768  001652  D004               	goto	l172
  2769  001654  0100               	movlb	0	; () banked
  2770  001656  05D7               	decf	(rampa@i+1)& (0+255),w,b
  2771  001658  B0D8               	btfsc	status,0,c
  2772  00165A  D00C               	goto	l4907
  2773  00165C                     l172:
  2774                           
  2775                           ; BSR set to: 0
  2776                           ;LAB4.c: 127: LATA=i;
  2777  00165C  C0D6  FF89         	movff	rampa@i,3977	;volatile
  2778                           
  2779                           ;LAB4.c: 128: LATC=i;
  2780  001660  C0D6  FF8B         	movff	rampa@i,3979	;volatile
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;LAB4.c: 129: Delay1TCYx(j);
  2784  001664  0100               	movlb	0	; () banked
  2785  001666  51CE               	movf	rampa@j& (0+255),w,b
  2786  001668  EC08  F017         	call	_Delay1TCYx
  2787  00166C  0100               	movlb	0	; () banked
  2788  00166E  4BD6               	infsnz	rampa@i& (0+255),f,b
  2789  001670  2BD7               	incf	(rampa@i+1)& (0+255),f,b
  2790  001672  D7ED               	goto	l4897
  2791  001674                     l4907:
  2792  001674  0E0B               	movlw	11
  2793  001676  184F               	xorwf	_tecla,w,c
  2794  001678  1050               	iorwf	_tecla+1,w,c
  2795  00167A  B4D8               	btfsc	status,2,c
  2796  00167C  D005               	goto	l4911
  2797  00167E  0E0C               	movlw	12
  2798  001680  184F               	xorwf	_tecla,w,c
  2799  001682  1050               	iorwf	_tecla+1,w,c
  2800  001684  A4D8               	btfss	status,2,c
  2801  001686  D7DE               	goto	l4895
  2802  001688                     l4911:
  2803                           
  2804                           ;LAB4.c: 131: }
  2805                           ;LAB4.c: 132: }
  2806                           ;LAB4.c: 133: }
  2807                           ;LAB4.c: 134: if (frecu < 20 && frecu >= 2){
  2808  001688  0100               	movlb	0	; () banked
  2809  00168A  BFCB               	btfsc	(rampa@frecu+1)& (0+255),7,b
  2810  00168C  D008               	goto	l4913
  2811  00168E  0100               	movlb	0	; () banked
  2812  001690  51CB               	movf	(rampa@frecu+1)& (0+255),w,b
  2813  001692  E104               	bnz	u5131
  2814  001694  0E14               	movlw	20
  2815  001696  0100               	movlb	0	; () banked
  2816  001698  5DCA               	subwf	rampa@frecu& (0+255),w,b
  2817  00169A  B0D8               	btfsc	status,0,c
  2818  00169C                     u5131:
  2819  00169C  D094               	goto	l4939
  2820  00169E                     l4913:
  2821                           
  2822                           ; BSR set to: 0
  2823  00169E  0100               	movlb	0	; () banked
  2824  0016A0  BFCB               	btfsc	(rampa@frecu+1)& (0+255),7,b
  2825  0016A2  D091               	goto	l4939
  2826  0016A4  0100               	movlb	0	; () banked
  2827  0016A6  51CB               	movf	(rampa@frecu+1)& (0+255),w,b
  2828  0016A8  E105               	bnz	u5140
  2829  0016AA  0E02               	movlw	2
  2830  0016AC  0100               	movlb	0	; () banked
  2831  0016AE  5DCA               	subwf	rampa@frecu& (0+255),w,b
  2832  0016B0  A0D8               	btfss	status,0,c
  2833  0016B2  D089               	goto	l4939
  2834  0016B4                     u5140:
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;LAB4.c: 135: int q=0;
  2838  0016B4  0E00               	movlw	0
  2839  0016B6  0100               	movlb	0	; () banked
  2840  0016B8  6FDD               	movwf	(rampa@q+1)& (0+255),b
  2841  0016BA  0E00               	movlw	0
  2842  0016BC  6FDC               	movwf	rampa@q& (0+255),b
  2843                           
  2844                           ; BSR set to: 0
  2845                           ;LAB4.c: 136: q=261.5*pow(frecu,-1.175);
  2846  0016BE  C0CA  F017         	movff	rampa@frecu,___awtoft@c
  2847  0016C2  C0CB  F018         	movff	rampa@frecu+1,___awtoft@c+1
  2848  0016C6  EC68  F016         	call	___awtoft	;wreg free
  2849  0016CA  C017  F0D0         	movff	?___awtoft,_rampa$1044
  2850  0016CE  C018  F0D1         	movff	?___awtoft+1,_rampa$1044+1
  2851  0016D2  C019  F0D2         	movff	?___awtoft+2,_rampa$1044+2
  2852                           
  2853                           ;LAB4.c: 136: q=261.5*pow(frecu,-1.175);
  2854  0016D6  0E66               	movlw	102
  2855  0016D8  0100               	movlb	0	; () banked
  2856  0016DA  6FBC               	movwf	pow@y& (0+255),b
  2857  0016DC  0E96               	movlw	150
  2858  0016DE  0100               	movlb	0	; () banked
  2859  0016E0  6FBD               	movwf	(pow@y+1)& (0+255),b
  2860  0016E2  0EBF               	movlw	191
  2861  0016E4  0100               	movlb	0	; () banked
  2862  0016E6  6FBE               	movwf	(pow@y+2)& (0+255),b
  2863  0016E8  C0D0  F0B9         	movff	_rampa$1044,pow@x
  2864  0016EC  C0D1  F0BA         	movff	_rampa$1044+1,pow@x+1
  2865  0016F0  C0D2  F0BB         	movff	_rampa$1044+2,pow@x+2
  2866  0016F4  EC43  F00F         	call	_pow	;wreg free
  2867  0016F8  C0B9  F0D3         	movff	?_pow,_rampa$1045
  2868  0016FC  C0BA  F0D4         	movff	?_pow+1,_rampa$1045+1
  2869  001700  C0BB  F0D5         	movff	?_pow+2,_rampa$1045+2
  2870                           
  2871                           ;LAB4.c: 136: q=261.5*pow(frecu,-1.175);
  2872  001704  0EC0               	movlw	192
  2873  001706  6E1E               	movwf	___ftmul@f2,c
  2874  001708  0E82               	movlw	130
  2875  00170A  6E1F               	movwf	___ftmul@f2+1,c
  2876  00170C  0E43               	movlw	67
  2877  00170E  6E20               	movwf	___ftmul@f2+2,c
  2878  001710  C0D3  F01B         	movff	_rampa$1045,___ftmul@f1
  2879  001714  C0D4  F01C         	movff	_rampa$1045+1,___ftmul@f1+1
  2880  001718  C0D5  F01D         	movff	_rampa$1045+2,___ftmul@f1+2
  2881  00171C  EC5D  F012         	call	___ftmul	;wreg free
  2882  001720  C01B  F02A         	movff	?___ftmul,___fttol@f1
  2883  001724  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  2884  001728  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  2885  00172C  ECE3  F011         	call	___fttol	;wreg free
  2886  001730  C02A  F0DC         	movff	?___fttol,rampa@q
  2887  001734  C02B  F0DD         	movff	?___fttol+1,rampa@q+1
  2888                           
  2889                           ;LAB4.c: 137: while (tecla!=11 && tecla!=12){
  2890  001738  D03C               	goto	l4935
  2891  00173A                     l4923:
  2892                           
  2893                           ;LAB4.c: 138: for(int i=0;i<=255;i++){
  2894  00173A  0E00               	movlw	0
  2895  00173C  0100               	movlb	0	; () banked
  2896  00173E  6FD9               	movwf	(rampa@i_248+1)& (0+255),b
  2897  001740  0E00               	movlw	0
  2898  001742  6FD8               	movwf	rampa@i_248& (0+255),b
  2899  001744                     l4925:
  2900                           
  2901                           ; BSR set to: 0
  2902  001744  0100               	movlb	0	; () banked
  2903  001746  BFD9               	btfsc	(rampa@i_248+1)& (0+255),7,b
  2904  001748  D004               	goto	l180
  2905  00174A  0100               	movlb	0	; () banked
  2906  00174C  05D9               	decf	(rampa@i_248+1)& (0+255),w,b
  2907  00174E  B0D8               	btfsc	status,0,c
  2908  001750  D030               	goto	l4935
  2909  001752                     l180:
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;LAB4.c: 139: LATA=i;
  2913  001752  C0D8  FF89         	movff	rampa@i_248,3977	;volatile
  2914                           
  2915                           ;LAB4.c: 140: LATC=i;
  2916  001756  C0D8  FF8B         	movff	rampa@i_248,3979	;volatile
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;LAB4.c: 141: Delay1TCYx(q);
  2920  00175A  0100               	movlb	0	; () banked
  2921  00175C  51DC               	movf	rampa@q& (0+255),w,b
  2922  00175E  EC08  F017         	call	_Delay1TCYx
  2923                           
  2924                           ;LAB4.c: 142: Delay1TCYx(q);
  2925  001762  0100               	movlb	0	; () banked
  2926  001764  51DC               	movf	rampa@q& (0+255),w,b
  2927  001766  EC08  F017         	call	_Delay1TCYx
  2928                           
  2929                           ;LAB4.c: 143: Delay1TCYx(q);
  2930  00176A  0100               	movlb	0	; () banked
  2931  00176C  51DC               	movf	rampa@q& (0+255),w,b
  2932  00176E  EC08  F017         	call	_Delay1TCYx
  2933                           
  2934                           ;LAB4.c: 144: Delay1TCYx(q);
  2935  001772  0100               	movlb	0	; () banked
  2936  001774  51DC               	movf	rampa@q& (0+255),w,b
  2937  001776  EC08  F017         	call	_Delay1TCYx
  2938                           
  2939                           ;LAB4.c: 145: Delay1TCYx(q);
  2940  00177A  0100               	movlb	0	; () banked
  2941  00177C  51DC               	movf	rampa@q& (0+255),w,b
  2942  00177E  EC08  F017         	call	_Delay1TCYx
  2943                           
  2944                           ;LAB4.c: 146: Delay1TCYx(q);
  2945  001782  0100               	movlb	0	; () banked
  2946  001784  51DC               	movf	rampa@q& (0+255),w,b
  2947  001786  EC08  F017         	call	_Delay1TCYx
  2948                           
  2949                           ;LAB4.c: 147: Delay1TCYx(q);
  2950  00178A  0100               	movlb	0	; () banked
  2951  00178C  51DC               	movf	rampa@q& (0+255),w,b
  2952  00178E  EC08  F017         	call	_Delay1TCYx
  2953                           
  2954                           ;LAB4.c: 148: Delay1TCYx(q);
  2955  001792  0100               	movlb	0	; () banked
  2956  001794  51DC               	movf	rampa@q& (0+255),w,b
  2957  001796  EC08  F017         	call	_Delay1TCYx
  2958                           
  2959                           ;LAB4.c: 149: Delay1TCYx(q);
  2960  00179A  0100               	movlb	0	; () banked
  2961  00179C  51DC               	movf	rampa@q& (0+255),w,b
  2962  00179E  EC08  F017         	call	_Delay1TCYx
  2963                           
  2964                           ;LAB4.c: 150: Delay1TCYx(q);
  2965  0017A2  0100               	movlb	0	; () banked
  2966  0017A4  51DC               	movf	rampa@q& (0+255),w,b
  2967  0017A6  EC08  F017         	call	_Delay1TCYx
  2968  0017AA  0100               	movlb	0	; () banked
  2969  0017AC  4BD8               	infsnz	rampa@i_248& (0+255),f,b
  2970  0017AE  2BD9               	incf	(rampa@i_248+1)& (0+255),f,b
  2971  0017B0  D7C9               	goto	l4925
  2972  0017B2                     l4935:
  2973  0017B2  0E0B               	movlw	11
  2974  0017B4  184F               	xorwf	_tecla,w,c
  2975  0017B6  1050               	iorwf	_tecla+1,w,c
  2976  0017B8  B4D8               	btfsc	status,2,c
  2977  0017BA  D005               	goto	l4939
  2978  0017BC  0E0C               	movlw	12
  2979  0017BE  184F               	xorwf	_tecla,w,c
  2980  0017C0  1050               	iorwf	_tecla+1,w,c
  2981  0017C2  A4D8               	btfss	status,2,c
  2982  0017C4  D7BA               	goto	l4923
  2983  0017C6                     l4939:
  2984                           
  2985                           ;LAB4.c: 151: }
  2986                           ;LAB4.c: 152: }
  2987                           ;LAB4.c: 154: }
  2988                           ;LAB4.c: 155: if (frecu =1){
  2989  0017C6  0E00               	movlw	0
  2990  0017C8  0100               	movlb	0	; () banked
  2991  0017CA  6FCB               	movwf	(rampa@frecu+1)& (0+255),b
  2992  0017CC  0E01               	movlw	1
  2993  0017CE  6FCA               	movwf	rampa@frecu& (0+255),b
  2994                           
  2995                           ;LAB4.c: 156: int q=0;
  2996  0017D0  0E00               	movlw	0
  2997  0017D2  0100               	movlb	0	; () banked
  2998  0017D4  6FCD               	movwf	(rampa@q_249+1)& (0+255),b
  2999  0017D6  0E00               	movlw	0
  3000  0017D8  6FCC               	movwf	rampa@q_249& (0+255),b
  3001                           
  3002                           ; BSR set to: 0
  3003                           ;LAB4.c: 157: q=261.5*pow(frecu,-1.175);
  3004  0017DA  C0CA  F017         	movff	rampa@frecu,___awtoft@c
  3005  0017DE  C0CB  F018         	movff	rampa@frecu+1,___awtoft@c+1
  3006  0017E2  EC68  F016         	call	___awtoft	;wreg free
  3007  0017E6  C017  F0D0         	movff	?___awtoft,_rampa$1044
  3008  0017EA  C018  F0D1         	movff	?___awtoft+1,_rampa$1044+1
  3009  0017EE  C019  F0D2         	movff	?___awtoft+2,_rampa$1044+2
  3010                           
  3011                           ;LAB4.c: 157: q=261.5*pow(frecu,-1.175);
  3012  0017F2  0E66               	movlw	102
  3013  0017F4  0100               	movlb	0	; () banked
  3014  0017F6  6FBC               	movwf	pow@y& (0+255),b
  3015  0017F8  0E96               	movlw	150
  3016  0017FA  0100               	movlb	0	; () banked
  3017  0017FC  6FBD               	movwf	(pow@y+1)& (0+255),b
  3018  0017FE  0EBF               	movlw	191
  3019  001800  0100               	movlb	0	; () banked
  3020  001802  6FBE               	movwf	(pow@y+2)& (0+255),b
  3021  001804  C0D0  F0B9         	movff	_rampa$1044,pow@x
  3022  001808  C0D1  F0BA         	movff	_rampa$1044+1,pow@x+1
  3023  00180C  C0D2  F0BB         	movff	_rampa$1044+2,pow@x+2
  3024  001810  EC43  F00F         	call	_pow	;wreg free
  3025  001814  C0B9  F0D3         	movff	?_pow,_rampa$1045
  3026  001818  C0BA  F0D4         	movff	?_pow+1,_rampa$1045+1
  3027  00181C  C0BB  F0D5         	movff	?_pow+2,_rampa$1045+2
  3028                           
  3029                           ;LAB4.c: 157: q=261.5*pow(frecu,-1.175);
  3030  001820  0EC0               	movlw	192
  3031  001822  6E1E               	movwf	___ftmul@f2,c
  3032  001824  0E82               	movlw	130
  3033  001826  6E1F               	movwf	___ftmul@f2+1,c
  3034  001828  0E43               	movlw	67
  3035  00182A  6E20               	movwf	___ftmul@f2+2,c
  3036  00182C  C0D3  F01B         	movff	_rampa$1045,___ftmul@f1
  3037  001830  C0D4  F01C         	movff	_rampa$1045+1,___ftmul@f1+1
  3038  001834  C0D5  F01D         	movff	_rampa$1045+2,___ftmul@f1+2
  3039  001838  EC5D  F012         	call	___ftmul	;wreg free
  3040  00183C  C01B  F02A         	movff	?___ftmul,___fttol@f1
  3041  001840  C01C  F02B         	movff	?___ftmul+1,___fttol@f1+1
  3042  001844  C01D  F02C         	movff	?___ftmul+2,___fttol@f1+2
  3043  001848  ECE3  F011         	call	___fttol	;wreg free
  3044  00184C  C02A  F0CC         	movff	?___fttol,rampa@q_249
  3045  001850  C02B  F0CD         	movff	?___fttol+1,rampa@q_249+1
  3046                           
  3047                           ;LAB4.c: 158: while (tecla!=11 && tecla!=12){
  3048  001854  D02C               	goto	l4959
  3049  001856                     l4947:
  3050                           
  3051                           ;LAB4.c: 159: for(int i=0;i<=255;i++){
  3052  001856  0E00               	movlw	0
  3053  001858  0100               	movlb	0	; () banked
  3054  00185A  6FDB               	movwf	(rampa@i_250+1)& (0+255),b
  3055  00185C  0E00               	movlw	0
  3056  00185E  6FDA               	movwf	rampa@i_250& (0+255),b
  3057  001860                     l4949:
  3058                           
  3059                           ; BSR set to: 0
  3060  001860  0100               	movlb	0	; () banked
  3061  001862  BFDB               	btfsc	(rampa@i_250+1)& (0+255),7,b
  3062  001864  D004               	goto	l188
  3063  001866  0100               	movlb	0	; () banked
  3064  001868  05DB               	decf	(rampa@i_250+1)& (0+255),w,b
  3065  00186A  B0D8               	btfsc	status,0,c
  3066  00186C  D020               	goto	l4959
  3067  00186E                     l188:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;LAB4.c: 160: LATA=i;
  3071  00186E  C0DA  FF89         	movff	rampa@i_250,3977	;volatile
  3072                           
  3073                           ;LAB4.c: 161: LATC=i;
  3074  001872  C0DA  FF8B         	movff	rampa@i_250,3979	;volatile
  3075                           
  3076                           ; BSR set to: 0
  3077                           ;LAB4.c: 162: Delay10TCYx(75);
  3078  001876  0E4B               	movlw	75
  3079  001878  ECF8  F016         	call	_Delay10TCYx
  3080                           
  3081                           ;LAB4.c: 163: Delay10TCYx(75);
  3082  00187C  0E4B               	movlw	75
  3083  00187E  ECF8  F016         	call	_Delay10TCYx
  3084                           
  3085                           ;LAB4.c: 164: Delay10TCYx(75);
  3086  001882  0E4B               	movlw	75
  3087  001884  ECF8  F016         	call	_Delay10TCYx
  3088                           
  3089                           ;LAB4.c: 165: Delay10TCYx(75);
  3090  001888  0E4B               	movlw	75
  3091  00188A  ECF8  F016         	call	_Delay10TCYx
  3092                           
  3093                           ;LAB4.c: 166: Delay10TCYx(75);
  3094  00188E  0E4B               	movlw	75
  3095  001890  ECF8  F016         	call	_Delay10TCYx
  3096                           
  3097                           ;LAB4.c: 167: Delay10TCYx(75);
  3098  001894  0E4B               	movlw	75
  3099  001896  ECF8  F016         	call	_Delay10TCYx
  3100                           
  3101                           ;LAB4.c: 168: Delay10TCYx(75);
  3102  00189A  0E4B               	movlw	75
  3103  00189C  ECF8  F016         	call	_Delay10TCYx
  3104                           
  3105                           ;LAB4.c: 169: Delay10TCYx(75);
  3106  0018A0  0E4B               	movlw	75
  3107  0018A2  ECF8  F016         	call	_Delay10TCYx
  3108  0018A6  0100               	movlb	0	; () banked
  3109  0018A8  4BDA               	infsnz	rampa@i_250& (0+255),f,b
  3110  0018AA  2BDB               	incf	(rampa@i_250+1)& (0+255),f,b
  3111  0018AC  D7D9               	goto	l4949
  3112  0018AE                     l4959:
  3113  0018AE  0E0B               	movlw	11
  3114  0018B0  184F               	xorwf	_tecla,w,c
  3115  0018B2  1050               	iorwf	_tecla+1,w,c
  3116  0018B4  B4D8               	btfsc	status,2,c
  3117  0018B6  0012               	return	
  3118  0018B8  0E0C               	movlw	12
  3119  0018BA  184F               	xorwf	_tecla,w,c
  3120  0018BC  1050               	iorwf	_tecla+1,w,c
  3121  0018BE  B4D8               	btfsc	status,2,c
  3122  0018C0  0012               	return	
  3123  0018C2  D7C9               	goto	l4947
  3124  0018C4                     __end_of_rampa:
  3125                           	opt stack 0
  3126                           tblptru	equ	0xFF8
  3127                           tblptrh	equ	0xFF7
  3128                           tblptrl	equ	0xFF6
  3129                           tablat	equ	0xFF5
  3130                           intcon	equ	0xFF2
  3131                           intcon2	equ	0xFF1
  3132                           postinc0	equ	0xFEE
  3133                           wreg	equ	0xFE8
  3134                           postdec1	equ	0xFE5
  3135                           fsr1l	equ	0xFE1
  3136                           indf2	equ	0xFDF
  3137                           fsr2h	equ	0xFDA
  3138                           fsr2l	equ	0xFD9
  3139                           status	equ	0xFD8
  3140                           
  3141 ;; *************** function _Delay1TCYx *****************
  3142 ;; Defined at:
  3143 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\d1tcyx.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  unit            1    wreg     unsigned char 
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;  unit            1   14[COMRAM] unsigned char 
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3157 ;;      Params:         0       0       0       0       0       0       0       0       0
  3158 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3160 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3161 ;;Total ram usage:        1 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    1
  3164 ;; This function calls:
  3165 ;;		Nothing
  3166 ;; This function is called by:
  3167 ;;		_rampa
  3168 ;;		_sen
  3169 ;; This function uses a non-reentrant model
  3170 ;;
  3171                           
  3172                           	psect	text4
  3173  002E10                     __ptext4:
  3174                           	opt stack 0
  3175  002E10                     _Delay1TCYx:
  3176                           	opt stack 28
  3177                           
  3178                           ;incstack = 0
  3179                           ;Delay1TCYx@unit stored from wreg
  3180  002E10  6E0F               	movwf	Delay1TCYx@unit,c
  3181  002E12                     l607:
  3182  002E12  F000               	nop	
  3183  002E14  2E0F               	decfsz	Delay1TCYx@unit,f,c
  3184  002E16  D7FD               	goto	l607
  3185  002E18  0012               	return	
  3186  002E1A                     __end_of_Delay1TCYx:
  3187                           	opt stack 0
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           intcon	equ	0xFF2
  3193                           intcon2	equ	0xFF1
  3194                           postinc0	equ	0xFEE
  3195                           wreg	equ	0xFE8
  3196                           postdec1	equ	0xFE5
  3197                           fsr1l	equ	0xFE1
  3198                           indf2	equ	0xFDF
  3199                           fsr2h	equ	0xFDA
  3200                           fsr2l	equ	0xFD9
  3201                           status	equ	0xFD8
  3202                           
  3203 ;; *************** function _lcd_init *****************
  3204 ;; Defined at:
  3205 ;;		line 14 in file "LCD.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, cstack
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3219 ;;      Params:         0       0       0       0       0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3221 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3222 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3223 ;;Total ram usage:        1 bytes
  3224 ;; Hardware stack levels used:    1
  3225 ;; Hardware stack levels required when called:    3
  3226 ;; This function calls:
  3227 ;;		_lcd_control
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text5
  3234  002C60                     __ptext5:
  3235                           	opt stack 0
  3236  002C60                     _lcd_init:
  3237                           	opt stack 27
  3238                           
  3239                           ;LCD.c: 15: TRISEbits.TRISE1 = 0;
  3240                           
  3241                           ;incstack = 0
  3242  002C60  9296               	bcf	3990,1,c	;volatile
  3243                           
  3244                           ;LCD.c: 16: TRISEbits.TRISE2 = 0;
  3245  002C62  9496               	bcf	3990,2,c	;volatile
  3246                           
  3247                           ;LCD.c: 17: TRISD = 0;
  3248  002C64  0E00               	movlw	0
  3249  002C66  6E95               	movwf	3989,c	;volatile
  3250                           
  3251                           ;LCD.c: 18: LATEbits.LATE1 = 0;
  3252  002C68  928D               	bcf	3981,1,c	;volatile
  3253                           
  3254                           ;LCD.c: 19: LATEbits.LATE2 = 0;
  3255  002C6A  948D               	bcf	3981,2,c	;volatile
  3256                           
  3257                           ;LCD.c: 20: LATD = 0;
  3258  002C6C  0E00               	movlw	0
  3259  002C6E  6E8C               	movwf	3980,c	;volatile
  3260                           
  3261                           ;LCD.c: 24: _delay((unsigned long)((50)*(8000000/4000.0)));
  3262  002C70  0E82               	movlw	130
  3263  002C72  6E12               	movwf	??_lcd_init& (0+255),c
  3264  002C74  0EDE               	movlw	222
  3265  002C76                     u5887:
  3266  002C76  2EE8               	decfsz	wreg,f,c
  3267  002C78  D7FE               	goto	u5887
  3268  002C7A  2E12               	decfsz	??_lcd_init& (0+255),f,c
  3269  002C7C  D7FC               	goto	u5887
  3270                           
  3271                           ;LCD.c: 25: lcd_control(0x38);
  3272  002C7E  0E38               	movlw	56
  3273  002C80  ECD1  F016         	call	_lcd_control
  3274                           
  3275                           ;LCD.c: 26: lcd_control(0x0D);
  3276  002C84  0E0D               	movlw	13
  3277  002C86  ECD1  F016         	call	_lcd_control
  3278                           
  3279                           ;LCD.c: 27: lcd_control(0x06);
  3280  002C8A  0E06               	movlw	6
  3281  002C8C  ECD1  F016         	call	_lcd_control
  3282                           
  3283                           ;LCD.c: 28: lcd_control(0x01);
  3284  002C90  0E01               	movlw	1
  3285  002C92  ECD1  F016         	call	_lcd_control
  3286  002C96  0012               	return		;funcret
  3287  002C98                     __end_of_lcd_init:
  3288                           	opt stack 0
  3289                           tblptru	equ	0xFF8
  3290                           tblptrh	equ	0xFF7
  3291                           tblptrl	equ	0xFF6
  3292                           tablat	equ	0xFF5
  3293                           intcon	equ	0xFF2
  3294                           intcon2	equ	0xFF1
  3295                           postinc0	equ	0xFEE
  3296                           wreg	equ	0xFE8
  3297                           postdec1	equ	0xFE5
  3298                           fsr1l	equ	0xFE1
  3299                           indf2	equ	0xFDF
  3300                           fsr2h	equ	0xFDA
  3301                           fsr2l	equ	0xFD9
  3302                           status	equ	0xFD8
  3303                           
  3304 ;; *************** function _ingresar_frecuencia *****************
  3305 ;; Defined at:
  3306 ;;		line 61 in file "LAB4.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  2  117[None  ] int 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3322 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3323 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3324 ;;Total ram usage:        2 bytes
  3325 ;; Hardware stack levels used:    1
  3326 ;; Hardware stack levels required when called:    4
  3327 ;; This function calls:
  3328 ;;		___wmul
  3329 ;;		_lcd_clear_display
  3330 ;;		_lcd_dato
  3331 ;;		_lcd_goto
  3332 ;;		_lcd_print
  3333 ;; This function is called by:
  3334 ;;		_main
  3335 ;; This function uses a non-reentrant model
  3336 ;;
  3337                           
  3338                           	psect	text6
  3339  001AD8                     __ptext6:
  3340                           	opt stack 0
  3341  001AD8                     _ingresar_frecuencia:
  3342                           	opt stack 26
  3343                           
  3344                           ;LAB4.c: 62: lcd_clear_display();
  3345                           
  3346                           ;incstack = 0
  3347  001AD8  EC0D  F017         	call	_lcd_clear_display	;wreg free
  3348                           
  3349                           ;LAB4.c: 63: lcd_goto(1,1);
  3350  001ADC  0E00               	movlw	0
  3351  001ADE  6E13               	movwf	lcd_goto@x+1,c
  3352  001AE0  0E01               	movlw	1
  3353  001AE2  6E12               	movwf	lcd_goto@x,c
  3354  001AE4  0E00               	movlw	0
  3355  001AE6  6E15               	movwf	lcd_goto@y+1,c
  3356  001AE8  0E01               	movlw	1
  3357  001AEA  6E14               	movwf	lcd_goto@y,c
  3358  001AEC  EC4C  F016         	call	_lcd_goto	;wreg free
  3359                           
  3360                           ;LAB4.c: 64: lcd_print("INGRESE LA     ");
  3361  001AF0  0E7E               	movlw	low STR_1
  3362  001AF2  6E12               	movwf	lcd_print@dato,c
  3363  001AF4  0E08               	movlw	high STR_1
  3364  001AF6  6E13               	movwf	lcd_print@dato+1,c
  3365  001AF8  EC84  F016         	call	_lcd_print	;wreg free
  3366                           
  3367                           ;LAB4.c: 65: lcd_goto(1,2);
  3368  001AFC  0E00               	movlw	0
  3369  001AFE  6E13               	movwf	lcd_goto@x+1,c
  3370  001B00  0E01               	movlw	1
  3371  001B02  6E12               	movwf	lcd_goto@x,c
  3372  001B04  0E00               	movlw	0
  3373  001B06  6E15               	movwf	lcd_goto@y+1,c
  3374  001B08  0E02               	movlw	2
  3375  001B0A  6E14               	movwf	lcd_goto@y,c
  3376  001B0C  EC4C  F016         	call	_lcd_goto	;wreg free
  3377                           
  3378                           ;LAB4.c: 66: lcd_print("FREC.:    Hz");
  3379  001B10  0EBB               	movlw	low STR_2
  3380  001B12  6E12               	movwf	lcd_print@dato,c
  3381  001B14  0E08               	movlw	high STR_2
  3382  001B16  6E13               	movwf	lcd_print@dato+1,c
  3383  001B18  EC84  F016         	call	_lcd_print	;wreg free
  3384  001B1C                     l4769:
  3385                           
  3386                           ;LAB4.c: 70: lcd_goto(7,2);
  3387  001B1C  0E00               	movlw	0
  3388  001B1E  6E13               	movwf	lcd_goto@x+1,c
  3389  001B20  0E07               	movlw	7
  3390  001B22  6E12               	movwf	lcd_goto@x,c
  3391  001B24  0E00               	movlw	0
  3392  001B26  6E15               	movwf	lcd_goto@y+1,c
  3393  001B28  0E02               	movlw	2
  3394  001B2A  6E14               	movwf	lcd_goto@y,c
  3395  001B2C  EC4C  F016         	call	_lcd_goto	;wreg free
  3396  001B30                     l4771:
  3397  001B30  BE50               	btfsc	_tecla+1,7,c
  3398  001B32  D006               	goto	l121
  3399  001B34  5050               	movf	_tecla+1,w,c
  3400  001B36  E1FC               	bnz	l4771
  3401  001B38  0E0A               	movlw	10
  3402  001B3A  5C4F               	subwf	_tecla,w,c
  3403  001B3C  B0D8               	btfsc	status,0,c
  3404  001B3E  D7F8               	goto	l4771
  3405  001B40                     l121:
  3406                           
  3407                           ;LAB4.c: 72: }
  3408                           ;LAB4.c: 74: centenas=tecla;
  3409  001B40  C04F  F043         	movff	_tecla,_centenas
  3410  001B44  C050  F044         	movff	_tecla+1,_centenas+1
  3411  001B48                     l123:
  3412  001B48  B2A6               	btfsc	4006,1,c	;volatile
  3413  001B4A  D7FE               	goto	l123
  3414  001B4C  0E01               	movlw	1
  3415  001B4E  6EA9               	movwf	4009,c	;volatile
  3416  001B50  C043  FFA8         	movff	_centenas,4008	;volatile
  3417  001B54  90D8               	bcf	status,0,c	;volatile
  3418  001B56  BEF2               	btfsc	intcon,7,c	;volatile
  3419  001B58  80D8               	bsf	status,0,c	;volatile
  3420  001B5A  9EF2               	bcf	intcon,7,c	;volatile
  3421  001B5C  84A6               	bsf	4006,2,c	;volatile
  3422  001B5E  0E55               	movlw	85
  3423  001B60  6EA7               	movwf	4007,c	;volatile
  3424  001B62  0EAA               	movlw	170
  3425  001B64  6EA7               	movwf	4007,c	;volatile
  3426  001B66  82A6               	bsf	4006,1,c	;volatile
  3427  001B68  94A6               	bcf	4006,2,c	;volatile
  3428  001B6A  B0D8               	btfsc	status,0,c	;volatile
  3429  001B6C  8EF2               	bsf	intcon,7,c	;volatile
  3430                           
  3431                           ;LAB4.c: 76: lcd_dato(centenas+48);
  3432  001B6E  5043               	movf	_centenas,w,c
  3433  001B70  0F30               	addlw	48
  3434  001B72  ECE1  F016         	call	_lcd_dato
  3435  001B76                     l4795:
  3436                           
  3437                           ;LAB4.c: 78: tecla=255;
  3438  001B76  0E00               	movlw	0
  3439  001B78  6E50               	movwf	_tecla+1,c
  3440  001B7A  684F               	setf	_tecla,c
  3441  001B7C                     l4797:
  3442  001B7C  BE50               	btfsc	_tecla+1,7,c
  3443  001B7E  D006               	goto	l4799
  3444  001B80  5050               	movf	_tecla+1,w,c
  3445  001B82  E1FC               	bnz	l4797
  3446  001B84  0E0B               	movlw	11
  3447  001B86  5C4F               	subwf	_tecla,w,c
  3448  001B88  B0D8               	btfsc	status,0,c
  3449  001B8A  D7F8               	goto	l4797
  3450  001B8C                     l4799:
  3451                           
  3452                           ;LAB4.c: 82: }
  3453                           ;LAB4.c: 84: if (tecla==10){
  3454  001B8C  0E0A               	movlw	10
  3455  001B8E  184F               	xorwf	_tecla,w,c
  3456  001B90  1050               	iorwf	_tecla+1,w,c
  3457  001B92  B4D8               	btfsc	status,2,c
  3458  001B94  D7C3               	goto	l4769
  3459                           
  3460                           ;LAB4.c: 86: }
  3461                           ;LAB4.c: 88: decenas=tecla;
  3462                           
  3463                           ;LAB4.c: 85: goto ONE;
  3464  001B96  C04F  F045         	movff	_tecla,_decenas
  3465  001B9A  C050  F046         	movff	_tecla+1,_decenas+1
  3466  001B9E                     l135:
  3467  001B9E  B2A6               	btfsc	4006,1,c	;volatile
  3468  001BA0  D7FE               	goto	l135
  3469  001BA2  0E02               	movlw	2
  3470  001BA4  6EA9               	movwf	4009,c	;volatile
  3471  001BA6  C045  FFA8         	movff	_decenas,4008	;volatile
  3472  001BAA  90D8               	bcf	status,0,c	;volatile
  3473  001BAC  BEF2               	btfsc	intcon,7,c	;volatile
  3474  001BAE  80D8               	bsf	status,0,c	;volatile
  3475  001BB0  9EF2               	bcf	intcon,7,c	;volatile
  3476  001BB2  84A6               	bsf	4006,2,c	;volatile
  3477  001BB4  0E55               	movlw	85
  3478  001BB6  6EA7               	movwf	4007,c	;volatile
  3479  001BB8  0EAA               	movlw	170
  3480  001BBA  6EA7               	movwf	4007,c	;volatile
  3481  001BBC  82A6               	bsf	4006,1,c	;volatile
  3482  001BBE  94A6               	bcf	4006,2,c	;volatile
  3483  001BC0  B0D8               	btfsc	status,0,c	;volatile
  3484  001BC2  8EF2               	bsf	intcon,7,c	;volatile
  3485                           
  3486                           ;LAB4.c: 90: lcd_dato(decenas+48);
  3487  001BC4  5045               	movf	_decenas,w,c
  3488  001BC6  0F30               	addlw	48
  3489  001BC8  ECE1  F016         	call	_lcd_dato
  3490  001BCC                     l4825:
  3491                           
  3492                           ;LAB4.c: 92: tecla=255;
  3493  001BCC  0E00               	movlw	0
  3494  001BCE  6E50               	movwf	_tecla+1,c
  3495  001BD0  684F               	setf	_tecla,c
  3496  001BD2                     l4827:
  3497  001BD2  BE50               	btfsc	_tecla+1,7,c
  3498  001BD4  D006               	goto	l4829
  3499  001BD6  5050               	movf	_tecla+1,w,c
  3500  001BD8  E1FC               	bnz	l4827
  3501  001BDA  0E0B               	movlw	11
  3502  001BDC  5C4F               	subwf	_tecla,w,c
  3503  001BDE  B0D8               	btfsc	status,0,c
  3504  001BE0  D7F8               	goto	l4827
  3505  001BE2                     l4829:
  3506                           
  3507                           ;LAB4.c: 95: }
  3508                           ;LAB4.c: 96: if (tecla==10){
  3509  001BE2  0E0A               	movlw	10
  3510  001BE4  184F               	xorwf	_tecla,w,c
  3511  001BE6  1050               	iorwf	_tecla+1,w,c
  3512  001BE8  A4D8               	btfss	status,2,c
  3513  001BEA  D00B               	goto	l145
  3514                           
  3515                           ;LAB4.c: 97: lcd_goto(8,2);
  3516  001BEC  0E00               	movlw	0
  3517  001BEE  6E13               	movwf	lcd_goto@x+1,c
  3518  001BF0  0E08               	movlw	8
  3519  001BF2  6E12               	movwf	lcd_goto@x,c
  3520  001BF4  0E00               	movlw	0
  3521  001BF6  6E15               	movwf	lcd_goto@y+1,c
  3522  001BF8  0E02               	movlw	2
  3523  001BFA  6E14               	movwf	lcd_goto@y,c
  3524  001BFC  EC4C  F016         	call	_lcd_goto	;wreg free
  3525                           
  3526                           ;LAB4.c: 98: goto two;
  3527  001C00  D7BA               	goto	l4795
  3528  001C02                     l145:
  3529                           
  3530                           ;LAB4.c: 99: }
  3531                           ;LAB4.c: 101: unidades=tecla;
  3532  001C02  C04F  F04B         	movff	_tecla,_unidades
  3533  001C06  C050  F04C         	movff	_tecla+1,_unidades+1
  3534  001C0A                     l147:
  3535  001C0A  B2A6               	btfsc	4006,1,c	;volatile
  3536  001C0C  D7FE               	goto	l147
  3537  001C0E  0E03               	movlw	3
  3538  001C10  6EA9               	movwf	4009,c	;volatile
  3539  001C12  C04B  FFA8         	movff	_unidades,4008	;volatile
  3540  001C16  90D8               	bcf	status,0,c	;volatile
  3541  001C18  BEF2               	btfsc	intcon,7,c	;volatile
  3542  001C1A  80D8               	bsf	status,0,c	;volatile
  3543  001C1C  9EF2               	bcf	intcon,7,c	;volatile
  3544  001C1E  84A6               	bsf	4006,2,c	;volatile
  3545  001C20  0E55               	movlw	85
  3546  001C22  6EA7               	movwf	4007,c	;volatile
  3547  001C24  0EAA               	movlw	170
  3548  001C26  6EA7               	movwf	4007,c	;volatile
  3549  001C28  82A6               	bsf	4006,1,c	;volatile
  3550  001C2A  94A6               	bcf	4006,2,c	;volatile
  3551  001C2C  B0D8               	btfsc	status,0,c	;volatile
  3552  001C2E  8EF2               	bsf	intcon,7,c	;volatile
  3553                           
  3554                           ;LAB4.c: 103: lcd_dato(unidades+48);
  3555  001C30  504B               	movf	_unidades,w,c
  3556  001C32  0F30               	addlw	48
  3557  001C34  ECE1  F016         	call	_lcd_dato
  3558  001C38                     l4855:
  3559  001C38  0E0F               	movlw	15
  3560  001C3A  184F               	xorwf	_tecla,w,c
  3561  001C3C  1050               	iorwf	_tecla+1,w,c
  3562  001C3E  B4D8               	btfsc	status,2,c
  3563  001C40  D005               	goto	l4859
  3564  001C42  0E0A               	movlw	10
  3565  001C44  184F               	xorwf	_tecla,w,c
  3566  001C46  1050               	iorwf	_tecla+1,w,c
  3567  001C48  A4D8               	btfss	status,2,c
  3568  001C4A  D7F6               	goto	l4855
  3569  001C4C                     l4859:
  3570                           
  3571                           ;LAB4.c: 107: }
  3572                           ;LAB4.c: 109: if (tecla==10){
  3573  001C4C  0E0A               	movlw	10
  3574  001C4E  184F               	xorwf	_tecla,w,c
  3575  001C50  1050               	iorwf	_tecla+1,w,c
  3576  001C52  A4D8               	btfss	status,2,c
  3577  001C54  D00B               	goto	l4863
  3578                           
  3579                           ;LAB4.c: 110: lcd_goto(9,2);
  3580  001C56  0E00               	movlw	0
  3581  001C58  6E13               	movwf	lcd_goto@x+1,c
  3582  001C5A  0E09               	movlw	9
  3583  001C5C  6E12               	movwf	lcd_goto@x,c
  3584  001C5E  0E00               	movlw	0
  3585  001C60  6E15               	movwf	lcd_goto@y+1,c
  3586  001C62  0E02               	movlw	2
  3587  001C64  6E14               	movwf	lcd_goto@y,c
  3588  001C66  EC4C  F016         	call	_lcd_goto	;wreg free
  3589                           
  3590                           ;LAB4.c: 111: goto three;
  3591  001C6A  D7B0               	goto	l4825
  3592  001C6C                     l4863:
  3593                           
  3594                           ;LAB4.c: 112: }
  3595                           ;LAB4.c: 113: frecuencia=unidades+10*decenas+100*centenas;
  3596  001C6C  C045  F00F         	movff	_decenas,___wmul@multiplier
  3597  001C70  C046  F010         	movff	_decenas+1,___wmul@multiplier+1
  3598  001C74  0E00               	movlw	0
  3599  001C76  6E12               	movwf	___wmul@multiplicand+1,c
  3600  001C78  0E0A               	movlw	10
  3601  001C7A  6E11               	movwf	___wmul@multiplicand,c
  3602  001C7C  ECAC  F016         	call	___wmul	;wreg free
  3603  001C80  C00F  F019         	movff	?___wmul,??_ingresar_frecuencia
  3604  001C84  C010  F01A         	movff	?___wmul+1,??_ingresar_frecuencia+1
  3605  001C88  C043  F00F         	movff	_centenas,___wmul@multiplier
  3606  001C8C  C044  F010         	movff	_centenas+1,___wmul@multiplier+1
  3607  001C90  0E00               	movlw	0
  3608  001C92  6E12               	movwf	___wmul@multiplicand+1,c
  3609  001C94  0E64               	movlw	100
  3610  001C96  6E11               	movwf	___wmul@multiplicand,c
  3611  001C98  ECAC  F016         	call	___wmul	;wreg free
  3612  001C9C  500F               	movf	?___wmul,w,c
  3613  001C9E  2619               	addwf	??_ingresar_frecuencia,f,c
  3614  001CA0  5010               	movf	?___wmul+1,w,c
  3615  001CA2  221A               	addwfc	??_ingresar_frecuencia+1,f,c
  3616  001CA4  504B               	movf	_unidades,w,c
  3617  001CA6  2419               	addwf	??_ingresar_frecuencia,w,c
  3618  001CA8  6E4D               	movwf	_frecuencia,c
  3619  001CAA  504C               	movf	_unidades+1,w,c
  3620  001CAC  201A               	addwfc	??_ingresar_frecuencia+1,w,c
  3621  001CAE  6E4E               	movwf	_frecuencia+1,c
  3622  001CB0                     l160:
  3623  001CB0  B2A6               	btfsc	4006,1,c	;volatile
  3624  001CB2  D7FE               	goto	l160
  3625  001CB4  0E04               	movlw	4
  3626  001CB6  6EA9               	movwf	4009,c	;volatile
  3627  001CB8  C04D  FFA8         	movff	_frecuencia,4008	;volatile
  3628  001CBC  90D8               	bcf	status,0,c	;volatile
  3629  001CBE  BEF2               	btfsc	intcon,7,c	;volatile
  3630  001CC0  80D8               	bsf	status,0,c	;volatile
  3631  001CC2  9EF2               	bcf	intcon,7,c	;volatile
  3632  001CC4  84A6               	bsf	4006,2,c	;volatile
  3633  001CC6  0E55               	movlw	85
  3634  001CC8  6EA7               	movwf	4007,c	;volatile
  3635  001CCA  0EAA               	movlw	170
  3636  001CCC  6EA7               	movwf	4007,c	;volatile
  3637  001CCE  82A6               	bsf	4006,1,c	;volatile
  3638  001CD0  94A6               	bcf	4006,2,c	;volatile
  3639  001CD2  A0D8               	btfss	status,0,c	;volatile
  3640  001CD4  0012               	return	
  3641  001CD6  8EF2               	bsf	intcon,7,c	;volatile
  3642  001CD8  0012               	return	
  3643  001CDA                     __end_of_ingresar_frecuencia:
  3644                           	opt stack 0
  3645                           tblptru	equ	0xFF8
  3646                           tblptrh	equ	0xFF7
  3647                           tblptrl	equ	0xFF6
  3648                           tablat	equ	0xFF5
  3649                           intcon	equ	0xFF2
  3650                           intcon2	equ	0xFF1
  3651                           postinc0	equ	0xFEE
  3652                           wreg	equ	0xFE8
  3653                           postdec1	equ	0xFE5
  3654                           fsr1l	equ	0xFE1
  3655                           indf2	equ	0xFDF
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8
  3659                           
  3660 ;; *************** function _lcd_print *****************
  3661 ;; Defined at:
  3662 ;;		line 73 in file "LCD.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;  dato            2   17[COMRAM] PTR unsigned char 
  3665 ;;		 -> STR_13(16), STR_12(13), STR_11(12), STR_10(13), 
  3666 ;;		 -> STR_9(16), STR_8(13), STR_7(13), STR_6(17), 
  3667 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(13), 
  3668 ;;		 -> STR_1(16), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;		None
  3671 ;; Return value:  Size  Location     Type
  3672 ;;                  1    wreg      void 
  3673 ;; Registers used:
  3674 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3675 ;; Tracked objects:
  3676 ;;		On entry : 0/0
  3677 ;;		On exit  : 0/0
  3678 ;;		Unchanged: 0/0
  3679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3680 ;;      Params:         2       0       0       0       0       0       0       0       0
  3681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3683 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3684 ;;Total ram usage:        2 bytes
  3685 ;; Hardware stack levels used:    1
  3686 ;; Hardware stack levels required when called:    3
  3687 ;; This function calls:
  3688 ;;		_lcd_dato
  3689 ;; This function is called by:
  3690 ;;		_ingresar_frecuencia
  3691 ;;		_main
  3692 ;;		_lcd_print_with_position
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text7
  3697  002D08                     __ptext7:
  3698                           	opt stack 0
  3699  002D08                     _lcd_print:
  3700                           	opt stack 27
  3701                           
  3702                           ;LCD.c: 74: while (*dato)
  3703                           
  3704                           ;incstack = 0
  3705  002D08  D00A               	goto	l3241
  3706  002D0A                     l3237:
  3707                           
  3708                           ;LCD.c: 75: {
  3709                           ;LCD.c: 76: lcd_dato(*dato);
  3710  002D0A  C012  FFF6         	movff	lcd_print@dato,tblptrl
  3711  002D0E  C013  FFF7         	movff	lcd_print@dato+1,tblptrh
  3712  002D12                     	if	0	;tblptru may be non-zero
  3713  002D12                     	endif
  3714  002D12                     	if	0	;tblptru may be non-zero
  3715  002D12                     	endif
  3716  002D12  0008               	tblrd		*
  3717  002D14  50F5               	movf	tablat,w,c
  3718  002D16  ECE1  F016         	call	_lcd_dato
  3719                           
  3720                           ;LCD.c: 77: dato++;
  3721  002D1A  4A12               	infsnz	lcd_print@dato,f,c
  3722  002D1C  2A13               	incf	lcd_print@dato+1,f,c
  3723  002D1E                     l3241:
  3724  002D1E  C012  FFF6         	movff	lcd_print@dato,tblptrl
  3725  002D22  C013  FFF7         	movff	lcd_print@dato+1,tblptrh
  3726  002D26                     	if	0	;tblptru may be non-zero
  3727  002D26                     	endif
  3728  002D26                     	if	0	;tblptru may be non-zero
  3729  002D26                     	endif
  3730  002D26  0008               	tblrd		*
  3731  002D28  50F5               	movf	tablat,w,c
  3732  002D2A  0900               	iorlw	0
  3733  002D2C  B4D8               	btfsc	status,2,c
  3734  002D2E  0012               	return	
  3735  002D30  D7EC               	goto	l3237
  3736  002D32                     __end_of_lcd_print:
  3737                           	opt stack 0
  3738                           tblptru	equ	0xFF8
  3739                           tblptrh	equ	0xFF7
  3740                           tblptrl	equ	0xFF6
  3741                           tablat	equ	0xFF5
  3742                           intcon	equ	0xFF2
  3743                           intcon2	equ	0xFF1
  3744                           postinc0	equ	0xFEE
  3745                           wreg	equ	0xFE8
  3746                           postdec1	equ	0xFE5
  3747                           fsr1l	equ	0xFE1
  3748                           indf2	equ	0xFDF
  3749                           fsr2h	equ	0xFDA
  3750                           fsr2l	equ	0xFD9
  3751                           status	equ	0xFD8
  3752                           
  3753 ;; *************** function _lcd_dato *****************
  3754 ;; Defined at:
  3755 ;;		line 49 in file "LCD.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;  dato            1    wreg     unsigned char 
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;  dato            1   16[COMRAM] unsigned char 
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		wreg, cstack
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/0
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0
  3770 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3771 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3772 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3773 ;;Total ram usage:        2 bytes
  3774 ;; Hardware stack levels used:    1
  3775 ;; Hardware stack levels required when called:    2
  3776 ;; This function calls:
  3777 ;;		_lcd_time_control
  3778 ;; This function is called by:
  3779 ;;		_ingresar_frecuencia
  3780 ;;		_main
  3781 ;;		_lcd_print
  3782 ;;		_lcd_put_caracter
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text8
  3787  002DC2                     __ptext8:
  3788                           	opt stack 0
  3789  002DC2                     _lcd_dato:
  3790                           	opt stack 27
  3791                           
  3792                           ;incstack = 0
  3793                           ;lcd_dato@dato stored from wreg
  3794  002DC2  6E11               	movwf	lcd_dato@dato,c
  3795                           
  3796                           ;LCD.c: 50: LATEbits.LATE1 = 1;
  3797  002DC4  828D               	bsf	3981,1,c	;volatile
  3798                           
  3799                           ;LCD.c: 51: LATD =dato;
  3800  002DC6  C011  FF8C         	movff	lcd_dato@dato,3980	;volatile
  3801                           
  3802                           ;LCD.c: 52: lcd_time_control();
  3803  002DCA  EC99  F016         	call	_lcd_time_control	;wreg free
  3804                           
  3805                           ;LCD.c: 53: _delay((unsigned long)((10)*(8000000/4000.0)));
  3806  002DCE  0E1A               	movlw	26
  3807  002DD0  6E10               	movwf	??_lcd_dato& (0+255),c
  3808  002DD2  0EF8               	movlw	248
  3809  002DD4                     u5897:
  3810  002DD4  2EE8               	decfsz	wreg,f,c
  3811  002DD6  D7FE               	goto	u5897
  3812  002DD8  2E10               	decfsz	??_lcd_dato& (0+255),f,c
  3813  002DDA  D7FC               	goto	u5897
  3814  002DDC  D000               	nop2	
  3815  002DDE  0012               	return		;funcret
  3816  002DE0                     __end_of_lcd_dato:
  3817                           	opt stack 0
  3818                           tblptru	equ	0xFF8
  3819                           tblptrh	equ	0xFF7
  3820                           tblptrl	equ	0xFF6
  3821                           tablat	equ	0xFF5
  3822                           intcon	equ	0xFF2
  3823                           intcon2	equ	0xFF1
  3824                           postinc0	equ	0xFEE
  3825                           wreg	equ	0xFE8
  3826                           postdec1	equ	0xFE5
  3827                           fsr1l	equ	0xFE1
  3828                           indf2	equ	0xFDF
  3829                           fsr2h	equ	0xFDA
  3830                           fsr2l	equ	0xFD9
  3831                           status	equ	0xFD8
  3832                           
  3833 ;; *************** function _lcd_goto *****************
  3834 ;; Defined at:
  3835 ;;		line 101 in file "LCD.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  x               2   17[COMRAM] int 
  3838 ;;  y               2   19[COMRAM] int 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  posicion        1   23[COMRAM] unsigned char 
  3841 ;; Return value:  Size  Location     Type
  3842 ;;                  1    wreg      void 
  3843 ;; Registers used:
  3844 ;;		wreg, status,2, status,0, cstack
  3845 ;; Tracked objects:
  3846 ;;		On entry : 0/0
  3847 ;;		On exit  : 0/0
  3848 ;;		Unchanged: 0/0
  3849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3850 ;;      Params:         4       0       0       0       0       0       0       0       0
  3851 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3852 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3853 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3854 ;;Total ram usage:        7 bytes
  3855 ;; Hardware stack levels used:    1
  3856 ;; Hardware stack levels required when called:    3
  3857 ;; This function calls:
  3858 ;;		_lcd_control
  3859 ;; This function is called by:
  3860 ;;		_ingresar_frecuencia
  3861 ;;		_main
  3862 ;; This function uses a non-reentrant model
  3863 ;;
  3864                           
  3865                           	psect	text9
  3866  002C98                     __ptext9:
  3867                           	opt stack 0
  3868  002C98                     _lcd_goto:
  3869                           	opt stack 27
  3870                           
  3871                           ;LCD.c: 102: char posicion;
  3872                           ;LCD.c: 103: switch (y) {
  3873                           
  3874                           ;incstack = 0
  3875  002C98  D007               	goto	l3227
  3876  002C9A                     l3221:
  3877  002C9A  5012               	movf	lcd_goto@x,w,c
  3878  002C9C  0FC0               	addlw	192
  3879  002C9E  D002               	goto	L3
  3880  002CA0                     l3223:
  3881  002CA0  5012               	movf	lcd_goto@x,w,c
  3882  002CA2  0F80               	addlw	128
  3883  002CA4                     L3:
  3884  002CA4  6E18               	movwf	lcd_goto@posicion,c
  3885                           
  3886                           ;LCD.c: 110: }
  3887                           
  3888                           ;LCD.c: 109: break;
  3889  002CA6  D010               	goto	l3229
  3890  002CA8                     l3227:
  3891  002CA8  C014  F016         	movff	lcd_goto@y,??_lcd_goto
  3892  002CAC  C015  F017         	movff	lcd_goto@y+1,??_lcd_goto+1
  3893                           
  3894                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3895                           ; Switch size 1, requested type "space"
  3896                           ; Number of cases is 1, Range of values is 0 to 0
  3897                           ; switch strategies available:
  3898                           ; Name         Instructions Cycles
  3899                           ; simple_byte            4     3 (average)
  3900                           ;	Chosen strategy is simple_byte
  3901  002CB0  5017               	movf	??_lcd_goto+1,w,c
  3902  002CB2  0A00               	xorlw	0	; case 0
  3903  002CB4  A4D8               	btfss	status,2,c
  3904  002CB6  D7F4               	goto	l3223
  3905                           
  3906                           ; Switch size 1, requested type "space"
  3907                           ; Number of cases is 2, Range of values is 1 to 2
  3908                           ; switch strategies available:
  3909                           ; Name         Instructions Cycles
  3910                           ; simple_byte            7     4 (average)
  3911                           ;	Chosen strategy is simple_byte
  3912  002CB8  5016               	movf	??_lcd_goto,w,c
  3913  002CBA  0A01               	xorlw	1	; case 1
  3914  002CBC  B4D8               	btfsc	status,2,c
  3915  002CBE  D7F0               	goto	l3223
  3916  002CC0  0A03               	xorlw	3	; case 2
  3917  002CC2  B4D8               	btfsc	status,2,c
  3918  002CC4  D7EA               	goto	l3221
  3919  002CC6  D7EC               	goto	l3223
  3920  002CC8                     l3229:
  3921                           
  3922                           ;LCD.c: 111: lcd_control(posicion);
  3923  002CC8  5018               	movf	lcd_goto@posicion,w,c
  3924  002CCA  ECD1  F016         	call	_lcd_control
  3925  002CCE  0012               	return		;funcret
  3926  002CD0                     __end_of_lcd_goto:
  3927                           	opt stack 0
  3928                           tblptru	equ	0xFF8
  3929                           tblptrh	equ	0xFF7
  3930                           tblptrl	equ	0xFF6
  3931                           tablat	equ	0xFF5
  3932                           intcon	equ	0xFF2
  3933                           intcon2	equ	0xFF1
  3934                           postinc0	equ	0xFEE
  3935                           wreg	equ	0xFE8
  3936                           postdec1	equ	0xFE5
  3937                           fsr1l	equ	0xFE1
  3938                           indf2	equ	0xFDF
  3939                           fsr2h	equ	0xFDA
  3940                           fsr2l	equ	0xFD9
  3941                           status	equ	0xFD8
  3942                           
  3943 ;; *************** function _lcd_clear_display *****************
  3944 ;; Defined at:
  3945 ;;		line 59 in file "LCD.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  2   20[None  ] int 
  3952 ;; Registers used:
  3953 ;;		wreg, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    3
  3966 ;; This function calls:
  3967 ;;		_lcd_control
  3968 ;; This function is called by:
  3969 ;;		_ingresar_frecuencia
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           	psect	text10
  3975  002E1A                     __ptext10:
  3976                           	opt stack 0
  3977  002E1A                     _lcd_clear_display:
  3978                           	opt stack 27
  3979                           
  3980                           ;LCD.c: 60: lcd_control(0x01);
  3981                           
  3982                           ;incstack = 0
  3983  002E1A  0E01               	movlw	1
  3984  002E1C  ECD1  F016         	call	_lcd_control
  3985  002E20  0012               	return		;funcret
  3986  002E22                     __end_of_lcd_clear_display:
  3987                           	opt stack 0
  3988                           tblptru	equ	0xFF8
  3989                           tblptrh	equ	0xFF7
  3990                           tblptrl	equ	0xFF6
  3991                           tablat	equ	0xFF5
  3992                           intcon	equ	0xFF2
  3993                           intcon2	equ	0xFF1
  3994                           postinc0	equ	0xFEE
  3995                           wreg	equ	0xFE8
  3996                           postdec1	equ	0xFE5
  3997                           fsr1l	equ	0xFE1
  3998                           indf2	equ	0xFDF
  3999                           fsr2h	equ	0xFDA
  4000                           fsr2l	equ	0xFD9
  4001                           status	equ	0xFD8
  4002                           
  4003 ;; *************** function _lcd_control *****************
  4004 ;; Defined at:
  4005 ;;		line 36 in file "LCD.c"
  4006 ;; Parameters:    Size  Location     Type
  4007 ;;  dato            1    wreg     unsigned char 
  4008 ;; Auto vars:     Size  Location     Type
  4009 ;;  dato            1   16[COMRAM] unsigned char 
  4010 ;; Return value:  Size  Location     Type
  4011 ;;                  1    wreg      void 
  4012 ;; Registers used:
  4013 ;;		wreg, cstack
  4014 ;; Tracked objects:
  4015 ;;		On entry : 0/0
  4016 ;;		On exit  : 0/0
  4017 ;;		Unchanged: 0/0
  4018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4019 ;;      Params:         0       0       0       0       0       0       0       0       0
  4020 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4021 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4022 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4023 ;;Total ram usage:        2 bytes
  4024 ;; Hardware stack levels used:    1
  4025 ;; Hardware stack levels required when called:    2
  4026 ;; This function calls:
  4027 ;;		_lcd_time_control
  4028 ;; This function is called by:
  4029 ;;		_lcd_init
  4030 ;;		_lcd_clear_display
  4031 ;;		_lcd_goto
  4032 ;;		_lcd_cursor_home
  4033 ;;		_lcd_print_with_position
  4034 ;;		_lcd_put_caracter
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text11
  4039  002DA2                     __ptext11:
  4040                           	opt stack 0
  4041  002DA2                     _lcd_control:
  4042                           	opt stack 27
  4043                           
  4044                           ;incstack = 0
  4045                           ;lcd_control@dato stored from wreg
  4046  002DA2  6E11               	movwf	lcd_control@dato,c
  4047                           
  4048                           ;LCD.c: 37: LATEbits.LATE1 = 0;
  4049  002DA4  928D               	bcf	3981,1,c	;volatile
  4050                           
  4051                           ;LCD.c: 38: LATD =dato;
  4052  002DA6  C011  FF8C         	movff	lcd_control@dato,3980	;volatile
  4053                           
  4054                           ;LCD.c: 39: lcd_time_control();
  4055  002DAA  EC99  F016         	call	_lcd_time_control	;wreg free
  4056                           
  4057                           ;LCD.c: 40: _delay((unsigned long)((10)*(8000000/4000.0)));
  4058  002DAE  0E1A               	movlw	26
  4059  002DB0  6E10               	movwf	??_lcd_control& (0+255),c
  4060  002DB2  0EF8               	movlw	248
  4061  002DB4                     u5907:
  4062  002DB4  2EE8               	decfsz	wreg,f,c
  4063  002DB6  D7FE               	goto	u5907
  4064  002DB8  2E10               	decfsz	??_lcd_control& (0+255),f,c
  4065  002DBA  D7FC               	goto	u5907
  4066  002DBC  D000               	nop2	
  4067                           
  4068                           ;LCD.c: 41: LATEbits.LATE1=1;
  4069  002DBE  828D               	bsf	3981,1,c	;volatile
  4070  002DC0  0012               	return		;funcret
  4071  002DC2                     __end_of_lcd_control:
  4072                           	opt stack 0
  4073                           tblptru	equ	0xFF8
  4074                           tblptrh	equ	0xFF7
  4075                           tblptrl	equ	0xFF6
  4076                           tablat	equ	0xFF5
  4077                           intcon	equ	0xFF2
  4078                           intcon2	equ	0xFF1
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec1	equ	0xFE5
  4082                           fsr1l	equ	0xFE1
  4083                           indf2	equ	0xFDF
  4084                           fsr2h	equ	0xFDA
  4085                           fsr2l	equ	0xFD9
  4086                           status	equ	0xFD8
  4087                           
  4088 ;; *************** function _lcd_time_control *****************
  4089 ;; Defined at:
  4090 ;;		line 128 in file "LCD.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;		None
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;		None
  4095 ;; Return value:  Size  Location     Type
  4096 ;;                  1    wreg      void 
  4097 ;; Registers used:
  4098 ;;		wreg
  4099 ;; Tracked objects:
  4100 ;;		On entry : 0/0
  4101 ;;		On exit  : 0/0
  4102 ;;		Unchanged: 0/0
  4103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4104 ;;      Params:         0       0       0       0       0       0       0       0       0
  4105 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4106 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4107 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4108 ;;Total ram usage:        1 bytes
  4109 ;; Hardware stack levels used:    1
  4110 ;; Hardware stack levels required when called:    1
  4111 ;; This function calls:
  4112 ;;		Nothing
  4113 ;; This function is called by:
  4114 ;;		_lcd_control
  4115 ;;		_lcd_dato
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text12
  4120  002D32                     __ptext12:
  4121                           	opt stack 0
  4122  002D32                     _lcd_time_control:
  4123                           	opt stack 27
  4124                           
  4125                           ;LCD.c: 129: LATEbits.LATE2 = 1;
  4126                           
  4127                           ;incstack = 0
  4128  002D32  848D               	bsf	3981,2,c	;volatile
  4129                           
  4130                           ;LCD.c: 130: _delay((unsigned long)((10)*(8000000/4000.0)));
  4131  002D34  0E1A               	movlw	26
  4132  002D36  6E0F               	movwf	??_lcd_time_control& (0+255),c
  4133  002D38  0EF8               	movlw	248
  4134  002D3A                     u5917:
  4135  002D3A  2EE8               	decfsz	wreg,f,c
  4136  002D3C  D7FE               	goto	u5917
  4137  002D3E  2E0F               	decfsz	??_lcd_time_control& (0+255),f,c
  4138  002D40  D7FC               	goto	u5917
  4139  002D42  D000               	nop2	
  4140                           
  4141                           ;LCD.c: 131: LATEbits.LATE2 = 0;
  4142  002D44  948D               	bcf	3981,2,c	;volatile
  4143                           
  4144                           ;LCD.c: 132: _delay((unsigned long)((10)*(8000000/4000.0)));
  4145  002D46  0E1A               	movlw	26
  4146  002D48  6E0F               	movwf	??_lcd_time_control& (0+255),c
  4147  002D4A  0EF8               	movlw	248
  4148  002D4C                     u5927:
  4149  002D4C  2EE8               	decfsz	wreg,f,c
  4150  002D4E  D7FE               	goto	u5927
  4151  002D50  2E0F               	decfsz	??_lcd_time_control& (0+255),f,c
  4152  002D52  D7FC               	goto	u5927
  4153  002D54  D000               	nop2	
  4154  002D56  0012               	return		;funcret
  4155  002D58                     __end_of_lcd_time_control:
  4156                           	opt stack 0
  4157                           tblptru	equ	0xFF8
  4158                           tblptrh	equ	0xFF7
  4159                           tblptrl	equ	0xFF6
  4160                           tablat	equ	0xFF5
  4161                           intcon	equ	0xFF2
  4162                           intcon2	equ	0xFF1
  4163                           postinc0	equ	0xFEE
  4164                           wreg	equ	0xFE8
  4165                           postdec1	equ	0xFE5
  4166                           fsr1l	equ	0xFE1
  4167                           indf2	equ	0xFDF
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172 ;; *************** function _cuadrada *****************
  4173 ;; Defined at:
  4174 ;;		line 177 in file "LAB4.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  frec            2   34[BANK0 ] int 
  4177 ;; Auto vars:     Size  Location     Type
  4178 ;;  x               2   46[BANK0 ] int 
  4179 ;;  h               2   44[BANK0 ] int 
  4180 ;;  z               2   42[BANK0 ] int 
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  2   34[BANK0 ] int 
  4183 ;; Registers used:
  4184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4190 ;;      Params:         0       2       0       0       0       0       0       0       0
  4191 ;;      Locals:         0      12       0       0       0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4193 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4194 ;;Total ram usage:       14 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    6
  4197 ;; This function calls:
  4198 ;;		_Delay100TCYx
  4199 ;;		_Delay10TCYx
  4200 ;;		_Delay1KTCYx
  4201 ;;		___awtoft
  4202 ;;		___ftdiv
  4203 ;;		___fttol
  4204 ;;		_pow
  4205 ;; This function is called by:
  4206 ;;		_main
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text13
  4211  001216                     __ptext13:
  4212                           	opt stack 0
  4213  001216                     _cuadrada:
  4214                           	opt stack 24
  4215                           
  4216                           ;LAB4.c: 178: if (frec >=50){
  4217                           
  4218                           ;incstack = 0
  4219  001216  0100               	movlb	0	; () banked
  4220  001218  BFCB               	btfsc	(cuadrada@frec+1)& (0+255),7,b
  4221  00121A  D09B               	goto	l5015
  4222  00121C  0100               	movlb	0	; () banked
  4223  00121E  51CB               	movf	(cuadrada@frec+1)& (0+255),w,b
  4224  001220  E105               	bnz	u5230
  4225  001222  0E32               	movlw	50
  4226  001224  0100               	movlb	0	; () banked
  4227  001226  5DCA               	subwf	cuadrada@frec& (0+255),w,b
  4228  001228  A0D8               	btfss	status,0,c
  4229  00122A  D093               	goto	l5015
  4230  00122C                     u5230:
  4231                           
  4232                           ; BSR set to: 0
  4233                           ;LAB4.c: 179: int z=0;
  4234  00122C  0E00               	movlw	0
  4235  00122E  0100               	movlb	0	; () banked
  4236  001230  6FD3               	movwf	(cuadrada@z+1)& (0+255),b
  4237  001232  0E00               	movlw	0
  4238  001234  6FD2               	movwf	cuadrada@z& (0+255),b
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;LAB4.c: 180: z=11051/pow(frec,1.034);
  4242  001236  C0CA  F017         	movff	cuadrada@frec,___awtoft@c
  4243  00123A  C0CB  F018         	movff	cuadrada@frec+1,___awtoft@c+1
  4244  00123E  EC68  F016         	call	___awtoft	;wreg free
  4245  001242  C017  F0CC         	movff	?___awtoft,_cuadrada$1046
  4246  001246  C018  F0CD         	movff	?___awtoft+1,_cuadrada$1046+1
  4247  00124A  C019  F0CE         	movff	?___awtoft+2,_cuadrada$1046+2
  4248                           
  4249                           ;LAB4.c: 180: z=11051/pow(frec,1.034);
  4250  00124E  0E5A               	movlw	90
  4251  001250  0100               	movlb	0	; () banked
  4252  001252  6FBC               	movwf	pow@y& (0+255),b
  4253  001254  0E84               	movlw	132
  4254  001256  0100               	movlb	0	; () banked
  4255  001258  6FBD               	movwf	(pow@y+1)& (0+255),b
  4256  00125A  0E3F               	movlw	63
  4257  00125C  0100               	movlb	0	; () banked
  4258  00125E  6FBE               	movwf	(pow@y+2)& (0+255),b
  4259  001260  C0CC  F0B9         	movff	_cuadrada$1046,pow@x
  4260  001264  C0CD  F0BA         	movff	_cuadrada$1046+1,pow@x+1
  4261  001268  C0CE  F0BB         	movff	_cuadrada$1046+2,pow@x+2
  4262  00126C  EC43  F00F         	call	_pow	;wreg free
  4263  001270  C0B9  F0CF         	movff	?_pow,_cuadrada$1047
  4264  001274  C0BA  F0D0         	movff	?_pow+1,_cuadrada$1047+1
  4265  001278  C0BB  F0D1         	movff	?_pow+2,_cuadrada$1047+2
  4266                           
  4267                           ;LAB4.c: 180: z=11051/pow(frec,1.034);
  4268  00127C  C0CF  F01E         	movff	_cuadrada$1047,___ftdiv@f2
  4269  001280  C0D0  F01F         	movff	_cuadrada$1047+1,___ftdiv@f2+1
  4270  001284  C0D1  F020         	movff	_cuadrada$1047+2,___ftdiv@f2+2
  4271  001288  0EAC               	movlw	172
  4272  00128A  6E1B               	movwf	___ftdiv@f1,c
  4273  00128C  0E2C               	movlw	44
  4274  00128E  6E1C               	movwf	___ftdiv@f1+1,c
  4275  001290  0E46               	movlw	70
  4276  001292  6E1D               	movwf	___ftdiv@f1+2,c
  4277  001294  EC50  F013         	call	___ftdiv	;wreg free
  4278  001298  C01B  F02A         	movff	?___ftdiv,___fttol@f1
  4279  00129C  C01C  F02B         	movff	?___ftdiv+1,___fttol@f1+1
  4280  0012A0  C01D  F02C         	movff	?___ftdiv+2,___fttol@f1+2
  4281  0012A4  ECE3  F011         	call	___fttol	;wreg free
  4282  0012A8  C02A  F0D2         	movff	?___fttol,cuadrada@z
  4283  0012AC  C02B  F0D3         	movff	?___fttol+1,cuadrada@z+1
  4284                           
  4285                           ;LAB4.c: 181: while (tecla!=11 && tecla!=12){
  4286  0012B0  D046               	goto	l5011
  4287  0012B2                     l4973:
  4288                           
  4289                           ;LAB4.c: 182: LATA=0;
  4290  0012B2  0E00               	movlw	0
  4291  0012B4  6E89               	movwf	3977,c	;volatile
  4292                           
  4293                           ;LAB4.c: 183: LATC=0;
  4294  0012B6  0E00               	movlw	0
  4295  0012B8  6E8B               	movwf	3979,c	;volatile
  4296                           
  4297                           ;LAB4.c: 184: Delay10TCYx(z);
  4298  0012BA  0100               	movlb	0	; () banked
  4299  0012BC  51D2               	movf	cuadrada@z& (0+255),w,b
  4300  0012BE  ECF8  F016         	call	_Delay10TCYx
  4301                           
  4302                           ;LAB4.c: 185: Delay10TCYx(z);
  4303  0012C2  0100               	movlb	0	; () banked
  4304  0012C4  51D2               	movf	cuadrada@z& (0+255),w,b
  4305  0012C6  ECF8  F016         	call	_Delay10TCYx
  4306                           
  4307                           ;LAB4.c: 186: Delay10TCYx(z);
  4308  0012CA  0100               	movlb	0	; () banked
  4309  0012CC  51D2               	movf	cuadrada@z& (0+255),w,b
  4310  0012CE  ECF8  F016         	call	_Delay10TCYx
  4311                           
  4312                           ;LAB4.c: 187: Delay10TCYx(z);
  4313  0012D2  0100               	movlb	0	; () banked
  4314  0012D4  51D2               	movf	cuadrada@z& (0+255),w,b
  4315  0012D6  ECF8  F016         	call	_Delay10TCYx
  4316                           
  4317                           ;LAB4.c: 188: Delay10TCYx(z);
  4318  0012DA  0100               	movlb	0	; () banked
  4319  0012DC  51D2               	movf	cuadrada@z& (0+255),w,b
  4320  0012DE  ECF8  F016         	call	_Delay10TCYx
  4321                           
  4322                           ;LAB4.c: 189: Delay10TCYx(z);
  4323  0012E2  0100               	movlb	0	; () banked
  4324  0012E4  51D2               	movf	cuadrada@z& (0+255),w,b
  4325  0012E6  ECF8  F016         	call	_Delay10TCYx
  4326                           
  4327                           ;LAB4.c: 190: Delay10TCYx(z);
  4328  0012EA  0100               	movlb	0	; () banked
  4329  0012EC  51D2               	movf	cuadrada@z& (0+255),w,b
  4330  0012EE  ECF8  F016         	call	_Delay10TCYx
  4331                           
  4332                           ;LAB4.c: 191: Delay10TCYx(z);
  4333  0012F2  0100               	movlb	0	; () banked
  4334  0012F4  51D2               	movf	cuadrada@z& (0+255),w,b
  4335  0012F6  ECF8  F016         	call	_Delay10TCYx
  4336                           
  4337                           ;LAB4.c: 192: LATA=255;
  4338  0012FA  6889               	setf	3977,c	;volatile
  4339                           
  4340                           ;LAB4.c: 193: LATC=255;
  4341  0012FC  688B               	setf	3979,c	;volatile
  4342                           
  4343                           ;LAB4.c: 194: Delay10TCYx(z);
  4344  0012FE  0100               	movlb	0	; () banked
  4345  001300  51D2               	movf	cuadrada@z& (0+255),w,b
  4346  001302  ECF8  F016         	call	_Delay10TCYx
  4347                           
  4348                           ;LAB4.c: 195: Delay10TCYx(z);
  4349  001306  0100               	movlb	0	; () banked
  4350  001308  51D2               	movf	cuadrada@z& (0+255),w,b
  4351  00130A  ECF8  F016         	call	_Delay10TCYx
  4352                           
  4353                           ;LAB4.c: 196: Delay10TCYx(z);
  4354  00130E  0100               	movlb	0	; () banked
  4355  001310  51D2               	movf	cuadrada@z& (0+255),w,b
  4356  001312  ECF8  F016         	call	_Delay10TCYx
  4357                           
  4358                           ;LAB4.c: 197: Delay10TCYx(z);
  4359  001316  0100               	movlb	0	; () banked
  4360  001318  51D2               	movf	cuadrada@z& (0+255),w,b
  4361  00131A  ECF8  F016         	call	_Delay10TCYx
  4362                           
  4363                           ;LAB4.c: 198: Delay10TCYx(z);
  4364  00131E  0100               	movlb	0	; () banked
  4365  001320  51D2               	movf	cuadrada@z& (0+255),w,b
  4366  001322  ECF8  F016         	call	_Delay10TCYx
  4367                           
  4368                           ;LAB4.c: 199: Delay10TCYx(z);
  4369  001326  0100               	movlb	0	; () banked
  4370  001328  51D2               	movf	cuadrada@z& (0+255),w,b
  4371  00132A  ECF8  F016         	call	_Delay10TCYx
  4372                           
  4373                           ;LAB4.c: 200: Delay10TCYx(z);
  4374  00132E  0100               	movlb	0	; () banked
  4375  001330  51D2               	movf	cuadrada@z& (0+255),w,b
  4376  001332  ECF8  F016         	call	_Delay10TCYx
  4377                           
  4378                           ;LAB4.c: 201: Delay10TCYx(z);
  4379  001336  0100               	movlb	0	; () banked
  4380  001338  51D2               	movf	cuadrada@z& (0+255),w,b
  4381  00133A  ECF8  F016         	call	_Delay10TCYx
  4382  00133E                     l5011:
  4383  00133E  0E0B               	movlw	11
  4384  001340  184F               	xorwf	_tecla,w,c
  4385  001342  1050               	iorwf	_tecla+1,w,c
  4386  001344  B4D8               	btfsc	status,2,c
  4387  001346  D005               	goto	l5015
  4388  001348  0E0C               	movlw	12
  4389  00134A  184F               	xorwf	_tecla,w,c
  4390  00134C  1050               	iorwf	_tecla+1,w,c
  4391  00134E  A4D8               	btfss	status,2,c
  4392  001350  D7B0               	goto	l4973
  4393  001352                     l5015:
  4394                           
  4395                           ;LAB4.c: 202: }
  4396                           ;LAB4.c: 203: }
  4397                           ;LAB4.c: 204: if (frec <50 && frec >=6){
  4398  001352  0100               	movlb	0	; () banked
  4399  001354  BFCB               	btfsc	(cuadrada@frec+1)& (0+255),7,b
  4400  001356  D008               	goto	l5017
  4401  001358  0100               	movlb	0	; () banked
  4402  00135A  51CB               	movf	(cuadrada@frec+1)& (0+255),w,b
  4403  00135C  E104               	bnz	u5261
  4404  00135E  0E32               	movlw	50
  4405  001360  0100               	movlb	0	; () banked
  4406  001362  5DCA               	subwf	cuadrada@frec& (0+255),w,b
  4407  001364  B0D8               	btfsc	status,0,c
  4408  001366                     u5261:
  4409  001366  D09E               	goto	l5069
  4410  001368                     l5017:
  4411                           
  4412                           ; BSR set to: 0
  4413  001368  0100               	movlb	0	; () banked
  4414  00136A  BFCB               	btfsc	(cuadrada@frec+1)& (0+255),7,b
  4415  00136C  D09B               	goto	l5069
  4416  00136E  0100               	movlb	0	; () banked
  4417  001370  51CB               	movf	(cuadrada@frec+1)& (0+255),w,b
  4418  001372  E105               	bnz	u5270
  4419  001374  0E06               	movlw	6
  4420  001376  0100               	movlb	0	; () banked
  4421  001378  5DCA               	subwf	cuadrada@frec& (0+255),w,b
  4422  00137A  A0D8               	btfss	status,0,c
  4423  00137C  D093               	goto	l5069
  4424  00137E                     u5270:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;LAB4.c: 205: int h=0;
  4428  00137E  0E00               	movlw	0
  4429  001380  0100               	movlb	0	; () banked
  4430  001382  6FD5               	movwf	(cuadrada@h+1)& (0+255),b
  4431  001384  0E00               	movlw	0
  4432  001386  6FD4               	movwf	cuadrada@h& (0+255),b
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;LAB4.c: 206: h=1076.7/pow(frec,0.966);
  4436  001388  C0CA  F017         	movff	cuadrada@frec,___awtoft@c
  4437  00138C  C0CB  F018         	movff	cuadrada@frec+1,___awtoft@c+1
  4438  001390  EC68  F016         	call	___awtoft	;wreg free
  4439  001394  C017  F0CC         	movff	?___awtoft,_cuadrada$1046
  4440  001398  C018  F0CD         	movff	?___awtoft+1,_cuadrada$1046+1
  4441  00139C  C019  F0CE         	movff	?___awtoft+2,_cuadrada$1046+2
  4442                           
  4443                           ;LAB4.c: 206: h=1076.7/pow(frec,0.966);
  4444  0013A0  0E4C               	movlw	76
  4445  0013A2  0100               	movlb	0	; () banked
  4446  0013A4  6FBC               	movwf	pow@y& (0+255),b
  4447  0013A6  0E77               	movlw	119
  4448  0013A8  0100               	movlb	0	; () banked
  4449  0013AA  6FBD               	movwf	(pow@y+1)& (0+255),b
  4450  0013AC  0E3F               	movlw	63
  4451  0013AE  0100               	movlb	0	; () banked
  4452  0013B0  6FBE               	movwf	(pow@y+2)& (0+255),b
  4453  0013B2  C0CC  F0B9         	movff	_cuadrada$1046,pow@x
  4454  0013B6  C0CD  F0BA         	movff	_cuadrada$1046+1,pow@x+1
  4455  0013BA  C0CE  F0BB         	movff	_cuadrada$1046+2,pow@x+2
  4456  0013BE  EC43  F00F         	call	_pow	;wreg free
  4457  0013C2  C0B9  F0CF         	movff	?_pow,_cuadrada$1047
  4458  0013C6  C0BA  F0D0         	movff	?_pow+1,_cuadrada$1047+1
  4459  0013CA  C0BB  F0D1         	movff	?_pow+2,_cuadrada$1047+2
  4460                           
  4461                           ;LAB4.c: 206: h=1076.7/pow(frec,0.966);
  4462  0013CE  C0CF  F01E         	movff	_cuadrada$1047,___ftdiv@f2
  4463  0013D2  C0D0  F01F         	movff	_cuadrada$1047+1,___ftdiv@f2+1
  4464  0013D6  C0D1  F020         	movff	_cuadrada$1047+2,___ftdiv@f2+2
  4465  0013DA  0E96               	movlw	150
  4466  0013DC  6E1B               	movwf	___ftdiv@f1,c
  4467  0013DE  0E86               	movlw	134
  4468  0013E0  6E1C               	movwf	___ftdiv@f1+1,c
  4469  0013E2  0E44               	movlw	68
  4470  0013E4  6E1D               	movwf	___ftdiv@f1+2,c
  4471  0013E6  EC50  F013         	call	___ftdiv	;wreg free
  4472  0013EA  C01B  F02A         	movff	?___ftdiv,___fttol@f1
  4473  0013EE  C01C  F02B         	movff	?___ftdiv+1,___fttol@f1+1
  4474  0013F2  C01D  F02C         	movff	?___ftdiv+2,___fttol@f1+2
  4475  0013F6  ECE3  F011         	call	___fttol	;wreg free
  4476  0013FA  C02A  F0D4         	movff	?___fttol,cuadrada@h
  4477  0013FE  C02B  F0D5         	movff	?___fttol+1,cuadrada@h+1
  4478                           
  4479                           ;LAB4.c: 207: while (tecla!=11 && tecla!=12){
  4480  001402  D046               	goto	l5065
  4481  001404                     l5027:
  4482                           
  4483                           ;LAB4.c: 208: LATA=0;
  4484  001404  0E00               	movlw	0
  4485  001406  6E89               	movwf	3977,c	;volatile
  4486                           
  4487                           ;LAB4.c: 209: LATC=0;
  4488  001408  0E00               	movlw	0
  4489  00140A  6E8B               	movwf	3979,c	;volatile
  4490                           
  4491                           ;LAB4.c: 210: Delay100TCYx(h);
  4492  00140C  0100               	movlb	0	; () banked
  4493  00140E  51D4               	movf	cuadrada@h& (0+255),w,b
  4494  001410  EC00  F017         	call	_Delay100TCYx
  4495                           
  4496                           ;LAB4.c: 211: Delay100TCYx(h);
  4497  001414  0100               	movlb	0	; () banked
  4498  001416  51D4               	movf	cuadrada@h& (0+255),w,b
  4499  001418  EC00  F017         	call	_Delay100TCYx
  4500                           
  4501                           ;LAB4.c: 212: Delay100TCYx(h);
  4502  00141C  0100               	movlb	0	; () banked
  4503  00141E  51D4               	movf	cuadrada@h& (0+255),w,b
  4504  001420  EC00  F017         	call	_Delay100TCYx
  4505                           
  4506                           ;LAB4.c: 213: Delay100TCYx(h);
  4507  001424  0100               	movlb	0	; () banked
  4508  001426  51D4               	movf	cuadrada@h& (0+255),w,b
  4509  001428  EC00  F017         	call	_Delay100TCYx
  4510                           
  4511                           ;LAB4.c: 214: Delay100TCYx(h);
  4512  00142C  0100               	movlb	0	; () banked
  4513  00142E  51D4               	movf	cuadrada@h& (0+255),w,b
  4514  001430  EC00  F017         	call	_Delay100TCYx
  4515                           
  4516                           ;LAB4.c: 215: Delay100TCYx(h);
  4517  001434  0100               	movlb	0	; () banked
  4518  001436  51D4               	movf	cuadrada@h& (0+255),w,b
  4519  001438  EC00  F017         	call	_Delay100TCYx
  4520                           
  4521                           ;LAB4.c: 216: Delay100TCYx(h);
  4522  00143C  0100               	movlb	0	; () banked
  4523  00143E  51D4               	movf	cuadrada@h& (0+255),w,b
  4524  001440  EC00  F017         	call	_Delay100TCYx
  4525                           
  4526                           ;LAB4.c: 217: Delay100TCYx(h);
  4527  001444  0100               	movlb	0	; () banked
  4528  001446  51D4               	movf	cuadrada@h& (0+255),w,b
  4529  001448  EC00  F017         	call	_Delay100TCYx
  4530                           
  4531                           ;LAB4.c: 218: LATA=255;
  4532  00144C  6889               	setf	3977,c	;volatile
  4533                           
  4534                           ;LAB4.c: 219: LATC=255;
  4535  00144E  688B               	setf	3979,c	;volatile
  4536                           
  4537                           ;LAB4.c: 220: Delay100TCYx(h);
  4538  001450  0100               	movlb	0	; () banked
  4539  001452  51D4               	movf	cuadrada@h& (0+255),w,b
  4540  001454  EC00  F017         	call	_Delay100TCYx
  4541                           
  4542                           ;LAB4.c: 221: Delay100TCYx(h);
  4543  001458  0100               	movlb	0	; () banked
  4544  00145A  51D4               	movf	cuadrada@h& (0+255),w,b
  4545  00145C  EC00  F017         	call	_Delay100TCYx
  4546                           
  4547                           ;LAB4.c: 222: Delay100TCYx(h);
  4548  001460  0100               	movlb	0	; () banked
  4549  001462  51D4               	movf	cuadrada@h& (0+255),w,b
  4550  001464  EC00  F017         	call	_Delay100TCYx
  4551                           
  4552                           ;LAB4.c: 223: Delay100TCYx(h);
  4553  001468  0100               	movlb	0	; () banked
  4554  00146A  51D4               	movf	cuadrada@h& (0+255),w,b
  4555  00146C  EC00  F017         	call	_Delay100TCYx
  4556                           
  4557                           ;LAB4.c: 224: Delay100TCYx(h);
  4558  001470  0100               	movlb	0	; () banked
  4559  001472  51D4               	movf	cuadrada@h& (0+255),w,b
  4560  001474  EC00  F017         	call	_Delay100TCYx
  4561                           
  4562                           ;LAB4.c: 225: Delay100TCYx(h);
  4563  001478  0100               	movlb	0	; () banked
  4564  00147A  51D4               	movf	cuadrada@h& (0+255),w,b
  4565  00147C  EC00  F017         	call	_Delay100TCYx
  4566                           
  4567                           ;LAB4.c: 226: Delay100TCYx(h);
  4568  001480  0100               	movlb	0	; () banked
  4569  001482  51D4               	movf	cuadrada@h& (0+255),w,b
  4570  001484  EC00  F017         	call	_Delay100TCYx
  4571                           
  4572                           ;LAB4.c: 227: Delay100TCYx(h);
  4573  001488  0100               	movlb	0	; () banked
  4574  00148A  51D4               	movf	cuadrada@h& (0+255),w,b
  4575  00148C  EC00  F017         	call	_Delay100TCYx
  4576  001490                     l5065:
  4577  001490  0E0B               	movlw	11
  4578  001492  184F               	xorwf	_tecla,w,c
  4579  001494  1050               	iorwf	_tecla+1,w,c
  4580  001496  B4D8               	btfsc	status,2,c
  4581  001498  D005               	goto	l5069
  4582  00149A  0E0C               	movlw	12
  4583  00149C  184F               	xorwf	_tecla,w,c
  4584  00149E  1050               	iorwf	_tecla+1,w,c
  4585  0014A0  A4D8               	btfss	status,2,c
  4586  0014A2  D7B0               	goto	l5027
  4587  0014A4                     l5069:
  4588                           
  4589                           ;LAB4.c: 228: }
  4590                           ;LAB4.c: 229: }
  4591                           ;LAB4.c: 231: if (frec <6){
  4592  0014A4  0100               	movlb	0	; () banked
  4593  0014A6  BFCB               	btfsc	(cuadrada@frec+1)& (0+255),7,b
  4594  0014A8  D008               	goto	l5071
  4595  0014AA  0100               	movlb	0	; () banked
  4596  0014AC  51CB               	movf	(cuadrada@frec+1)& (0+255),w,b
  4597  0014AE  E104               	bnz	u5301
  4598  0014B0  0E06               	movlw	6
  4599  0014B2  0100               	movlb	0	; () banked
  4600  0014B4  5DCA               	subwf	cuadrada@frec& (0+255),w,b
  4601  0014B6  B0D8               	btfsc	status,0,c
  4602  0014B8                     u5301:
  4603  0014B8  0012               	return	
  4604  0014BA                     l5071:
  4605                           
  4606                           ; BSR set to: 0
  4607                           ;LAB4.c: 232: int x=0;
  4608  0014BA  0E00               	movlw	0
  4609  0014BC  0100               	movlb	0	; () banked
  4610  0014BE  6FD7               	movwf	(cuadrada@x+1)& (0+255),b
  4611  0014C0  0E00               	movlw	0
  4612  0014C2  6FD6               	movwf	cuadrada@x& (0+255),b
  4613                           
  4614                           ; BSR set to: 0
  4615                           ;LAB4.c: 233: x=124.81/frec;
  4616  0014C4  C0CA  F017         	movff	cuadrada@frec,___awtoft@c
  4617  0014C8  C0CB  F018         	movff	cuadrada@frec+1,___awtoft@c+1
  4618  0014CC  EC68  F016         	call	___awtoft	;wreg free
  4619  0014D0  C017  F01E         	movff	?___awtoft,___ftdiv@f2
  4620  0014D4  C018  F01F         	movff	?___awtoft+1,___ftdiv@f2+1
  4621  0014D8  C019  F020         	movff	?___awtoft+2,___ftdiv@f2+2
  4622  0014DC  0E9F               	movlw	159
  4623  0014DE  6E1B               	movwf	___ftdiv@f1,c
  4624  0014E0  0EF9               	movlw	249
  4625  0014E2  6E1C               	movwf	___ftdiv@f1+1,c
  4626  0014E4  0E42               	movlw	66
  4627  0014E6  6E1D               	movwf	___ftdiv@f1+2,c
  4628  0014E8  EC50  F013         	call	___ftdiv	;wreg free
  4629  0014EC  C01B  F02A         	movff	?___ftdiv,___fttol@f1
  4630  0014F0  C01C  F02B         	movff	?___ftdiv+1,___fttol@f1+1
  4631  0014F4  C01D  F02C         	movff	?___ftdiv+2,___fttol@f1+2
  4632  0014F8  ECE3  F011         	call	___fttol	;wreg free
  4633  0014FC  C02A  F0D6         	movff	?___fttol,cuadrada@x
  4634  001500  C02B  F0D7         	movff	?___fttol+1,cuadrada@x+1
  4635                           
  4636                           ;LAB4.c: 234: while (tecla!=11 && tecla!=12){
  4637  001504  D046               	goto	l5113
  4638  001506                     l5075:
  4639                           
  4640                           ;LAB4.c: 235: LATA=0;
  4641  001506  0E00               	movlw	0
  4642  001508  6E89               	movwf	3977,c	;volatile
  4643                           
  4644                           ;LAB4.c: 236: LATC=0;
  4645  00150A  0E00               	movlw	0
  4646  00150C  6E8B               	movwf	3979,c	;volatile
  4647                           
  4648                           ;LAB4.c: 237: Delay1KTCYx(x);
  4649  00150E  0100               	movlb	0	; () banked
  4650  001510  51D6               	movf	cuadrada@x& (0+255),w,b
  4651  001512  ECF0  F016         	call	_Delay1KTCYx
  4652                           
  4653                           ;LAB4.c: 238: Delay1KTCYx(x);
  4654  001516  0100               	movlb	0	; () banked
  4655  001518  51D6               	movf	cuadrada@x& (0+255),w,b
  4656  00151A  ECF0  F016         	call	_Delay1KTCYx
  4657                           
  4658                           ;LAB4.c: 239: Delay1KTCYx(x);
  4659  00151E  0100               	movlb	0	; () banked
  4660  001520  51D6               	movf	cuadrada@x& (0+255),w,b
  4661  001522  ECF0  F016         	call	_Delay1KTCYx
  4662                           
  4663                           ;LAB4.c: 240: Delay1KTCYx(x);
  4664  001526  0100               	movlb	0	; () banked
  4665  001528  51D6               	movf	cuadrada@x& (0+255),w,b
  4666  00152A  ECF0  F016         	call	_Delay1KTCYx
  4667                           
  4668                           ;LAB4.c: 241: Delay1KTCYx(x);
  4669  00152E  0100               	movlb	0	; () banked
  4670  001530  51D6               	movf	cuadrada@x& (0+255),w,b
  4671  001532  ECF0  F016         	call	_Delay1KTCYx
  4672                           
  4673                           ;LAB4.c: 242: Delay1KTCYx(x);
  4674  001536  0100               	movlb	0	; () banked
  4675  001538  51D6               	movf	cuadrada@x& (0+255),w,b
  4676  00153A  ECF0  F016         	call	_Delay1KTCYx
  4677                           
  4678                           ;LAB4.c: 243: Delay1KTCYx(x);
  4679  00153E  0100               	movlb	0	; () banked
  4680  001540  51D6               	movf	cuadrada@x& (0+255),w,b
  4681  001542  ECF0  F016         	call	_Delay1KTCYx
  4682                           
  4683                           ;LAB4.c: 244: Delay1KTCYx(x);
  4684  001546  0100               	movlb	0	; () banked
  4685  001548  51D6               	movf	cuadrada@x& (0+255),w,b
  4686  00154A  ECF0  F016         	call	_Delay1KTCYx
  4687                           
  4688                           ;LAB4.c: 245: LATA=255;
  4689  00154E  6889               	setf	3977,c	;volatile
  4690                           
  4691                           ;LAB4.c: 246: LATC=255;
  4692  001550  688B               	setf	3979,c	;volatile
  4693                           
  4694                           ;LAB4.c: 247: Delay1KTCYx(x);
  4695  001552  0100               	movlb	0	; () banked
  4696  001554  51D6               	movf	cuadrada@x& (0+255),w,b
  4697  001556  ECF0  F016         	call	_Delay1KTCYx
  4698                           
  4699                           ;LAB4.c: 248: Delay1KTCYx(x);
  4700  00155A  0100               	movlb	0	; () banked
  4701  00155C  51D6               	movf	cuadrada@x& (0+255),w,b
  4702  00155E  ECF0  F016         	call	_Delay1KTCYx
  4703                           
  4704                           ;LAB4.c: 249: Delay1KTCYx(x);
  4705  001562  0100               	movlb	0	; () banked
  4706  001564  51D6               	movf	cuadrada@x& (0+255),w,b
  4707  001566  ECF0  F016         	call	_Delay1KTCYx
  4708                           
  4709                           ;LAB4.c: 250: Delay1KTCYx(x);
  4710  00156A  0100               	movlb	0	; () banked
  4711  00156C  51D6               	movf	cuadrada@x& (0+255),w,b
  4712  00156E  ECF0  F016         	call	_Delay1KTCYx
  4713                           
  4714                           ;LAB4.c: 251: Delay1KTCYx(x);
  4715  001572  0100               	movlb	0	; () banked
  4716  001574  51D6               	movf	cuadrada@x& (0+255),w,b
  4717  001576  ECF0  F016         	call	_Delay1KTCYx
  4718                           
  4719                           ;LAB4.c: 252: Delay1KTCYx(x);
  4720  00157A  0100               	movlb	0	; () banked
  4721  00157C  51D6               	movf	cuadrada@x& (0+255),w,b
  4722  00157E  ECF0  F016         	call	_Delay1KTCYx
  4723                           
  4724                           ;LAB4.c: 253: Delay1KTCYx(x);
  4725  001582  0100               	movlb	0	; () banked
  4726  001584  51D6               	movf	cuadrada@x& (0+255),w,b
  4727  001586  ECF0  F016         	call	_Delay1KTCYx
  4728                           
  4729                           ;LAB4.c: 254: Delay1KTCYx(x);
  4730  00158A  0100               	movlb	0	; () banked
  4731  00158C  51D6               	movf	cuadrada@x& (0+255),w,b
  4732  00158E  ECF0  F016         	call	_Delay1KTCYx
  4733  001592                     l5113:
  4734  001592  0E0B               	movlw	11
  4735  001594  184F               	xorwf	_tecla,w,c
  4736  001596  1050               	iorwf	_tecla+1,w,c
  4737  001598  B4D8               	btfsc	status,2,c
  4738  00159A  0012               	return	
  4739  00159C  0E0C               	movlw	12
  4740  00159E  184F               	xorwf	_tecla,w,c
  4741  0015A0  1050               	iorwf	_tecla+1,w,c
  4742  0015A2  B4D8               	btfsc	status,2,c
  4743  0015A4  0012               	return	
  4744  0015A6  D7AF               	goto	l5075
  4745  0015A8                     __end_of_cuadrada:
  4746                           	opt stack 0
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           intcon	equ	0xFF2
  4752                           intcon2	equ	0xFF1
  4753                           postinc0	equ	0xFEE
  4754                           wreg	equ	0xFE8
  4755                           postdec1	equ	0xFE5
  4756                           fsr1l	equ	0xFE1
  4757                           indf2	equ	0xFDF
  4758                           fsr2h	equ	0xFDA
  4759                           fsr2l	equ	0xFD9
  4760                           status	equ	0xFD8
  4761                           
  4762 ;; *************** function _pow *****************
  4763 ;; Defined at:
  4764 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\pow.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  x               3   17[BANK0 ] int 
  4767 ;;  y               3   20[BANK0 ] int 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  yi              4   30[BANK0 ] unsigned long 
  4770 ;;  sign            1   29[BANK0 ] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  3   17[BANK0 ] unsigned char 
  4773 ;; Registers used:
  4774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4780 ;;      Params:         0       6       0       0       0       0       0       0       0
  4781 ;;      Locals:         0      11       0       0       0       0       0       0       0
  4782 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4783 ;;      Totals:         0      17       0       0       0       0       0       0       0
  4784 ;;Total ram usage:       17 bytes
  4785 ;; Hardware stack levels used:    1
  4786 ;; Hardware stack levels required when called:    5
  4787 ;; This function calls:
  4788 ;;		___ftge
  4789 ;;		___ftmul
  4790 ;;		___ftneg
  4791 ;;		___fttol
  4792 ;;		___lltoft
  4793 ;;		_exp
  4794 ;;		_log
  4795 ;; This function is called by:
  4796 ;;		_rampa
  4797 ;;		_cuadrada
  4798 ;;		_sen
  4799 ;; This function uses a non-reentrant model
  4800 ;;
  4801                           
  4802                           	psect	text14
  4803  001E86                     __ptext14:
  4804                           	opt stack 0
  4805  001E86                     _pow:
  4806                           	opt stack 24
  4807                           
  4808                           ;incstack = 0
  4809  001E86  0E00               	movlw	0
  4810  001E88  0100               	movlb	0	; () banked
  4811  001E8A  6FC5               	movwf	pow@sign& (0+255),b
  4812                           
  4813                           ; BSR set to: 0
  4814  001E8C  0100               	movlb	0	; () banked
  4815  001E8E  51B9               	movf	pow@x& (0+255),w,b
  4816  001E90  0100               	movlb	0	; () banked
  4817  001E92  11BA               	iorwf	(pow@x+1)& (0+255),w,b
  4818  001E94  0100               	movlb	0	; () banked
  4819  001E96  11BB               	iorwf	(pow@x+2)& (0+255),w,b
  4820  001E98  A4D8               	btfss	status,2,c
  4821  001E9A  D01E               	goto	l4729
  4822                           
  4823                           ; BSR set to: 0
  4824  001E9C  0E00               	movlw	0
  4825  001E9E  6E0F               	movwf	___ftge@ff1,c
  4826  001EA0  0E00               	movlw	0
  4827  001EA2  6E10               	movwf	___ftge@ff1+1,c
  4828  001EA4  0E00               	movlw	0
  4829  001EA6  6E11               	movwf	___ftge@ff1+2,c
  4830  001EA8  C0BC  F012         	movff	pow@y,___ftge@ff2
  4831  001EAC  C0BD  F013         	movff	pow@y+1,___ftge@ff2+1
  4832  001EB0  C0BE  F014         	movff	pow@y+2,___ftge@ff2+2
  4833  001EB4  ECCB  F014         	call	___ftge	;wreg free
  4834  001EB8  A0D8               	btfss	status,0,c
  4835  001EBA  D004               	goto	l847
  4836  001EBC  0E00               	movlw	0
  4837  001EBE  6E48               	movwf	_errno+1,c
  4838  001EC0  0E21               	movlw	33
  4839  001EC2  6E47               	movwf	_errno,c
  4840  001EC4                     l847:
  4841  001EC4  0E00               	movlw	0
  4842  001EC6  0100               	movlb	0	; () banked
  4843  001EC8  6FB9               	movwf	?_pow& (0+255),b
  4844  001ECA  0E00               	movlw	0
  4845  001ECC  0100               	movlb	0	; () banked
  4846  001ECE  6FBA               	movwf	(?_pow+1)& (0+255),b
  4847  001ED0  0E00               	movlw	0
  4848  001ED2  0100               	movlb	0	; () banked
  4849  001ED4  6FBB               	movwf	(?_pow+2)& (0+255),b
  4850                           
  4851                           ; BSR set to: 0
  4852  001ED6  0012               	return	
  4853  001ED8                     l4729:
  4854                           
  4855                           ; BSR set to: 0
  4856  001ED8  0100               	movlb	0	; () banked
  4857  001EDA  51BC               	movf	pow@y& (0+255),w,b
  4858  001EDC  0100               	movlb	0	; () banked
  4859  001EDE  11BD               	iorwf	(pow@y+1)& (0+255),w,b
  4860  001EE0  0100               	movlb	0	; () banked
  4861  001EE2  11BE               	iorwf	(pow@y+2)& (0+255),w,b
  4862  001EE4  A4D8               	btfss	status,2,c
  4863  001EE6  D00A               	goto	l4735
  4864                           
  4865                           ; BSR set to: 0
  4866  001EE8  0E00               	movlw	0
  4867  001EEA  0100               	movlb	0	; () banked
  4868  001EEC  6FB9               	movwf	?_pow& (0+255),b
  4869  001EEE  0E80               	movlw	128
  4870  001EF0  0100               	movlb	0	; () banked
  4871  001EF2  6FBA               	movwf	(?_pow+1)& (0+255),b
  4872  001EF4  0E3F               	movlw	63
  4873  001EF6  0100               	movlb	0	; () banked
  4874  001EF8  6FBB               	movwf	(?_pow+2)& (0+255),b
  4875                           
  4876                           ; BSR set to: 0
  4877  001EFA  0012               	return	
  4878  001EFC                     l4735:
  4879                           
  4880                           ; BSR set to: 0
  4881  001EFC  0100               	movlb	0	; () banked
  4882  001EFE  AFBB               	btfss	(pow@x+2)& (0+255),7,b
  4883  001F00  D048               	goto	l4747
  4884                           
  4885                           ; BSR set to: 0
  4886  001F02  C0BC  F02A         	movff	pow@y,___fttol@f1
  4887  001F06  C0BD  F02B         	movff	pow@y+1,___fttol@f1+1
  4888  001F0A  C0BE  F02C         	movff	pow@y+2,___fttol@f1+2
  4889  001F0E  ECE3  F011         	call	___fttol	;wreg free
  4890  001F12  C02A  F0C6         	movff	?___fttol,pow@yi
  4891  001F16  C02B  F0C7         	movff	?___fttol+1,pow@yi+1
  4892  001F1A  C02C  F0C8         	movff	?___fttol+2,pow@yi+2
  4893  001F1E  C02D  F0C9         	movff	?___fttol+3,pow@yi+3
  4894  001F22  C0C6  F017         	movff	pow@yi,___lltoft@c
  4895  001F26  C0C7  F018         	movff	pow@yi+1,___lltoft@c+1
  4896  001F2A  C0C8  F019         	movff	pow@yi+2,___lltoft@c+2
  4897  001F2E  C0C9  F01A         	movff	pow@yi+3,___lltoft@c+3
  4898  001F32  EC91  F015         	call	___lltoft	;wreg free
  4899  001F36  0100               	movlb	0	; () banked
  4900  001F38  51BC               	movf	pow@y& (0+255),w,b
  4901  001F3A  1817               	xorwf	?___lltoft,w,c
  4902  001F3C  E109               	bnz	u4860
  4903  001F3E  0100               	movlb	0	; () banked
  4904  001F40  51BD               	movf	(pow@y+1)& (0+255),w,b
  4905  001F42  1818               	xorwf	?___lltoft+1,w,c
  4906  001F44  E105               	bnz	u4860
  4907  001F46  0100               	movlb	0	; () banked
  4908  001F48  51BE               	movf	(pow@y+2)& (0+255),w,b
  4909  001F4A  1819               	xorwf	?___lltoft+2,w,c
  4910  001F4C  B4D8               	btfsc	status,2,c
  4911  001F4E  D00E               	goto	l4743
  4912  001F50                     u4860:
  4913                           
  4914                           ; BSR set to: 0
  4915  001F50  0E00               	movlw	0
  4916  001F52  6E48               	movwf	_errno+1,c
  4917  001F54  0E21               	movlw	33
  4918  001F56  6E47               	movwf	_errno,c
  4919  001F58  0E00               	movlw	0
  4920  001F5A  0100               	movlb	0	; () banked
  4921  001F5C  6FB9               	movwf	?_pow& (0+255),b
  4922  001F5E  0E00               	movlw	0
  4923  001F60  0100               	movlb	0	; () banked
  4924  001F62  6FBA               	movwf	(?_pow+1)& (0+255),b
  4925  001F64  0E00               	movlw	0
  4926  001F66  0100               	movlb	0	; () banked
  4927  001F68  6FBB               	movwf	(?_pow+2)& (0+255),b
  4928                           
  4929                           ; BSR set to: 0
  4930  001F6A  0012               	return	
  4931  001F6C                     l4743:
  4932                           
  4933                           ; BSR set to: 0
  4934  001F6C  0100               	movlb	0	; () banked
  4935  001F6E  51C6               	movf	pow@yi& (0+255),w,b
  4936  001F70  0B01               	andlw	1
  4937  001F72  0100               	movlb	0	; () banked
  4938  001F74  6FC5               	movwf	pow@sign& (0+255),b
  4939                           
  4940                           ; BSR set to: 0
  4941  001F76  C0B9  F00F         	movff	pow@x,___ftneg@f1
  4942  001F7A  C0BA  F010         	movff	pow@x+1,___ftneg@f1+1
  4943  001F7E  C0BB  F011         	movff	pow@x+2,___ftneg@f1+2
  4944  001F82  ECBF  F016         	call	___ftneg	;wreg free
  4945  001F86  C00F  F0B9         	movff	?___ftneg,pow@x
  4946  001F8A  C010  F0BA         	movff	?___ftneg+1,pow@x+1
  4947  001F8E  C011  F0BB         	movff	?___ftneg+2,pow@x+2
  4948  001F92                     l4747:
  4949  001F92  C0B9  F0A8         	movff	pow@x,log@x
  4950  001F96  C0BA  F0A9         	movff	pow@x+1,log@x+1
  4951  001F9A  C0BB  F0AA         	movff	pow@x+2,log@x+2
  4952  001F9E  ECC1  F010         	call	_log	;wreg free
  4953  001FA2  C0A8  F0BF         	movff	?_log,_pow$1050
  4954  001FA6  C0A9  F0C0         	movff	?_log+1,_pow$1050+1
  4955  001FAA  C0AA  F0C1         	movff	?_log+2,_pow$1050+2
  4956  001FAE  C0BF  F01B         	movff	_pow$1050,___ftmul@f1
  4957  001FB2  C0C0  F01C         	movff	_pow$1050+1,___ftmul@f1+1
  4958  001FB6  C0C1  F01D         	movff	_pow$1050+2,___ftmul@f1+2
  4959  001FBA  C0BC  F01E         	movff	pow@y,___ftmul@f2
  4960  001FBE  C0BD  F01F         	movff	pow@y+1,___ftmul@f2+1
  4961  001FC2  C0BE  F020         	movff	pow@y+2,___ftmul@f2+2
  4962  001FC6  EC5D  F012         	call	___ftmul	;wreg free
  4963  001FCA  C01B  F0C2         	movff	?___ftmul,_pow$1051
  4964  001FCE  C01C  F0C3         	movff	?___ftmul+1,_pow$1051+1
  4965  001FD2  C01D  F0C4         	movff	?___ftmul+2,_pow$1051+2
  4966  001FD6  C0C2  F0B0         	movff	_pow$1051,exp@x
  4967  001FDA  C0C3  F0B1         	movff	_pow$1051+1,exp@x+1
  4968  001FDE  C0C4  F0B2         	movff	_pow$1051+2,exp@x+2
  4969  001FE2  EC62  F00C         	call	_exp	;wreg free
  4970  001FE6  C0B0  F0B9         	movff	?_exp,pow@x
  4971  001FEA  C0B1  F0BA         	movff	?_exp+1,pow@x+1
  4972  001FEE  C0B2  F0BB         	movff	?_exp+2,pow@x+2
  4973  001FF2  0100               	movlb	0	; () banked
  4974  001FF4  51C5               	movf	pow@sign& (0+255),w,b
  4975  001FF6  0100               	movlb	0	; () banked
  4976  001FF8  B4D8               	btfsc	status,2,c
  4977  001FFA  D00F               	goto	l852
  4978                           
  4979                           ; BSR set to: 0
  4980  001FFC  C0B9  F00F         	movff	pow@x,___ftneg@f1
  4981  002000  C0BA  F010         	movff	pow@x+1,___ftneg@f1+1
  4982  002004  C0BB  F011         	movff	pow@x+2,___ftneg@f1+2
  4983  002008  ECBF  F016         	call	___ftneg	;wreg free
  4984  00200C  C00F  F0B9         	movff	?___ftneg,?_pow
  4985  002010  C010  F0BA         	movff	?___ftneg+1,?_pow+1
  4986  002014  C011  F0BB         	movff	?___ftneg+2,?_pow+2
  4987  002018  0012               	return	
  4988  00201A                     l852:
  4989                           
  4990                           ; BSR set to: 0
  4991  00201A  C0B9  F0B9         	movff	pow@x,?_pow
  4992  00201E  C0BA  F0BA         	movff	pow@x+1,?_pow+1
  4993  002022  C0BB  F0BB         	movff	pow@x+2,?_pow+2
  4994  002026  0012               	return		;funcret
  4995  002028                     __end_of_pow:
  4996                           	opt stack 0
  4997                           tblptru	equ	0xFF8
  4998                           tblptrh	equ	0xFF7
  4999                           tblptrl	equ	0xFF6
  5000                           tablat	equ	0xFF5
  5001                           intcon	equ	0xFF2
  5002                           intcon2	equ	0xFF1
  5003                           postinc0	equ	0xFEE
  5004                           wreg	equ	0xFE8
  5005                           postdec1	equ	0xFE5
  5006                           fsr1l	equ	0xFE1
  5007                           indf2	equ	0xFDF
  5008                           fsr2h	equ	0xFDA
  5009                           fsr2l	equ	0xFD9
  5010                           status	equ	0xFD8
  5011                           
  5012 ;; *************** function _log *****************
  5013 ;; Defined at:
  5014 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\log.c"
  5015 ;; Parameters:    Size  Location     Type
  5016 ;;  x               3    0[BANK0 ] unsigned char 
  5017 ;; Auto vars:     Size  Location     Type
  5018 ;;  exponent        2    3[BANK0 ] int 
  5019 ;; Return value:  Size  Location     Type
  5020 ;;                  3    0[BANK0 ] int 
  5021 ;; Registers used:
  5022 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5023 ;; Tracked objects:
  5024 ;;		On entry : 0/0
  5025 ;;		On exit  : 0/0
  5026 ;;		Unchanged: 0/0
  5027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5028 ;;      Params:         0       3       0       0       0       0       0       0       0
  5029 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5031 ;;      Totals:         0       5       0       0       0       0       0       0       0
  5032 ;;Total ram usage:        5 bytes
  5033 ;; Hardware stack levels used:    1
  5034 ;; Hardware stack levels required when called:    4
  5035 ;; This function calls:
  5036 ;;		___awtoft
  5037 ;;		___ftadd
  5038 ;;		___ftmul
  5039 ;;		_eval_poly
  5040 ;;		_frexp
  5041 ;; This function is called by:
  5042 ;;		_pow
  5043 ;; This function uses a non-reentrant model
  5044 ;;
  5045                           
  5046                           	psect	text15
  5047  002182                     __ptext15:
  5048                           	opt stack 0
  5049  002182                     _log:
  5050                           	opt stack 24
  5051                           
  5052                           ;incstack = 0
  5053  002182  0100               	movlb	0	; () banked
  5054  002184  AFAA               	btfss	(log@x+2)& (0+255),7,b
  5055  002186  D00E               	goto	l4659
  5056                           
  5057                           ; BSR set to: 0
  5058  002188  0E00               	movlw	0
  5059  00218A  6E48               	movwf	_errno+1,c
  5060  00218C  0E21               	movlw	33
  5061  00218E  6E47               	movwf	_errno,c
  5062  002190  0E00               	movlw	0
  5063  002192  0100               	movlb	0	; () banked
  5064  002194  6FA8               	movwf	?_log& (0+255),b
  5065  002196  0E00               	movlw	0
  5066  002198  0100               	movlb	0	; () banked
  5067  00219A  6FA9               	movwf	(?_log+1)& (0+255),b
  5068  00219C  0E00               	movlw	0
  5069  00219E  0100               	movlb	0	; () banked
  5070  0021A0  6FAA               	movwf	(?_log+2)& (0+255),b
  5071                           
  5072                           ; BSR set to: 0
  5073  0021A2  0012               	return	
  5074  0021A4                     l4659:
  5075                           
  5076                           ; BSR set to: 0
  5077  0021A4  0100               	movlb	0	; () banked
  5078  0021A6  51A8               	movf	log@x& (0+255),w,b
  5079  0021A8  0100               	movlb	0	; () banked
  5080  0021AA  11A9               	iorwf	(log@x+1)& (0+255),w,b
  5081  0021AC  0100               	movlb	0	; () banked
  5082  0021AE  11AA               	iorwf	(log@x+2)& (0+255),w,b
  5083  0021B0  A4D8               	btfss	status,2,c
  5084  0021B2  D00E               	goto	l4665
  5085                           
  5086                           ; BSR set to: 0
  5087  0021B4  0E00               	movlw	0
  5088  0021B6  6E48               	movwf	_errno+1,c
  5089  0021B8  0E22               	movlw	34
  5090  0021BA  6E47               	movwf	_errno,c
  5091  0021BC  0E00               	movlw	0
  5092  0021BE  0100               	movlb	0	; () banked
  5093  0021C0  6FA8               	movwf	?_log& (0+255),b
  5094  0021C2  0E00               	movlw	0
  5095  0021C4  0100               	movlb	0	; () banked
  5096  0021C6  6FA9               	movwf	(?_log+1)& (0+255),b
  5097  0021C8  0E00               	movlw	0
  5098  0021CA  0100               	movlb	0	; () banked
  5099  0021CC  6FAA               	movwf	(?_log+2)& (0+255),b
  5100                           
  5101                           ; BSR set to: 0
  5102  0021CE  0012               	return	
  5103  0021D0                     l4665:
  5104                           
  5105                           ; BSR set to: 0
  5106  0021D0  0E00               	movlw	0
  5107  0021D2  6E1E               	movwf	___ftmul@f2,c
  5108  0021D4  0E00               	movlw	0
  5109  0021D6  6E1F               	movwf	___ftmul@f2+1,c
  5110  0021D8  0E40               	movlw	64
  5111  0021DA  6E20               	movwf	___ftmul@f2+2,c
  5112  0021DC  0EAB               	movlw	low log@exponent
  5113  0021DE  6E12               	movwf	frexp@eptr,c
  5114  0021E0  0E00               	movlw	high log@exponent
  5115  0021E2  6E13               	movwf	frexp@eptr+1,c
  5116  0021E4  C0A8  F00F         	movff	log@x,frexp@value
  5117  0021E8  C0A9  F010         	movff	log@x+1,frexp@value+1
  5118  0021EC  C0AA  F011         	movff	log@x+2,frexp@value+2
  5119  0021F0  EC83  F014         	call	_frexp	;wreg free
  5120  0021F4  C00F  F01B         	movff	?_frexp,___ftmul@f1
  5121  0021F8  C010  F01C         	movff	?_frexp+1,___ftmul@f1+1
  5122  0021FC  C011  F01D         	movff	?_frexp+2,___ftmul@f1+2
  5123  002200  EC5D  F012         	call	___ftmul	;wreg free
  5124  002204  C01B  F02A         	movff	?___ftmul,___ftadd@f1
  5125  002208  C01C  F02B         	movff	?___ftmul+1,___ftadd@f1+1
  5126  00220C  C01D  F02C         	movff	?___ftmul+2,___ftadd@f1+2
  5127  002210  0E00               	movlw	0
  5128  002212  6E2D               	movwf	___ftadd@f2,c
  5129  002214  0E80               	movlw	128
  5130  002216  6E2E               	movwf	___ftadd@f2+1,c
  5131  002218  0EBF               	movlw	191
  5132  00221A  6E2F               	movwf	___ftadd@f2+2,c
  5133  00221C  EC6D  F00E         	call	___ftadd	;wreg free
  5134  002220  C02A  F0A8         	movff	?___ftadd,log@x
  5135  002224  C02B  F0A9         	movff	?___ftadd+1,log@x+1
  5136  002228  C02C  F0AA         	movff	?___ftadd+2,log@x+2
  5137  00222C  0100               	movlb	0	; () banked
  5138  00222E  07AB               	decf	log@exponent& (0+255),f,b
  5139  002230  A0D8               	btfss	status,0,c
  5140  002232  07AC               	decf	(log@exponent+1)& (0+255),f,b
  5141                           
  5142                           ; BSR set to: 0
  5143  002234  C0A8  F036         	movff	log@x,eval_poly@x
  5144  002238  C0A9  F037         	movff	log@x+1,eval_poly@x+1
  5145  00223C  C0AA  F038         	movff	log@x+2,eval_poly@x+2
  5146  002240  0E1F               	movlw	low log@coeff
  5147  002242  6E39               	movwf	eval_poly@d,c
  5148  002244  0E08               	movlw	high log@coeff
  5149  002246  6E3A               	movwf	eval_poly@d+1,c
  5150  002248  0E00               	movlw	0
  5151  00224A  6E3C               	movwf	eval_poly@n+1,c
  5152  00224C  0E08               	movlw	8
  5153  00224E  6E3B               	movwf	eval_poly@n,c
  5154  002250  ECC3  F013         	call	_eval_poly	;wreg free
  5155  002254  C036  F0A8         	movff	?_eval_poly,log@x
  5156  002258  C037  F0A9         	movff	?_eval_poly+1,log@x+1
  5157  00225C  C038  F0AA         	movff	?_eval_poly+2,log@x+2
  5158  002260  0E72               	movlw	114
  5159  002262  6E1E               	movwf	___ftmul@f2,c
  5160  002264  0E31               	movlw	49
  5161  002266  6E1F               	movwf	___ftmul@f2+1,c
  5162  002268  0E3F               	movlw	63
  5163  00226A  6E20               	movwf	___ftmul@f2+2,c
  5164  00226C  C0AB  F017         	movff	log@exponent,___awtoft@c
  5165  002270  C0AC  F018         	movff	log@exponent+1,___awtoft@c+1
  5166  002274  EC68  F016         	call	___awtoft	;wreg free
  5167  002278  C017  F01B         	movff	?___awtoft,___ftmul@f1
  5168  00227C  C018  F01C         	movff	?___awtoft+1,___ftmul@f1+1
  5169  002280  C019  F01D         	movff	?___awtoft+2,___ftmul@f1+2
  5170  002284  EC5D  F012         	call	___ftmul	;wreg free
  5171  002288  C01B  F02A         	movff	?___ftmul,___ftadd@f1
  5172  00228C  C01C  F02B         	movff	?___ftmul+1,___ftadd@f1+1
  5173  002290  C01D  F02C         	movff	?___ftmul+2,___ftadd@f1+2
  5174  002294  C0A8  F02D         	movff	log@x,___ftadd@f2
  5175  002298  C0A9  F02E         	movff	log@x+1,___ftadd@f2+1
  5176  00229C  C0AA  F02F         	movff	log@x+2,___ftadd@f2+2
  5177  0022A0  EC6D  F00E         	call	___ftadd	;wreg free
  5178  0022A4  C02A  F0A8         	movff	?___ftadd,?_log
  5179  0022A8  C02B  F0A9         	movff	?___ftadd+1,?_log+1
  5180  0022AC  C02C  F0AA         	movff	?___ftadd+2,?_log+2
  5181  0022B0  0012               	return	
  5182  0022B2                     __end_of_log:
  5183                           	opt stack 0
  5184                           tblptru	equ	0xFF8
  5185                           tblptrh	equ	0xFF7
  5186                           tblptrl	equ	0xFF6
  5187                           tablat	equ	0xFF5
  5188                           intcon	equ	0xFF2
  5189                           intcon2	equ	0xFF1
  5190                           postinc0	equ	0xFEE
  5191                           wreg	equ	0xFE8
  5192                           postdec1	equ	0xFE5
  5193                           fsr1l	equ	0xFE1
  5194                           indf2	equ	0xFDF
  5195                           fsr2h	equ	0xFDA
  5196                           fsr2l	equ	0xFD9
  5197                           status	equ	0xFD8
  5198                           
  5199 ;; *************** function _exp *****************
  5200 ;; Defined at:
  5201 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\exp.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;  x               3    8[BANK0 ] int 
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  exponent        2   14[BANK0 ] int 
  5206 ;;  sign            1   16[BANK0 ] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  3    8[BANK0 ] unsigned char 
  5209 ;; Registers used:
  5210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5216 ;;      Params:         0       3       0       0       0       0       0       0       0
  5217 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5219 ;;      Totals:         0       9       0       0       0       0       0       0       0
  5220 ;;Total ram usage:        9 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; Hardware stack levels required when called:    4
  5223 ;; This function calls:
  5224 ;;		___awtoft
  5225 ;;		___ftdiv
  5226 ;;		___ftge
  5227 ;;		___ftmul
  5228 ;;		___ftneg
  5229 ;;		___ftsub
  5230 ;;		___fttol
  5231 ;;		_eval_poly
  5232 ;;		_floor
  5233 ;;		_ldexp
  5234 ;; This function is called by:
  5235 ;;		_pow
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text16
  5240  0018C4                     __ptext16:
  5241                           	opt stack 0
  5242  0018C4                     _exp:
  5243                           	opt stack 24
  5244                           
  5245                           ;incstack = 0
  5246  0018C4  0100               	movlb	0	; () banked
  5247  0018C6  51B0               	movf	exp@x& (0+255),w,b
  5248  0018C8  0100               	movlb	0	; () banked
  5249  0018CA  11B1               	iorwf	(exp@x+1)& (0+255),w,b
  5250  0018CC  0100               	movlb	0	; () banked
  5251  0018CE  11B2               	iorwf	(exp@x+2)& (0+255),w,b
  5252  0018D0  A4D8               	btfss	status,2,c
  5253  0018D2  D00A               	goto	l4681
  5254                           
  5255                           ; BSR set to: 0
  5256  0018D4  0E00               	movlw	0
  5257  0018D6  0100               	movlb	0	; () banked
  5258  0018D8  6FB0               	movwf	?_exp& (0+255),b
  5259  0018DA  0E80               	movlw	128
  5260  0018DC  0100               	movlb	0	; () banked
  5261  0018DE  6FB1               	movwf	(?_exp+1)& (0+255),b
  5262  0018E0  0E3F               	movlw	63
  5263  0018E2  0100               	movlb	0	; () banked
  5264  0018E4  6FB2               	movwf	(?_exp+2)& (0+255),b
  5265                           
  5266                           ; BSR set to: 0
  5267  0018E6  0012               	return	
  5268  0018E8                     l4681:
  5269                           
  5270                           ; BSR set to: 0
  5271  0018E8  0E72               	movlw	114
  5272  0018EA  6E0F               	movwf	___ftge@ff1,c
  5273  0018EC  0E31               	movlw	49
  5274  0018EE  6E10               	movwf	___ftge@ff1+1,c
  5275  0018F0  0E44               	movlw	68
  5276  0018F2  6E11               	movwf	___ftge@ff1+2,c
  5277  0018F4  C0B0  F012         	movff	exp@x,___ftge@ff2
  5278  0018F8  C0B1  F013         	movff	exp@x+1,___ftge@ff2+1
  5279  0018FC  C0B2  F014         	movff	exp@x+2,___ftge@ff2+2
  5280  001900  ECCB  F014         	call	___ftge	;wreg free
  5281  001904  B0D8               	btfsc	status,0,c
  5282  001906  D00E               	goto	l4687
  5283  001908  0E00               	movlw	0
  5284  00190A  6E48               	movwf	_errno+1,c
  5285  00190C  0E22               	movlw	34
  5286  00190E  6E47               	movwf	_errno,c
  5287  001910  0EFF               	movlw	255
  5288  001912  0100               	movlb	0	; () banked
  5289  001914  6FB0               	movwf	?_exp& (0+255),b
  5290  001916  0E7F               	movlw	127
  5291  001918  0100               	movlb	0	; () banked
  5292  00191A  6FB1               	movwf	(?_exp+1)& (0+255),b
  5293  00191C  0E7F               	movlw	127
  5294  00191E  0100               	movlb	0	; () banked
  5295  001920  6FB2               	movwf	(?_exp+2)& (0+255),b
  5296                           
  5297                           ; BSR set to: 0
  5298  001922  0012               	return	
  5299  001924                     l4687:
  5300  001924  C0B0  F00F         	movff	exp@x,___ftge@ff1
  5301  001928  C0B1  F010         	movff	exp@x+1,___ftge@ff1+1
  5302  00192C  C0B2  F011         	movff	exp@x+2,___ftge@ff1+2
  5303  001930  0E49               	movlw	73
  5304  001932  6E12               	movwf	___ftge@ff2,c
  5305  001934  0E3A               	movlw	58
  5306  001936  6E13               	movwf	___ftge@ff2+1,c
  5307  001938  0EC4               	movlw	196
  5308  00193A  6E14               	movwf	___ftge@ff2+2,c
  5309  00193C  ECCB  F014         	call	___ftge	;wreg free
  5310  001940  B0D8               	btfsc	status,0,c
  5311  001942  D00E               	goto	l4693
  5312  001944  0E00               	movlw	0
  5313  001946  6E48               	movwf	_errno+1,c
  5314  001948  0E22               	movlw	34
  5315  00194A  6E47               	movwf	_errno,c
  5316  00194C  0E00               	movlw	0
  5317  00194E  0100               	movlb	0	; () banked
  5318  001950  6FB0               	movwf	?_exp& (0+255),b
  5319  001952  0E00               	movlw	0
  5320  001954  0100               	movlb	0	; () banked
  5321  001956  6FB1               	movwf	(?_exp+1)& (0+255),b
  5322  001958  0E00               	movlw	0
  5323  00195A  0100               	movlb	0	; () banked
  5324  00195C  6FB2               	movwf	(?_exp+2)& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327  00195E  0012               	return	
  5328  001960                     l4693:
  5329  001960  0100               	movlb	0	; () banked
  5330  001962  AFB2               	btfss	(exp@x+2)& (0+255),7,b
  5331  001964  D002               	goto	u4770
  5332  001966  0E01               	movlw	1
  5333  001968  D001               	goto	u4780
  5334  00196A                     u4770:
  5335  00196A  0E00               	movlw	0
  5336  00196C                     u4780:
  5337  00196C  0100               	movlb	0	; () banked
  5338  00196E  6FB8               	movwf	exp@sign& (0+255),b
  5339                           
  5340                           ; BSR set to: 0
  5341  001970  0100               	movlb	0	; () banked
  5342  001972  51B8               	movf	exp@sign& (0+255),w,b
  5343  001974  0100               	movlb	0	; () banked
  5344  001976  B4D8               	btfsc	status,2,c
  5345  001978  D00E               	goto	l1010
  5346                           
  5347                           ; BSR set to: 0
  5348  00197A  C0B0  F00F         	movff	exp@x,___ftneg@f1
  5349  00197E  C0B1  F010         	movff	exp@x+1,___ftneg@f1+1
  5350  001982  C0B2  F011         	movff	exp@x+2,___ftneg@f1+2
  5351  001986  ECBF  F016         	call	___ftneg	;wreg free
  5352  00198A  C00F  F0B0         	movff	?___ftneg,exp@x
  5353  00198E  C010  F0B1         	movff	?___ftneg+1,exp@x+1
  5354  001992  C011  F0B2         	movff	?___ftneg+2,exp@x+2
  5355  001996                     l1010:
  5356  001996  C0B0  F01B         	movff	exp@x,___ftmul@f1
  5357  00199A  C0B1  F01C         	movff	exp@x+1,___ftmul@f1+1
  5358  00199E  C0B2  F01D         	movff	exp@x+2,___ftmul@f1+2
  5359  0019A2  0EAA               	movlw	170
  5360  0019A4  6E1E               	movwf	___ftmul@f2,c
  5361  0019A6  0EB8               	movlw	184
  5362  0019A8  6E1F               	movwf	___ftmul@f2+1,c
  5363  0019AA  0E3F               	movlw	63
  5364  0019AC  6E20               	movwf	___ftmul@f2+2,c
  5365  0019AE  EC5D  F012         	call	___ftmul	;wreg free
  5366  0019B2  C01B  F0B0         	movff	?___ftmul,exp@x
  5367  0019B6  C01C  F0B1         	movff	?___ftmul+1,exp@x+1
  5368  0019BA  C01D  F0B2         	movff	?___ftmul+2,exp@x+2
  5369  0019BE  C0B0  F0A8         	movff	exp@x,floor@x
  5370  0019C2  C0B1  F0A9         	movff	exp@x+1,floor@x+1
  5371  0019C6  C0B2  F0AA         	movff	exp@x+2,floor@x+2
  5372  0019CA  ECD7  F012         	call	_floor	;wreg free
  5373  0019CE  C0A8  F0B3         	movff	?_floor,_exp$1052
  5374  0019D2  C0A9  F0B4         	movff	?_floor+1,_exp$1052+1
  5375  0019D6  C0AA  F0B5         	movff	?_floor+2,_exp$1052+2
  5376  0019DA  C0B3  F02A         	movff	_exp$1052,___fttol@f1
  5377  0019DE  C0B4  F02B         	movff	_exp$1052+1,___fttol@f1+1
  5378  0019E2  C0B5  F02C         	movff	_exp$1052+2,___fttol@f1+2
  5379  0019E6  ECE3  F011         	call	___fttol	;wreg free
  5380  0019EA  C02A  F0B6         	movff	?___fttol,exp@exponent
  5381  0019EE  C02B  F0B7         	movff	?___fttol+1,exp@exponent+1
  5382  0019F2  C0B0  F036         	movff	exp@x,___ftsub@f1
  5383  0019F6  C0B1  F037         	movff	exp@x+1,___ftsub@f1+1
  5384  0019FA  C0B2  F038         	movff	exp@x+2,___ftsub@f1+2
  5385  0019FE  C0B6  F017         	movff	exp@exponent,___awtoft@c
  5386  001A02  C0B7  F018         	movff	exp@exponent+1,___awtoft@c+1
  5387  001A06  EC68  F016         	call	___awtoft	;wreg free
  5388  001A0A  C017  F039         	movff	?___awtoft,___ftsub@f2
  5389  001A0E  C018  F03A         	movff	?___awtoft+1,___ftsub@f2+1
  5390  001A12  C019  F03B         	movff	?___awtoft+2,___ftsub@f2+2
  5391  001A16  EC10  F016         	call	___ftsub	;wreg free
  5392  001A1A  C036  F0B0         	movff	?___ftsub,exp@x
  5393  001A1E  C037  F0B1         	movff	?___ftsub+1,exp@x+1
  5394  001A22  C038  F0B2         	movff	?___ftsub+2,exp@x+2
  5395  001A26  C0B0  F036         	movff	exp@x,eval_poly@x
  5396  001A2A  C0B1  F037         	movff	exp@x+1,eval_poly@x+1
  5397  001A2E  C0B2  F038         	movff	exp@x+2,eval_poly@x+2
  5398  001A32  0E01               	movlw	low exp@coeff
  5399  001A34  6E39               	movwf	eval_poly@d,c
  5400  001A36  0E08               	movlw	high exp@coeff
  5401  001A38  6E3A               	movwf	eval_poly@d+1,c
  5402  001A3A  0E00               	movlw	0
  5403  001A3C  6E3C               	movwf	eval_poly@n+1,c
  5404  001A3E  0E09               	movlw	9
  5405  001A40  6E3B               	movwf	eval_poly@n,c
  5406  001A42  ECC3  F013         	call	_eval_poly	;wreg free
  5407  001A46  C036  F0A8         	movff	?_eval_poly,ldexp@value
  5408  001A4A  C037  F0A9         	movff	?_eval_poly+1,ldexp@value+1
  5409  001A4E  C038  F0AA         	movff	?_eval_poly+2,ldexp@value+2
  5410  001A52  C0B6  F0AB         	movff	exp@exponent,ldexp@newexp
  5411  001A56  C0B7  F0AC         	movff	exp@exponent+1,ldexp@newexp+1
  5412  001A5A  EC59  F011         	call	_ldexp	;wreg free
  5413  001A5E  C0A8  F0B0         	movff	?_ldexp,exp@x
  5414  001A62  C0A9  F0B1         	movff	?_ldexp+1,exp@x+1
  5415  001A66  C0AA  F0B2         	movff	?_ldexp+2,exp@x+2
  5416  001A6A  0100               	movlb	0	; () banked
  5417  001A6C  51B8               	movf	exp@sign& (0+255),w,b
  5418  001A6E  0100               	movlb	0	; () banked
  5419  001A70  B4D8               	btfsc	status,2,c
  5420  001A72  D02B               	goto	l1011
  5421                           
  5422                           ; BSR set to: 0
  5423  001A74  0100               	movlb	0	; () banked
  5424  001A76  29B0               	incf	exp@x& (0+255),w,b
  5425  001A78  E113               	bnz	l4715
  5426  001A7A  0E7F               	movlw	127
  5427  001A7C  0100               	movlb	0	; () banked
  5428  001A7E  19B1               	xorwf	(exp@x+1)& (0+255),w,b
  5429  001A80  E10F               	bnz	l4715
  5430  001A82  0E7F               	movlw	127
  5431  001A84  0100               	movlb	0	; () banked
  5432  001A86  19B2               	xorwf	(exp@x+2)& (0+255),w,b
  5433  001A88  A4D8               	btfss	status,2,c
  5434  001A8A  D00A               	goto	l4715
  5435                           
  5436                           ; BSR set to: 0
  5437  001A8C  0E00               	movlw	0
  5438  001A8E  0100               	movlb	0	; () banked
  5439  001A90  6FB0               	movwf	?_exp& (0+255),b
  5440  001A92  0E00               	movlw	0
  5441  001A94  0100               	movlb	0	; () banked
  5442  001A96  6FB1               	movwf	(?_exp+1)& (0+255),b
  5443  001A98  0E00               	movlw	0
  5444  001A9A  0100               	movlb	0	; () banked
  5445  001A9C  6FB2               	movwf	(?_exp+2)& (0+255),b
  5446                           
  5447                           ; BSR set to: 0
  5448  001A9E  0012               	return	
  5449  001AA0                     l4715:
  5450                           
  5451                           ; BSR set to: 0
  5452  001AA0  0E00               	movlw	0
  5453  001AA2  6E1B               	movwf	___ftdiv@f1,c
  5454  001AA4  0E80               	movlw	128
  5455  001AA6  6E1C               	movwf	___ftdiv@f1+1,c
  5456  001AA8  0E3F               	movlw	63
  5457  001AAA  6E1D               	movwf	___ftdiv@f1+2,c
  5458  001AAC  C0B0  F01E         	movff	exp@x,___ftdiv@f2
  5459  001AB0  C0B1  F01F         	movff	exp@x+1,___ftdiv@f2+1
  5460  001AB4  C0B2  F020         	movff	exp@x+2,___ftdiv@f2+2
  5461  001AB8  EC50  F013         	call	___ftdiv	;wreg free
  5462  001ABC  C01B  F0B0         	movff	?___ftdiv,?_exp
  5463  001AC0  C01C  F0B1         	movff	?___ftdiv+1,?_exp+1
  5464  001AC4  C01D  F0B2         	movff	?___ftdiv+2,?_exp+2
  5465  001AC8  0012               	return	
  5466  001ACA                     l1011:
  5467                           
  5468                           ; BSR set to: 0
  5469  001ACA  C0B0  F0B0         	movff	exp@x,?_exp
  5470  001ACE  C0B1  F0B1         	movff	exp@x+1,?_exp+1
  5471  001AD2  C0B2  F0B2         	movff	exp@x+2,?_exp+2
  5472  001AD6  0012               	return		;funcret
  5473  001AD8                     __end_of_exp:
  5474                           	opt stack 0
  5475                           tblptru	equ	0xFF8
  5476                           tblptrh	equ	0xFF7
  5477                           tblptrl	equ	0xFF6
  5478                           tablat	equ	0xFF5
  5479                           intcon	equ	0xFF2
  5480                           intcon2	equ	0xFF1
  5481                           postinc0	equ	0xFEE
  5482                           wreg	equ	0xFE8
  5483                           postdec1	equ	0xFE5
  5484                           fsr1l	equ	0xFE1
  5485                           indf2	equ	0xFDF
  5486                           fsr2h	equ	0xFDA
  5487                           fsr2l	equ	0xFD9
  5488                           status	equ	0xFD8
  5489                           
  5490 ;; *************** function _ldexp *****************
  5491 ;; Defined at:
  5492 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\frexp.c"
  5493 ;; Parameters:    Size  Location     Type
  5494 ;;  value           3    0[BANK0 ] unsigned char 
  5495 ;;  newexp          2    3[BANK0 ] int 
  5496 ;; Auto vars:     Size  Location     Type
  5497 ;;		None
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  3    0[BANK0 ] int 
  5500 ;; Registers used:
  5501 ;;		wreg, status,2, status,0
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5507 ;;      Params:         0       5       0       0       0       0       0       0       0
  5508 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5509 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5510 ;;      Totals:         0       7       0       0       0       0       0       0       0
  5511 ;;Total ram usage:        7 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    1
  5514 ;; This function calls:
  5515 ;;		Nothing
  5516 ;; This function is called by:
  5517 ;;		_exp
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text17
  5522  0022B2                     __ptext17:
  5523                           	opt stack 0
  5524  0022B2                     _ldexp:
  5525                           	opt stack 26
  5526                           
  5527                           ;incstack = 0
  5528  0022B2  0100               	movlb	0	; () banked
  5529  0022B4  51A8               	movf	ldexp@value& (0+255),w,b
  5530  0022B6  0100               	movlb	0	; () banked
  5531  0022B8  11A9               	iorwf	(ldexp@value+1)& (0+255),w,b
  5532  0022BA  0100               	movlb	0	; () banked
  5533  0022BC  11AA               	iorwf	(ldexp@value+2)& (0+255),w,b
  5534  0022BE  A4D8               	btfss	status,2,c
  5535  0022C0  D00A               	goto	l4613
  5536                           
  5537                           ; BSR set to: 0
  5538  0022C2  0E00               	movlw	0
  5539  0022C4  0100               	movlb	0	; () banked
  5540  0022C6  6FA8               	movwf	?_ldexp& (0+255),b
  5541  0022C8  0E00               	movlw	0
  5542  0022CA  0100               	movlb	0	; () banked
  5543  0022CC  6FA9               	movwf	(?_ldexp+1)& (0+255),b
  5544  0022CE  0E00               	movlw	0
  5545  0022D0  0100               	movlb	0	; () banked
  5546  0022D2  6FAA               	movwf	(?_ldexp+2)& (0+255),b
  5547                           
  5548                           ; BSR set to: 0
  5549  0022D4  0012               	return	
  5550  0022D6                     l4613:
  5551                           
  5552                           ; BSR set to: 0
  5553  0022D6  0100               	movlb	0	; () banked
  5554  0022D8  51AA               	movf	(ldexp@value+2)& (0+255),w,b
  5555  0022DA  0B7F               	andlw	127
  5556  0022DC  0100               	movlb	0	; () banked
  5557  0022DE  6FAD               	movwf	??_ldexp& (0+255),b
  5558  0022E0  6BAE               	clrf	(??_ldexp+1)& (0+255),b
  5559  0022E2  90D8               	bcf	status,0,c
  5560  0022E4  0100               	movlb	0	; () banked
  5561  0022E6  37AD               	rlcf	??_ldexp& (0+255),f,b
  5562  0022E8  37AE               	rlcf	(??_ldexp+1)& (0+255),f,b
  5563  0022EA  0100               	movlb	0	; () banked
  5564  0022EC  51AD               	movf	??_ldexp& (0+255),w,b
  5565  0022EE  0100               	movlb	0	; () banked
  5566  0022F0  27AB               	addwf	ldexp@newexp& (0+255),f,b
  5567  0022F2  0100               	movlb	0	; () banked
  5568  0022F4  51AE               	movf	(??_ldexp+1)& (0+255),w,b
  5569  0022F6  0100               	movlb	0	; () banked
  5570  0022F8  23AC               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5571  0022FA  0100               	movlb	0	; () banked
  5572  0022FC  AFA9               	btfss	(ldexp@value+1)& (0+255),7,b
  5573  0022FE  D004               	goto	u4670
  5574  002300  0100               	movlb	0	; () banked
  5575  002302  6BAD               	clrf	??_ldexp& (0+255),b
  5576  002304  2BAD               	incf	??_ldexp& (0+255),f,b
  5577  002306  D002               	goto	u4678
  5578  002308                     u4670:
  5579  002308  0100               	movlb	0	; () banked
  5580  00230A  6BAD               	clrf	??_ldexp& (0+255),b
  5581  00230C                     u4678:
  5582  00230C  0100               	movlb	0	; () banked
  5583  00230E  51AD               	movf	??_ldexp& (0+255),w,b
  5584  002310  0100               	movlb	0	; () banked
  5585  002312  27AB               	addwf	ldexp@newexp& (0+255),f,b
  5586  002314  0E00               	movlw	0
  5587  002316  23AC               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  5588  002318  0100               	movlb	0	; () banked
  5589  00231A  AFAC               	btfss	(ldexp@newexp+1)& (0+255),7,b
  5590  00231C  D00E               	goto	l4621
  5591                           
  5592                           ; BSR set to: 0
  5593  00231E  0E00               	movlw	0
  5594  002320  6E48               	movwf	_errno+1,c
  5595  002322  0E22               	movlw	34
  5596  002324  6E47               	movwf	_errno,c
  5597  002326  0E00               	movlw	0
  5598  002328  0100               	movlb	0	; () banked
  5599  00232A  6FA8               	movwf	?_ldexp& (0+255),b
  5600  00232C  0E00               	movlw	0
  5601  00232E  0100               	movlb	0	; () banked
  5602  002330  6FA9               	movwf	(?_ldexp+1)& (0+255),b
  5603  002332  0E00               	movlw	0
  5604  002334                     L4:
  5605  002334  0100               	movlb	0	; () banked
  5606  002336  6FAA               	movwf	(?_ldexp+2)& (0+255),b
  5607                           
  5608                           ; BSR set to: 0
  5609  002338  0012               	return	
  5610  00233A                     l4621:
  5611                           
  5612                           ; BSR set to: 0
  5613  00233A  0100               	movlb	0	; () banked
  5614  00233C  BFAC               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  5615  00233E  D01B               	goto	l4637
  5616  002340  0100               	movlb	0	; () banked
  5617  002342  05AC               	decf	(ldexp@newexp+1)& (0+255),w,b
  5618  002344  A0D8               	btfss	status,0,c
  5619  002346  D017               	goto	l4637
  5620                           
  5621                           ; BSR set to: 0
  5622  002348  0E00               	movlw	0
  5623  00234A  6E48               	movwf	_errno+1,c
  5624  00234C  0E22               	movlw	34
  5625  00234E  6E47               	movwf	_errno,c
  5626                           
  5627                           ; BSR set to: 0
  5628  002350  0100               	movlb	0	; () banked
  5629  002352  AFAA               	btfss	(ldexp@value+2)& (0+255),7,b
  5630  002354  D008               	goto	l4633
  5631                           
  5632                           ; BSR set to: 0
  5633  002356  0EFF               	movlw	255
  5634  002358  0100               	movlb	0	; () banked
  5635  00235A  6FA8               	movwf	?_ldexp& (0+255),b
  5636  00235C  0E7F               	movlw	127
  5637  00235E  0100               	movlb	0	; () banked
  5638  002360  6FA9               	movwf	(?_ldexp+1)& (0+255),b
  5639  002362  0EFF               	movlw	255
  5640  002364  D7E7               	goto	L4
  5641  002366                     l4633:
  5642                           
  5643                           ; BSR set to: 0
  5644  002366  0EFF               	movlw	255
  5645  002368  0100               	movlb	0	; () banked
  5646  00236A  6FA8               	movwf	?_ldexp& (0+255),b
  5647  00236C  0E7F               	movlw	127
  5648  00236E  0100               	movlb	0	; () banked
  5649  002370  6FA9               	movwf	(?_ldexp+1)& (0+255),b
  5650  002372  0E7F               	movlw	127
  5651  002374  D7DF               	goto	L4
  5652  002376                     l4637:
  5653                           
  5654                           ; BSR set to: 0
  5655  002376  0100               	movlb	0	; () banked
  5656  002378  35AC               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  5657  00237A  31AC               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  5658  00237C  0100               	movlb	0	; () banked
  5659  00237E  6FAE               	movwf	(??_ldexp+1)& (0+255),b
  5660  002380  0100               	movlb	0	; () banked
  5661  002382  31AB               	rrcf	ldexp@newexp& (0+255),w,b
  5662  002384  0100               	movlb	0	; () banked
  5663  002386  6FAD               	movwf	??_ldexp& (0+255),b
  5664  002388  0100               	movlb	0	; () banked
  5665  00238A  51AA               	movf	(ldexp@value+2)& (0+255),w,b
  5666  00238C  0100               	movlb	0	; () banked
  5667  00238E  19AD               	xorwf	??_ldexp& (0+255),w,b
  5668  002390  0B80               	andlw	-128
  5669  002392  19AD               	xorwf	??_ldexp& (0+255),w,b
  5670  002394  0100               	movlb	0	; () banked
  5671  002396  6FAA               	movwf	(ldexp@value+2)& (0+255),b
  5672  002398  C0AB  F0AD         	movff	ldexp@newexp,??_ldexp
  5673  00239C  0E01               	movlw	1
  5674  00239E  0100               	movlb	0	; () banked
  5675  0023A0  17AD               	andwf	??_ldexp& (0+255),f,b
  5676  0023A2  0100               	movlb	0	; () banked
  5677  0023A4  33AD               	rrcf	??_ldexp& (0+255),f,b
  5678  0023A6  33AD               	rrcf	??_ldexp& (0+255),f,b
  5679  0023A8  0100               	movlb	0	; () banked
  5680  0023AA  51A9               	movf	(ldexp@value+1)& (0+255),w,b
  5681  0023AC  0100               	movlb	0	; () banked
  5682  0023AE  19AD               	xorwf	??_ldexp& (0+255),w,b
  5683  0023B0  0B7F               	andlw	-129
  5684  0023B2  19AD               	xorwf	??_ldexp& (0+255),w,b
  5685  0023B4  0100               	movlb	0	; () banked
  5686  0023B6  6FA9               	movwf	(ldexp@value+1)& (0+255),b
  5687                           
  5688                           ; BSR set to: 0
  5689                           
  5690                           ; BSR set to: 0
  5691                           
  5692                           ; BSR set to: 0
  5693  0023B8  C0A8  F0A8         	movff	ldexp@value,?_ldexp
  5694  0023BC  C0A9  F0A9         	movff	ldexp@value+1,?_ldexp+1
  5695  0023C0  C0AA  F0AA         	movff	ldexp@value+2,?_ldexp+2
  5696  0023C4  0012               	return	
  5697  0023C6                     __end_of_ldexp:
  5698                           	opt stack 0
  5699                           tblptru	equ	0xFF8
  5700                           tblptrh	equ	0xFF7
  5701                           tblptrl	equ	0xFF6
  5702                           tablat	equ	0xFF5
  5703                           intcon	equ	0xFF2
  5704                           intcon2	equ	0xFF1
  5705                           postinc0	equ	0xFEE
  5706                           wreg	equ	0xFE8
  5707                           postdec1	equ	0xFE5
  5708                           fsr1l	equ	0xFE1
  5709                           indf2	equ	0xFDF
  5710                           fsr2h	equ	0xFDA
  5711                           fsr2l	equ	0xFD9
  5712                           status	equ	0xFD8
  5713                           
  5714 ;; *************** function _floor *****************
  5715 ;; Defined at:
  5716 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\floor.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  x               3    0[BANK0 ] int 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  i               3    3[BANK0 ] int 
  5721 ;;  expon           2    6[BANK0 ] int 
  5722 ;; Return value:  Size  Location     Type
  5723 ;;                  3    0[BANK0 ] int 
  5724 ;; Registers used:
  5725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5726 ;; Tracked objects:
  5727 ;;		On entry : 0/0
  5728 ;;		On exit  : 0/0
  5729 ;;		Unchanged: 0/0
  5730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5731 ;;      Params:         0       3       0       0       0       0       0       0       0
  5732 ;;      Locals:         0       5       0       0       0       0       0       0       0
  5733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5734 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5735 ;;Total ram usage:        8 bytes
  5736 ;; Hardware stack levels used:    1
  5737 ;; Hardware stack levels required when called:    3
  5738 ;; This function calls:
  5739 ;;		___altoft
  5740 ;;		___ftadd
  5741 ;;		___ftge
  5742 ;;		___fttol
  5743 ;;		_frexp
  5744 ;; This function is called by:
  5745 ;;		_exp
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           	psect	text18
  5750  0025AE                     __ptext18:
  5751                           	opt stack 0
  5752  0025AE                     _floor:
  5753                           	opt stack 24
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;incstack = 0
  5757  0025AE  C0A8  F00F         	movff	floor@x,frexp@value
  5758  0025B2  C0A9  F010         	movff	floor@x+1,frexp@value+1
  5759  0025B6  C0AA  F011         	movff	floor@x+2,frexp@value+2
  5760  0025BA  0EAE               	movlw	low floor@expon
  5761  0025BC  6E12               	movwf	frexp@eptr,c
  5762  0025BE  0E00               	movlw	high floor@expon
  5763  0025C0  6E13               	movwf	frexp@eptr+1,c
  5764  0025C2  EC83  F014         	call	_frexp	;wreg free
  5765  0025C6  0100               	movlb	0	; () banked
  5766  0025C8  AFAF               	btfss	(floor@expon+1)& (0+255),7,b
  5767  0025CA  D017               	goto	l4591
  5768                           
  5769                           ; BSR set to: 0
  5770  0025CC  0100               	movlb	0	; () banked
  5771  0025CE  AFAA               	btfss	(floor@x+2)& (0+255),7,b
  5772  0025D0  D00A               	goto	l4587
  5773                           
  5774                           ; BSR set to: 0
  5775  0025D2  0E00               	movlw	0
  5776  0025D4  0100               	movlb	0	; () banked
  5777  0025D6  6FA8               	movwf	?_floor& (0+255),b
  5778  0025D8  0E80               	movlw	128
  5779  0025DA  0100               	movlb	0	; () banked
  5780  0025DC  6FA9               	movwf	(?_floor+1)& (0+255),b
  5781  0025DE  0EBF               	movlw	191
  5782  0025E0  0100               	movlb	0	; () banked
  5783  0025E2  6FAA               	movwf	(?_floor+2)& (0+255),b
  5784                           
  5785                           ; BSR set to: 0
  5786  0025E4  0012               	return	
  5787  0025E6                     l4587:
  5788                           
  5789                           ; BSR set to: 0
  5790  0025E6  0E00               	movlw	0
  5791  0025E8  0100               	movlb	0	; () banked
  5792  0025EA  6FA8               	movwf	?_floor& (0+255),b
  5793  0025EC  0E00               	movlw	0
  5794  0025EE  0100               	movlb	0	; () banked
  5795  0025F0  6FA9               	movwf	(?_floor+1)& (0+255),b
  5796  0025F2  0E00               	movlw	0
  5797  0025F4  0100               	movlb	0	; () banked
  5798  0025F6  6FAA               	movwf	(?_floor+2)& (0+255),b
  5799                           
  5800                           ; BSR set to: 0
  5801  0025F8  0012               	return	
  5802  0025FA                     l4591:
  5803                           
  5804                           ; BSR set to: 0
  5805  0025FA  0100               	movlb	0	; () banked
  5806  0025FC  51AF               	movf	(floor@expon+1)& (0+255),w,b
  5807  0025FE  E105               	bnz	u4630
  5808  002600  0E15               	movlw	21
  5809  002602  0100               	movlb	0	; () banked
  5810  002604  5DAE               	subwf	floor@expon& (0+255),w,b
  5811  002606  A0D8               	btfss	status,0,c
  5812  002608  D007               	goto	l4595
  5813  00260A                     u4630:
  5814                           
  5815                           ; BSR set to: 0
  5816  00260A  C0A8  F0A8         	movff	floor@x,?_floor
  5817  00260E  C0A9  F0A9         	movff	floor@x+1,?_floor+1
  5818  002612  C0AA  F0AA         	movff	floor@x+2,?_floor+2
  5819  002616  0012               	return	
  5820  002618                     l4595:
  5821                           
  5822                           ; BSR set to: 0
  5823  002618  C0A8  F02A         	movff	floor@x,___fttol@f1
  5824  00261C  C0A9  F02B         	movff	floor@x+1,___fttol@f1+1
  5825  002620  C0AA  F02C         	movff	floor@x+2,___fttol@f1+2
  5826  002624  ECE3  F011         	call	___fttol	;wreg free
  5827  002628  C02A  F039         	movff	?___fttol,___altoft@c
  5828  00262C  C02B  F03A         	movff	?___fttol+1,___altoft@c+1
  5829  002630  C02C  F03B         	movff	?___fttol+2,___altoft@c+2
  5830  002634  C02D  F03C         	movff	?___fttol+3,___altoft@c+3
  5831  002638  EC55  F015         	call	___altoft	;wreg free
  5832  00263C  C039  F0AB         	movff	?___altoft,floor@i
  5833  002640  C03A  F0AC         	movff	?___altoft+1,floor@i+1
  5834  002644  C03B  F0AD         	movff	?___altoft+2,floor@i+2
  5835  002648  C0A8  F00F         	movff	floor@x,___ftge@ff1
  5836  00264C  C0A9  F010         	movff	floor@x+1,___ftge@ff1+1
  5837  002650  C0AA  F011         	movff	floor@x+2,___ftge@ff1+2
  5838  002654  C0AB  F012         	movff	floor@i,___ftge@ff2
  5839  002658  C0AC  F013         	movff	floor@i+1,___ftge@ff2+1
  5840  00265C  C0AD  F014         	movff	floor@i+2,___ftge@ff2+2
  5841  002660  ECCB  F014         	call	___ftge	;wreg free
  5842  002664  B0D8               	btfsc	status,0,c
  5843  002666  D015               	goto	l1021
  5844  002668  C0AB  F02A         	movff	floor@i,___ftadd@f1
  5845  00266C  C0AC  F02B         	movff	floor@i+1,___ftadd@f1+1
  5846  002670  C0AD  F02C         	movff	floor@i+2,___ftadd@f1+2
  5847  002674  0E00               	movlw	0
  5848  002676  6E2D               	movwf	___ftadd@f2,c
  5849  002678  0E80               	movlw	128
  5850  00267A  6E2E               	movwf	___ftadd@f2+1,c
  5851  00267C  0EBF               	movlw	191
  5852  00267E  6E2F               	movwf	___ftadd@f2+2,c
  5853  002680  EC6D  F00E         	call	___ftadd	;wreg free
  5854  002684  C02A  F0A8         	movff	?___ftadd,?_floor
  5855  002688  C02B  F0A9         	movff	?___ftadd+1,?_floor+1
  5856  00268C  C02C  F0AA         	movff	?___ftadd+2,?_floor+2
  5857  002690  0012               	return	
  5858  002692                     l1021:
  5859  002692  C0AB  F0A8         	movff	floor@i,?_floor
  5860  002696  C0AC  F0A9         	movff	floor@i+1,?_floor+1
  5861  00269A  C0AD  F0AA         	movff	floor@i+2,?_floor+2
  5862  00269E  0012               	return		;funcret
  5863  0026A0                     __end_of_floor:
  5864                           	opt stack 0
  5865                           tblptru	equ	0xFF8
  5866                           tblptrh	equ	0xFF7
  5867                           tblptrl	equ	0xFF6
  5868                           tablat	equ	0xFF5
  5869                           intcon	equ	0xFF2
  5870                           intcon2	equ	0xFF1
  5871                           postinc0	equ	0xFEE
  5872                           wreg	equ	0xFE8
  5873                           postdec1	equ	0xFE5
  5874                           fsr1l	equ	0xFE1
  5875                           indf2	equ	0xFDF
  5876                           fsr2h	equ	0xFDA
  5877                           fsr2l	equ	0xFD9
  5878                           status	equ	0xFD8
  5879                           
  5880 ;; *************** function _frexp *****************
  5881 ;; Defined at:
  5882 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\frexp.c"
  5883 ;; Parameters:    Size  Location     Type
  5884 ;;  value           3   14[COMRAM] int 
  5885 ;;  eptr            2   17[COMRAM] PTR int 
  5886 ;;		 -> log@exponent(2), floor@expon(2), 
  5887 ;; Auto vars:     Size  Location     Type
  5888 ;;		None
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  3   14[COMRAM] PTR int 
  5891 ;; Registers used:
  5892 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5898 ;;      Params:         5       0       0       0       0       0       0       0       0
  5899 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5900 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5901 ;;      Totals:         7       0       0       0       0       0       0       0       0
  5902 ;;Total ram usage:        7 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    1
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_floor
  5909 ;;		_log
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text19
  5914  002906                     __ptext19:
  5915                           	opt stack 0
  5916  002906                     _frexp:
  5917                           	opt stack 26
  5918                           
  5919                           ;incstack = 0
  5920  002906  500F               	movf	frexp@value,w,c
  5921  002908  1010               	iorwf	frexp@value+1,w,c
  5922  00290A  1011               	iorwf	frexp@value+2,w,c
  5923  00290C  A4D8               	btfss	status,2,c
  5924  00290E  D00F               	goto	l4499
  5925  002910  C012  FFD9         	movff	frexp@eptr,fsr2l
  5926  002914  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5927  002918  0E00               	movlw	0
  5928  00291A  6EDE               	movwf	postinc2,c
  5929  00291C  0E00               	movlw	0
  5930  00291E  6EDD               	movwf	postdec2,c
  5931  002920  0E00               	movlw	0
  5932  002922  6E0F               	movwf	?_frexp,c
  5933  002924  0E00               	movlw	0
  5934  002926  6E10               	movwf	?_frexp+1,c
  5935  002928  0E00               	movlw	0
  5936  00292A  6E11               	movwf	?_frexp+2,c
  5937  00292C  0012               	return	
  5938  00292E                     l4499:
  5939  00292E  5011               	movf	frexp@value+2,w,c
  5940  002930  0B7F               	andlw	127
  5941  002932  6E14               	movwf	??_frexp& (0+255),c
  5942  002934  6A15               	clrf	(??_frexp+1)& (0+255),c
  5943  002936  90D8               	bcf	status,0,c
  5944  002938  3614               	rlcf	??_frexp,f,c
  5945  00293A  3615               	rlcf	??_frexp+1,f,c
  5946  00293C  C012  FFD9         	movff	frexp@eptr,fsr2l
  5947  002940  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5948  002944  C014  FFDE         	movff	??_frexp,postinc2
  5949  002948  C015  FFDD         	movff	??_frexp+1,postdec2
  5950  00294C  AE10               	btfss	frexp@value+1,7,c
  5951  00294E  D003               	goto	u4530
  5952  002950  6A14               	clrf	??_frexp& (0+255),c
  5953  002952  2A14               	incf	??_frexp& (0+255),f,c
  5954  002954  D001               	goto	u4538
  5955  002956                     u4530:
  5956  002956  6A14               	clrf	??_frexp& (0+255),c
  5957  002958                     u4538:
  5958  002958  5014               	movf	??_frexp,w,c
  5959  00295A  C012  FFD9         	movff	frexp@eptr,fsr2l
  5960  00295E  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5961  002962  12DE               	iorwf	postinc2,f,c
  5962  002964  0E00               	movlw	0
  5963  002966  12DD               	iorwf	postdec2,f,c
  5964  002968  C012  FFD9         	movff	frexp@eptr,fsr2l
  5965  00296C  C013  FFDA         	movff	frexp@eptr+1,fsr2h
  5966  002970  0E82               	movlw	130
  5967  002972  26DE               	addwf	postinc2,f,c
  5968  002974  0EFF               	movlw	255
  5969  002976  22DD               	addwfc	postdec2,f,c
  5970  002978  8011               	bsf	frexp@value+2,0,c
  5971  00297A  8211               	bsf	frexp@value+2,1,c
  5972  00297C  8411               	bsf	frexp@value+2,2,c
  5973  00297E  8611               	bsf	frexp@value+2,3,c
  5974  002980  8811               	bsf	frexp@value+2,4,c
  5975  002982  8A11               	bsf	frexp@value+2,5,c
  5976  002984  9C11               	bcf	frexp@value+2,6,c
  5977  002986  9E10               	bcf	frexp@value+1,7,c
  5978  002988  C00F  F00F         	movff	frexp@value,?_frexp
  5979  00298C  C010  F010         	movff	frexp@value+1,?_frexp+1
  5980  002990  C011  F011         	movff	frexp@value+2,?_frexp+2
  5981  002994  0012               	return	
  5982  002996                     __end_of_frexp:
  5983                           	opt stack 0
  5984                           tblptru	equ	0xFF8
  5985                           tblptrh	equ	0xFF7
  5986                           tblptrl	equ	0xFF6
  5987                           tablat	equ	0xFF5
  5988                           intcon	equ	0xFF2
  5989                           intcon2	equ	0xFF1
  5990                           postinc0	equ	0xFEE
  5991                           wreg	equ	0xFE8
  5992                           postdec1	equ	0xFE5
  5993                           fsr1l	equ	0xFE1
  5994                           indf2	equ	0xFDF
  5995                           postinc2	equ	0xFDE
  5996                           postdec2	equ	0xFDD
  5997                           fsr2h	equ	0xFDA
  5998                           fsr2l	equ	0xFD9
  5999                           status	equ	0xFD8
  6000                           
  6001 ;; *************** function ___fttol *****************
  6002 ;; Defined at:
  6003 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  6004 ;; Parameters:    Size  Location     Type
  6005 ;;  f1              3   41[COMRAM] float 
  6006 ;; Auto vars:     Size  Location     Type
  6007 ;;  lval            4   51[COMRAM] unsigned long 
  6008 ;;  exp1            1   55[COMRAM] unsigned char 
  6009 ;;  sign1           1   50[COMRAM] unsigned char 
  6010 ;; Return value:  Size  Location     Type
  6011 ;;                  4   41[COMRAM] long 
  6012 ;; Registers used:
  6013 ;;		wreg, status,2, status,0
  6014 ;; Tracked objects:
  6015 ;;		On entry : 0/0
  6016 ;;		On exit  : 0/0
  6017 ;;		Unchanged: 0/0
  6018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6019 ;;      Params:         4       0       0       0       0       0       0       0       0
  6020 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6021 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6022 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6023 ;;Total ram usage:       15 bytes
  6024 ;; Hardware stack levels used:    1
  6025 ;; Hardware stack levels required when called:    1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_rampa
  6030 ;;		_cuadrada
  6031 ;;		_sen
  6032 ;;		_pow
  6033 ;;		_exp
  6034 ;;		_floor
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text20
  6039  0023C6                     __ptext20:
  6040                           	opt stack 0
  6041  0023C6                     ___fttol:
  6042                           	opt stack 25
  6043                           
  6044                           ;incstack = 0
  6045  0023C6  C02C  F02E         	movff	___fttol@f1+2,??___fttol
  6046  0023CA  6A2F               	clrf	(??___fttol+1)& (0+255),c
  6047  0023CC  6A30               	clrf	(??___fttol+2)& (0+255),c
  6048  0023CE  342B               	rlcf	___fttol@f1+1,w,c
  6049  0023D0  362E               	rlcf	??___fttol& (0+255),f,c
  6050  0023D2  E301               	bnc	u4441
  6051  0023D4  802F               	bsf	(??___fttol+1)& (0+255),0,c
  6052  0023D6                     u4441:
  6053  0023D6  502E               	movf	??___fttol,w,c
  6054  0023D8  6E38               	movwf	___fttol@exp1,c
  6055  0023DA  5038               	movf	___fttol@exp1,w,c
  6056  0023DC  A4D8               	btfss	status,2,c
  6057  0023DE  D009               	goto	l4451
  6058  0023E0  0E00               	movlw	0
  6059  0023E2  6E2A               	movwf	?___fttol,c
  6060  0023E4  0E00               	movlw	0
  6061  0023E6  6E2B               	movwf	?___fttol+1,c
  6062  0023E8  0E00               	movlw	0
  6063  0023EA  6E2C               	movwf	?___fttol+2,c
  6064  0023EC  0E00               	movlw	0
  6065  0023EE  6E2D               	movwf	?___fttol+3,c
  6066  0023F0  0012               	return	
  6067  0023F2                     l4451:
  6068  0023F2  0E17               	movlw	23
  6069  0023F4  6E2E               	movwf	??___fttol& (0+255),c
  6070  0023F6  C02A  F02F         	movff	___fttol@f1,??___fttol+1
  6071  0023FA  C02B  F030         	movff	___fttol@f1+1,??___fttol+2
  6072  0023FE  C02C  F031         	movff	___fttol@f1+2,??___fttol+3
  6073  002402  282E               	incf	??___fttol,w,c
  6074  002404  6E32               	movwf	(??___fttol+4)& (0+255),c
  6075  002406  D004               	goto	u4460
  6076  002408                     u4465:
  6077  002408  90D8               	bcf	status,0,c
  6078  00240A  3231               	rrcf	??___fttol+3,f,c
  6079  00240C  3230               	rrcf	??___fttol+2,f,c
  6080  00240E  322F               	rrcf	??___fttol+1,f,c
  6081  002410                     u4460:
  6082  002410  2E32               	decfsz	(??___fttol+4)& (0+255),f,c
  6083  002412  D7FA               	goto	u4465
  6084  002414  502F               	movf	??___fttol+1,w,c
  6085  002416  6E33               	movwf	___fttol@sign1,c
  6086  002418  8E2B               	bsf	___fttol@f1+1,7,c
  6087  00241A  0EFF               	movlw	255
  6088  00241C  162A               	andwf	___fttol@f1,f,c
  6089  00241E  0EFF               	movlw	255
  6090  002420  162B               	andwf	___fttol@f1+1,f,c
  6091  002422  0E00               	movlw	0
  6092  002424  162C               	andwf	___fttol@f1+2,f,c
  6093  002426  502A               	movf	___fttol@f1,w,c
  6094  002428  6E34               	movwf	___fttol@lval,c
  6095  00242A  502B               	movf	___fttol@f1+1,w,c
  6096  00242C  6E35               	movwf	___fttol@lval+1,c
  6097  00242E  502C               	movf	___fttol@f1+2,w,c
  6098  002430  6E36               	movwf	___fttol@lval+2,c
  6099  002432  6A37               	clrf	___fttol@lval+3,c
  6100  002434  0E8E               	movlw	142
  6101  002436  5E38               	subwf	___fttol@exp1,f,c
  6102  002438  AE38               	btfss	___fttol@exp1,7,c
  6103  00243A  D016               	goto	l4473
  6104  00243C  5038               	movf	___fttol@exp1,w,c
  6105  00243E  0A80               	xorlw	128
  6106  002440  0F8F               	addlw	143
  6107  002442  B0D8               	btfsc	status,0,c
  6108  002444  D009               	goto	l4469
  6109  002446  0E00               	movlw	0
  6110  002448  6E2A               	movwf	?___fttol,c
  6111  00244A  0E00               	movlw	0
  6112  00244C  6E2B               	movwf	?___fttol+1,c
  6113  00244E  0E00               	movlw	0
  6114  002450  6E2C               	movwf	?___fttol+2,c
  6115  002452  0E00               	movlw	0
  6116  002454  6E2D               	movwf	?___fttol+3,c
  6117  002456  0012               	return	
  6118  002458                     l4469:
  6119  002458  90D8               	bcf	status,0,c
  6120  00245A  3237               	rrcf	___fttol@lval+3,f,c
  6121  00245C  3236               	rrcf	___fttol@lval+2,f,c
  6122  00245E  3235               	rrcf	___fttol@lval+1,f,c
  6123  002460  3234               	rrcf	___fttol@lval,f,c
  6124  002462  3E38               	incfsz	___fttol@exp1,f,c
  6125  002464  D7F9               	goto	l4469
  6126  002466  D015               	goto	l4483
  6127  002468                     l4473:
  6128  002468  0E17               	movlw	23
  6129  00246A  6438               	cpfsgt	___fttol@exp1,c
  6130  00246C  D00F               	goto	l4481
  6131  00246E  0E00               	movlw	0
  6132  002470  6E2A               	movwf	?___fttol,c
  6133  002472  0E00               	movlw	0
  6134  002474  6E2B               	movwf	?___fttol+1,c
  6135  002476  0E00               	movlw	0
  6136  002478  6E2C               	movwf	?___fttol+2,c
  6137  00247A  0E00               	movlw	0
  6138  00247C  6E2D               	movwf	?___fttol+3,c
  6139  00247E  0012               	return	
  6140  002480                     l4479:
  6141  002480  90D8               	bcf	status,0,c
  6142  002482  3634               	rlcf	___fttol@lval,f,c
  6143  002484  3635               	rlcf	___fttol@lval+1,f,c
  6144  002486  3636               	rlcf	___fttol@lval+2,f,c
  6145  002488  3637               	rlcf	___fttol@lval+3,f,c
  6146  00248A  0638               	decf	___fttol@exp1,f,c
  6147  00248C                     l4481:
  6148  00248C  5038               	movf	___fttol@exp1,w,c
  6149  00248E  A4D8               	btfss	status,2,c
  6150  002490  D7F7               	goto	l4479
  6151  002492                     l4483:
  6152  002492  5033               	movf	___fttol@sign1,w,c
  6153  002494  B4D8               	btfsc	status,2,c
  6154  002496  D008               	goto	l4487
  6155  002498  1E37               	comf	___fttol@lval+3,f,c
  6156  00249A  1E36               	comf	___fttol@lval+2,f,c
  6157  00249C  1E35               	comf	___fttol@lval+1,f,c
  6158  00249E  6C34               	negf	___fttol@lval,c
  6159  0024A0  0E00               	movlw	0
  6160  0024A2  2235               	addwfc	___fttol@lval+1,f,c
  6161  0024A4  2236               	addwfc	___fttol@lval+2,f,c
  6162  0024A6  2237               	addwfc	___fttol@lval+3,f,c
  6163  0024A8                     l4487:
  6164  0024A8  C034  F02A         	movff	___fttol@lval,?___fttol
  6165  0024AC  C035  F02B         	movff	___fttol@lval+1,?___fttol+1
  6166  0024B0  C036  F02C         	movff	___fttol@lval+2,?___fttol+2
  6167  0024B4  C037  F02D         	movff	___fttol@lval+3,?___fttol+3
  6168  0024B8  0012               	return	
  6169  0024BA                     __end_of___fttol:
  6170                           	opt stack 0
  6171                           tblptru	equ	0xFF8
  6172                           tblptrh	equ	0xFF7
  6173                           tblptrl	equ	0xFF6
  6174                           tablat	equ	0xFF5
  6175                           intcon	equ	0xFF2
  6176                           intcon2	equ	0xFF1
  6177                           postinc0	equ	0xFEE
  6178                           wreg	equ	0xFE8
  6179                           postdec1	equ	0xFE5
  6180                           fsr1l	equ	0xFE1
  6181                           indf2	equ	0xFDF
  6182                           postinc2	equ	0xFDE
  6183                           postdec2	equ	0xFDD
  6184                           fsr2h	equ	0xFDA
  6185                           fsr2l	equ	0xFD9
  6186                           status	equ	0xFD8
  6187                           
  6188 ;; *************** function ___ftge *****************
  6189 ;; Defined at:
  6190 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftge.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;  ff1             3   14[COMRAM] float 
  6193 ;;  ff2             3   17[COMRAM] float 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;		None
  6196 ;; Return value:  Size  Location     Type
  6197 ;;		None               void
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6205 ;;      Params:         6       0       0       0       0       0       0       0       0
  6206 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6207 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6208 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6209 ;;Total ram usage:        9 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    1
  6212 ;; This function calls:
  6213 ;;		Nothing
  6214 ;; This function is called by:
  6215 ;;		_pow
  6216 ;;		_exp
  6217 ;;		_floor
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text21
  6222  002996                     __ptext21:
  6223                           	opt stack 0
  6224  002996                     ___ftge:
  6225                           	opt stack 25
  6226                           
  6227                           ;incstack = 0
  6228  002996  AE11               	btfss	___ftge@ff1+2,7,c
  6229  002998  D016               	goto	l4431
  6230  00299A  C00F  F015         	movff	___ftge@ff1,??___ftge
  6231  00299E  C010  F016         	movff	___ftge@ff1+1,??___ftge+1
  6232  0029A2  C011  F017         	movff	___ftge@ff1+2,??___ftge+2
  6233  0029A6  1E15               	comf	??___ftge,f,c
  6234  0029A8  1E16               	comf	??___ftge+1,f,c
  6235  0029AA  1E17               	comf	??___ftge+2,f,c
  6236  0029AC  2A15               	incf	??___ftge,f,c
  6237  0029AE  0E00               	movlw	0
  6238  0029B0  2216               	addwfc	??___ftge+1,f,c
  6239  0029B2  2217               	addwfc	??___ftge+2,f,c
  6240  0029B4  0E00               	movlw	0
  6241  0029B6  2415               	addwf	??___ftge,w,c
  6242  0029B8  6E0F               	movwf	___ftge@ff1,c
  6243  0029BA  0E00               	movlw	0
  6244  0029BC  2016               	addwfc	??___ftge+1,w,c
  6245  0029BE  6E10               	movwf	___ftge@ff1+1,c
  6246  0029C0  0E80               	movlw	128
  6247  0029C2  2017               	addwfc	??___ftge+2,w,c
  6248  0029C4  6E11               	movwf	___ftge@ff1+2,c
  6249  0029C6                     l4431:
  6250  0029C6  AE14               	btfss	___ftge@ff2+2,7,c
  6251  0029C8  D016               	goto	l4435
  6252  0029CA  C012  F015         	movff	___ftge@ff2,??___ftge
  6253  0029CE  C013  F016         	movff	___ftge@ff2+1,??___ftge+1
  6254  0029D2  C014  F017         	movff	___ftge@ff2+2,??___ftge+2
  6255  0029D6  1E15               	comf	??___ftge,f,c
  6256  0029D8  1E16               	comf	??___ftge+1,f,c
  6257  0029DA  1E17               	comf	??___ftge+2,f,c
  6258  0029DC  2A15               	incf	??___ftge,f,c
  6259  0029DE  0E00               	movlw	0
  6260  0029E0  2216               	addwfc	??___ftge+1,f,c
  6261  0029E2  2217               	addwfc	??___ftge+2,f,c
  6262  0029E4  0E00               	movlw	0
  6263  0029E6  2415               	addwf	??___ftge,w,c
  6264  0029E8  6E12               	movwf	___ftge@ff2,c
  6265  0029EA  0E00               	movlw	0
  6266  0029EC  2016               	addwfc	??___ftge+1,w,c
  6267  0029EE  6E13               	movwf	___ftge@ff2+1,c
  6268  0029F0  0E80               	movlw	128
  6269  0029F2  2017               	addwfc	??___ftge+2,w,c
  6270  0029F4  6E14               	movwf	___ftge@ff2+2,c
  6271  0029F6                     l4435:
  6272  0029F6  0E00               	movlw	0
  6273  0029F8  1A0F               	xorwf	___ftge@ff1,f,c
  6274  0029FA  0E00               	movlw	0
  6275  0029FC  1A10               	xorwf	___ftge@ff1+1,f,c
  6276  0029FE  0E80               	movlw	128
  6277  002A00  1A11               	xorwf	___ftge@ff1+2,f,c
  6278  002A02  0E00               	movlw	0
  6279  002A04  1A12               	xorwf	___ftge@ff2,f,c
  6280  002A06  0E00               	movlw	0
  6281  002A08  1A13               	xorwf	___ftge@ff2+1,f,c
  6282  002A0A  0E80               	movlw	128
  6283  002A0C  1A14               	xorwf	___ftge@ff2+2,f,c
  6284  002A0E  5012               	movf	___ftge@ff2,w,c
  6285  002A10  5C0F               	subwf	___ftge@ff1,w,c
  6286  002A12  5013               	movf	___ftge@ff2+1,w,c
  6287  002A14  5810               	subwfb	___ftge@ff1+1,w,c
  6288  002A16  5014               	movf	___ftge@ff2+2,w,c
  6289  002A18  5811               	subwfb	___ftge@ff1+2,w,c
  6290  002A1A  B0D8               	btfsc	status,0,c
  6291  002A1C  D002               	goto	l4441
  6292  002A1E  90D8               	bcf	status,0,c
  6293  002A20  0012               	return	
  6294  002A22                     l4441:
  6295  002A22  80D8               	bsf	status,0,c
  6296  002A24  0012               	return	
  6297  002A26                     __end_of___ftge:
  6298                           	opt stack 0
  6299                           tblptru	equ	0xFF8
  6300                           tblptrh	equ	0xFF7
  6301                           tblptrl	equ	0xFF6
  6302                           tablat	equ	0xFF5
  6303                           intcon	equ	0xFF2
  6304                           intcon2	equ	0xFF1
  6305                           postinc0	equ	0xFEE
  6306                           wreg	equ	0xFE8
  6307                           postdec1	equ	0xFE5
  6308                           fsr1l	equ	0xFE1
  6309                           indf2	equ	0xFDF
  6310                           postinc2	equ	0xFDE
  6311                           postdec2	equ	0xFDD
  6312                           fsr2h	equ	0xFDA
  6313                           fsr2l	equ	0xFD9
  6314                           status	equ	0xFD8
  6315                           
  6316 ;; *************** function ___altoft *****************
  6317 ;; Defined at:
  6318 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\altoft.c"
  6319 ;; Parameters:    Size  Location     Type
  6320 ;;  c               4   56[COMRAM] long 
  6321 ;; Auto vars:     Size  Location     Type
  6322 ;;  sign            1   65[COMRAM] unsigned char 
  6323 ;;  exp             1   64[COMRAM] unsigned char 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  3   56[COMRAM] float 
  6326 ;; Registers used:
  6327 ;;		wreg, status,2, status,0, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6333 ;;      Params:         4       0       0       0       0       0       0       0       0
  6334 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6335 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6336 ;;      Totals:        10       0       0       0       0       0       0       0       0
  6337 ;;Total ram usage:       10 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    2
  6340 ;; This function calls:
  6341 ;;		___ftpack
  6342 ;; This function is called by:
  6343 ;;		_floor
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text22
  6348  002AAA                     __ptext22:
  6349                           	opt stack 0
  6350  002AAA                     ___altoft:
  6351                           	opt stack 24
  6352                           
  6353                           ;incstack = 0
  6354  002AAA  0E00               	movlw	0
  6355  002AAC  6E42               	movwf	___altoft@sign,c
  6356  002AAE  0E8E               	movlw	142
  6357  002AB0  6E41               	movwf	___altoft@exp,c
  6358  002AB2  AE3C               	btfss	___altoft@c+3,7,c
  6359  002AB4  D011               	goto	l4303
  6360  002AB6  1E3C               	comf	___altoft@c+3,f,c
  6361  002AB8  1E3B               	comf	___altoft@c+2,f,c
  6362  002ABA  1E3A               	comf	___altoft@c+1,f,c
  6363  002ABC  6C39               	negf	___altoft@c,c
  6364  002ABE  0E00               	movlw	0
  6365  002AC0  223A               	addwfc	___altoft@c+1,f,c
  6366  002AC2  223B               	addwfc	___altoft@c+2,f,c
  6367  002AC4  223C               	addwfc	___altoft@c+3,f,c
  6368  002AC6  0E01               	movlw	1
  6369  002AC8  6E42               	movwf	___altoft@sign,c
  6370  002ACA  D006               	goto	l4303
  6371  002ACC                     l4301:
  6372  002ACC  90D8               	bcf	status,0,c
  6373  002ACE  323C               	rrcf	___altoft@c+3,f,c
  6374  002AD0  323B               	rrcf	___altoft@c+2,f,c
  6375  002AD2  323A               	rrcf	___altoft@c+1,f,c
  6376  002AD4  3239               	rrcf	___altoft@c,f,c
  6377  002AD6  2A41               	incf	___altoft@exp,f,c
  6378  002AD8                     l4303:
  6379  002AD8  0E00               	movlw	0
  6380  002ADA  1439               	andwf	___altoft@c,w,c
  6381  002ADC  6E3D               	movwf	??___altoft& (0+255),c
  6382  002ADE  0E00               	movlw	0
  6383  002AE0  143A               	andwf	___altoft@c+1,w,c
  6384  002AE2  6E3E               	movwf	(??___altoft+1)& (0+255),c
  6385  002AE4  0E00               	movlw	0
  6386  002AE6  143B               	andwf	___altoft@c+2,w,c
  6387  002AE8  6E3F               	movwf	(??___altoft+2)& (0+255),c
  6388  002AEA  0EFF               	movlw	255
  6389  002AEC  143C               	andwf	___altoft@c+3,w,c
  6390  002AEE  6E40               	movwf	(??___altoft+3)& (0+255),c
  6391  002AF0  503D               	movf	??___altoft,w,c
  6392  002AF2  103E               	iorwf	??___altoft+1,w,c
  6393  002AF4  103F               	iorwf	??___altoft+2,w,c
  6394  002AF6  1040               	iorwf	??___altoft+3,w,c
  6395  002AF8  A4D8               	btfss	status,2,c
  6396  002AFA  D7E8               	goto	l4301
  6397  002AFC  C039  F00F         	movff	___altoft@c,___ftpack@arg
  6398  002B00  C03A  F010         	movff	___altoft@c+1,___ftpack@arg+1
  6399  002B04  C03B  F011         	movff	___altoft@c+2,___ftpack@arg+2
  6400  002B08  C041  F012         	movff	___altoft@exp,___ftpack@exp
  6401  002B0C  C042  F013         	movff	___altoft@sign,___ftpack@sign
  6402  002B10  EC2C  F014         	call	___ftpack	;wreg free
  6403  002B14  C00F  F039         	movff	?___ftpack,?___altoft
  6404  002B18  C010  F03A         	movff	?___ftpack+1,?___altoft+1
  6405  002B1C  C011  F03B         	movff	?___ftpack+2,?___altoft+2
  6406  002B20  0012               	return	
  6407  002B22                     __end_of___altoft:
  6408                           	opt stack 0
  6409                           tblptru	equ	0xFF8
  6410                           tblptrh	equ	0xFF7
  6411                           tblptrl	equ	0xFF6
  6412                           tablat	equ	0xFF5
  6413                           intcon	equ	0xFF2
  6414                           intcon2	equ	0xFF1
  6415                           postinc0	equ	0xFEE
  6416                           wreg	equ	0xFE8
  6417                           postdec1	equ	0xFE5
  6418                           fsr1l	equ	0xFE1
  6419                           indf2	equ	0xFDF
  6420                           postinc2	equ	0xFDE
  6421                           postdec2	equ	0xFDD
  6422                           fsr2h	equ	0xFDA
  6423                           fsr2l	equ	0xFD9
  6424                           status	equ	0xFD8
  6425                           
  6426 ;; *************** function _eval_poly *****************
  6427 ;; Defined at:
  6428 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\evalpoly.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;  x               3   53[COMRAM] float 
  6431 ;;  d               2   56[COMRAM] PTR const 
  6432 ;;		 -> log@coeff(27), exp@coeff(30), 
  6433 ;;  n               2   58[COMRAM] int 
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;  res             3   62[COMRAM] int 
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  3   53[COMRAM] int 
  6438 ;; Registers used:
  6439 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6445 ;;      Params:         7       0       0       0       0       0       0       0       0
  6446 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6447 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6448 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6449 ;;Total ram usage:       12 bytes
  6450 ;; Hardware stack levels used:    1
  6451 ;; Hardware stack levels required when called:    3
  6452 ;; This function calls:
  6453 ;;		___ftadd
  6454 ;;		___ftmul
  6455 ;;		___wmul
  6456 ;; This function is called by:
  6457 ;;		_exp
  6458 ;;		_log
  6459 ;; This function uses a non-reentrant model
  6460 ;;
  6461                           
  6462                           	psect	text23
  6463  002786                     __ptext23:
  6464                           	opt stack 0
  6465  002786                     _eval_poly:
  6466                           	opt stack 24
  6467                           
  6468                           ;incstack = 0
  6469  002786  C03B  F00F         	movff	eval_poly@n,___wmul@multiplier
  6470  00278A  C03C  F010         	movff	eval_poly@n+1,___wmul@multiplier+1
  6471  00278E  0E00               	movlw	0
  6472  002790  6E12               	movwf	___wmul@multiplicand+1,c
  6473  002792  0E03               	movlw	3
  6474  002794  6E11               	movwf	___wmul@multiplicand,c
  6475  002796  ECAC  F016         	call	___wmul	;wreg free
  6476  00279A  C039  F03D         	movff	eval_poly@d,??_eval_poly
  6477  00279E  C03A  F03E         	movff	eval_poly@d+1,??_eval_poly+1
  6478  0027A2  500F               	movf	?___wmul,w,c
  6479  0027A4  263D               	addwf	??_eval_poly,f,c
  6480  0027A6  5010               	movf	?___wmul+1,w,c
  6481  0027A8  223E               	addwfc	??_eval_poly+1,f,c
  6482  0027AA  C03D  FFF6         	movff	??_eval_poly,tblptrl
  6483  0027AE  C03E  FFF7         	movff	??_eval_poly+1,tblptrh
  6484  0027B2                     	if	0	;tblptru may be non-zero
  6485  0027B2                     	endif
  6486  0027B2                     	if	0	;tblptru may be non-zero
  6487  0027B2                     	endif
  6488  0027B2  0009               	tblrd		*+
  6489  0027B4  CFF5 F03F          	movff	tablat,eval_poly@res
  6490  0027B8  0009               	tblrd		*+
  6491  0027BA  CFF5 F040          	movff	tablat,eval_poly@res+1
  6492  0027BE  000A               	tblrd		*-
  6493  0027C0  CFF5 F041          	movff	tablat,eval_poly@res+2
  6494  0027C4  D03E               	goto	l4605
  6495  0027C6                     l4603:
  6496  0027C6  C03F  F01E         	movff	eval_poly@res,___ftmul@f2
  6497  0027CA  C040  F01F         	movff	eval_poly@res+1,___ftmul@f2+1
  6498  0027CE  C041  F020         	movff	eval_poly@res+2,___ftmul@f2+2
  6499  0027D2  C036  F01B         	movff	eval_poly@x,___ftmul@f1
  6500  0027D6  C037  F01C         	movff	eval_poly@x+1,___ftmul@f1+1
  6501  0027DA  C038  F01D         	movff	eval_poly@x+2,___ftmul@f1+2
  6502  0027DE  EC5D  F012         	call	___ftmul	;wreg free
  6503  0027E2  C01B  F02A         	movff	?___ftmul,___ftadd@f1
  6504  0027E6  C01C  F02B         	movff	?___ftmul+1,___ftadd@f1+1
  6505  0027EA  C01D  F02C         	movff	?___ftmul+2,___ftadd@f1+2
  6506  0027EE  0E00               	movlw	0
  6507  0027F0  6E12               	movwf	___wmul@multiplicand+1,c
  6508  0027F2  0E03               	movlw	3
  6509  0027F4  6E11               	movwf	___wmul@multiplicand,c
  6510  0027F6  063B               	decf	eval_poly@n,f,c
  6511  0027F8  A0D8               	btfss	status,0,c
  6512  0027FA  063C               	decf	eval_poly@n+1,f,c
  6513  0027FC  C03B  F00F         	movff	eval_poly@n,___wmul@multiplier
  6514  002800  C03C  F010         	movff	eval_poly@n+1,___wmul@multiplier+1
  6515  002804  ECAC  F016         	call	___wmul	;wreg free
  6516  002808  C039  F03D         	movff	eval_poly@d,??_eval_poly
  6517  00280C  C03A  F03E         	movff	eval_poly@d+1,??_eval_poly+1
  6518  002810  500F               	movf	?___wmul,w,c
  6519  002812  263D               	addwf	??_eval_poly,f,c
  6520  002814  5010               	movf	?___wmul+1,w,c
  6521  002816  223E               	addwfc	??_eval_poly+1,f,c
  6522  002818  C03D  FFF6         	movff	??_eval_poly,tblptrl
  6523  00281C  C03E  FFF7         	movff	??_eval_poly+1,tblptrh
  6524  002820                     	if	0	;tblptru may be non-zero
  6525  002820                     	endif
  6526  002820                     	if	0	;tblptru may be non-zero
  6527  002820                     	endif
  6528  002820  0009               	tblrd		*+
  6529  002822  CFF5 F02D          	movff	tablat,___ftadd@f2
  6530  002826  0009               	tblrd		*+
  6531  002828  CFF5 F02E          	movff	tablat,___ftadd@f2+1
  6532  00282C  000A               	tblrd		*-
  6533  00282E  CFF5 F02F          	movff	tablat,___ftadd@f2+2
  6534  002832  EC6D  F00E         	call	___ftadd	;wreg free
  6535  002836  C02A  F03F         	movff	?___ftadd,eval_poly@res
  6536  00283A  C02B  F040         	movff	?___ftadd+1,eval_poly@res+1
  6537  00283E  C02C  F041         	movff	?___ftadd+2,eval_poly@res+2
  6538  002842                     l4605:
  6539  002842  503B               	movf	eval_poly@n,w,c
  6540  002844  103C               	iorwf	eval_poly@n+1,w,c
  6541  002846  A4D8               	btfss	status,2,c
  6542  002848  D7BE               	goto	l4603
  6543  00284A  C03F  F036         	movff	eval_poly@res,?_eval_poly
  6544  00284E  C040  F037         	movff	eval_poly@res+1,?_eval_poly+1
  6545  002852  C041  F038         	movff	eval_poly@res+2,?_eval_poly+2
  6546  002856  0012               	return		;funcret
  6547  002858                     __end_of_eval_poly:
  6548                           	opt stack 0
  6549                           tblptru	equ	0xFF8
  6550                           tblptrh	equ	0xFF7
  6551                           tblptrl	equ	0xFF6
  6552                           tablat	equ	0xFF5
  6553                           intcon	equ	0xFF2
  6554                           intcon2	equ	0xFF1
  6555                           postinc0	equ	0xFEE
  6556                           wreg	equ	0xFE8
  6557                           postdec1	equ	0xFE5
  6558                           fsr1l	equ	0xFE1
  6559                           indf2	equ	0xFDF
  6560                           postinc2	equ	0xFDE
  6561                           postdec2	equ	0xFDD
  6562                           fsr2h	equ	0xFDA
  6563                           fsr2l	equ	0xFD9
  6564                           status	equ	0xFD8
  6565                           
  6566 ;; *************** function ___wmul *****************
  6567 ;; Defined at:
  6568 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  multiplier      2   14[COMRAM] unsigned int 
  6571 ;;  multiplicand    2   16[COMRAM] unsigned int 
  6572 ;; Auto vars:     Size  Location     Type
  6573 ;;  product         2   18[COMRAM] unsigned int 
  6574 ;; Return value:  Size  Location     Type
  6575 ;;                  2   14[COMRAM] unsigned int 
  6576 ;; Registers used:
  6577 ;;		wreg, status,2, status,0, prodl, prodh
  6578 ;; Tracked objects:
  6579 ;;		On entry : 0/0
  6580 ;;		On exit  : 0/0
  6581 ;;		Unchanged: 0/0
  6582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6583 ;;      Params:         4       0       0       0       0       0       0       0       0
  6584 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6586 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6587 ;;Total ram usage:        6 bytes
  6588 ;; Hardware stack levels used:    1
  6589 ;; Hardware stack levels required when called:    1
  6590 ;; This function calls:
  6591 ;;		Nothing
  6592 ;; This function is called by:
  6593 ;;		_ingresar_frecuencia
  6594 ;;		_eval_poly
  6595 ;; This function uses a non-reentrant model
  6596 ;;
  6597                           
  6598                           	psect	text24
  6599  002D58                     __ptext24:
  6600                           	opt stack 0
  6601  002D58                     ___wmul:
  6602                           	opt stack 25
  6603                           
  6604                           ;incstack = 0
  6605  002D58  500F               	movf	___wmul@multiplier,w,c
  6606  002D5A  0211               	mulwf	___wmul@multiplicand,c
  6607  002D5C  CFF3 F013          	movff	prodl,___wmul@product
  6608  002D60  CFF4 F014          	movff	prodh,___wmul@product+1
  6609  002D64  500F               	movf	___wmul@multiplier,w,c
  6610  002D66  0212               	mulwf	___wmul@multiplicand+1,c
  6611  002D68  50F3               	movf	prodl,w,c
  6612  002D6A  2614               	addwf	___wmul@product+1,f,c
  6613  002D6C  5010               	movf	___wmul@multiplier+1,w,c
  6614  002D6E  0211               	mulwf	___wmul@multiplicand,c
  6615  002D70  50F3               	movf	prodl,w,c
  6616  002D72  2614               	addwf	___wmul@product+1,f,c
  6617  002D74  C013  F00F         	movff	___wmul@product,?___wmul
  6618  002D78  C014  F010         	movff	___wmul@product+1,?___wmul+1
  6619  002D7C  0012               	return	
  6620  002D7E                     __end_of___wmul:
  6621                           	opt stack 0
  6622                           tblptru	equ	0xFF8
  6623                           tblptrh	equ	0xFF7
  6624                           tblptrl	equ	0xFF6
  6625                           tablat	equ	0xFF5
  6626                           prodh	equ	0xFF4
  6627                           prodl	equ	0xFF3
  6628                           intcon	equ	0xFF2
  6629                           intcon2	equ	0xFF1
  6630                           postinc0	equ	0xFEE
  6631                           wreg	equ	0xFE8
  6632                           postdec1	equ	0xFE5
  6633                           fsr1l	equ	0xFE1
  6634                           indf2	equ	0xFDF
  6635                           postinc2	equ	0xFDE
  6636                           postdec2	equ	0xFDD
  6637                           fsr2h	equ	0xFDA
  6638                           fsr2l	equ	0xFD9
  6639                           status	equ	0xFD8
  6640                           
  6641 ;; *************** function ___ftmul *****************
  6642 ;; Defined at:
  6643 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  6644 ;; Parameters:    Size  Location     Type
  6645 ;;  f1              3   26[COMRAM] float 
  6646 ;;  f2              3   29[COMRAM] float 
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;  f3_as_produc    3   36[COMRAM] unsigned um
  6649 ;;  sign            1   40[COMRAM] unsigned char 
  6650 ;;  cntr            1   39[COMRAM] unsigned char 
  6651 ;;  exp             1   35[COMRAM] unsigned char 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  3   26[COMRAM] float 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2, status,0, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6661 ;;      Params:         6       0       0       0       0       0       0       0       0
  6662 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6663 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6664 ;;      Totals:        15       0       0       0       0       0       0       0       0
  6665 ;;Total ram usage:       15 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    2
  6668 ;; This function calls:
  6669 ;;		___ftpack
  6670 ;; This function is called by:
  6671 ;;		_rampa
  6672 ;;		_sen
  6673 ;;		_pow
  6674 ;;		_exp
  6675 ;;		_log
  6676 ;;		_eval_poly
  6677 ;; This function uses a non-reentrant model
  6678 ;;
  6679                           
  6680                           	psect	text25
  6681  0024BA                     __ptext25:
  6682                           	opt stack 0
  6683  0024BA                     ___ftmul:
  6684                           	opt stack 24
  6685                           
  6686                           ;incstack = 0
  6687  0024BA  C01D  F021         	movff	___ftmul@f1+2,??___ftmul
  6688  0024BE  6A22               	clrf	(??___ftmul+1)& (0+255),c
  6689  0024C0  6A23               	clrf	(??___ftmul+2)& (0+255),c
  6690  0024C2  341C               	rlcf	___ftmul@f1+1,w,c
  6691  0024C4  3621               	rlcf	??___ftmul& (0+255),f,c
  6692  0024C6  E301               	bnc	u4351
  6693  0024C8  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  6694  0024CA                     u4351:
  6695  0024CA  5021               	movf	??___ftmul,w,c
  6696  0024CC  6E24               	movwf	___ftmul@exp,c
  6697  0024CE  5024               	movf	___ftmul@exp,w,c
  6698  0024D0  A4D8               	btfss	status,2,c
  6699  0024D2  D007               	goto	l4385
  6700  0024D4  0E00               	movlw	0
  6701  0024D6  6E1B               	movwf	?___ftmul,c
  6702  0024D8  0E00               	movlw	0
  6703  0024DA  6E1C               	movwf	?___ftmul+1,c
  6704  0024DC  0E00               	movlw	0
  6705  0024DE  6E1D               	movwf	?___ftmul+2,c
  6706  0024E0  0012               	return	
  6707  0024E2                     l4385:
  6708  0024E2  C020  F021         	movff	___ftmul@f2+2,??___ftmul
  6709  0024E6  6A22               	clrf	(??___ftmul+1)& (0+255),c
  6710  0024E8  6A23               	clrf	(??___ftmul+2)& (0+255),c
  6711  0024EA  341F               	rlcf	___ftmul@f2+1,w,c
  6712  0024EC  3621               	rlcf	??___ftmul& (0+255),f,c
  6713  0024EE  E301               	bnc	u4371
  6714  0024F0  8022               	bsf	(??___ftmul+1)& (0+255),0,c
  6715  0024F2                     u4371:
  6716  0024F2  5021               	movf	??___ftmul,w,c
  6717  0024F4  6E29               	movwf	___ftmul@sign,c
  6718  0024F6  5029               	movf	___ftmul@sign,w,c
  6719  0024F8  A4D8               	btfss	status,2,c
  6720  0024FA  D007               	goto	l4391
  6721  0024FC  0E00               	movlw	0
  6722  0024FE  6E1B               	movwf	?___ftmul,c
  6723  002500  0E00               	movlw	0
  6724  002502  6E1C               	movwf	?___ftmul+1,c
  6725  002504  0E00               	movlw	0
  6726  002506  6E1D               	movwf	?___ftmul+2,c
  6727  002508  0012               	return	
  6728  00250A                     l4391:
  6729  00250A  5029               	movf	___ftmul@sign,w,c
  6730  00250C  0F7B               	addlw	123
  6731  00250E  2624               	addwf	___ftmul@exp,f,c
  6732  002510  C01D  F029         	movff	___ftmul@f1+2,___ftmul@sign
  6733  002514  5020               	movf	___ftmul@f2+2,w,c
  6734  002516  1A29               	xorwf	___ftmul@sign,f,c
  6735  002518  0E80               	movlw	128
  6736  00251A  1629               	andwf	___ftmul@sign,f,c
  6737  00251C  8E1C               	bsf	___ftmul@f1+1,7,c
  6738  00251E  8E1F               	bsf	___ftmul@f2+1,7,c
  6739  002520  0EFF               	movlw	255
  6740  002522  161E               	andwf	___ftmul@f2,f,c
  6741  002524  0EFF               	movlw	255
  6742  002526  161F               	andwf	___ftmul@f2+1,f,c
  6743  002528  0E00               	movlw	0
  6744  00252A  1620               	andwf	___ftmul@f2+2,f,c
  6745  00252C  0E00               	movlw	0
  6746  00252E  6E25               	movwf	___ftmul@f3_as_product,c
  6747  002530  0E00               	movlw	0
  6748  002532  6E26               	movwf	___ftmul@f3_as_product+1,c
  6749  002534  0E00               	movlw	0
  6750  002536  6E27               	movwf	___ftmul@f3_as_product+2,c
  6751  002538  0E07               	movlw	7
  6752  00253A  6E28               	movwf	___ftmul@cntr,c
  6753  00253C                     l4405:
  6754  00253C  A01B               	btfss	___ftmul@f1,0,c
  6755  00253E  D006               	goto	l4409
  6756  002540  501E               	movf	___ftmul@f2,w,c
  6757  002542  2625               	addwf	___ftmul@f3_as_product,f,c
  6758  002544  501F               	movf	___ftmul@f2+1,w,c
  6759  002546  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  6760  002548  5020               	movf	___ftmul@f2+2,w,c
  6761  00254A  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  6762  00254C                     l4409:
  6763  00254C  90D8               	bcf	status,0,c
  6764  00254E  321D               	rrcf	___ftmul@f1+2,f,c
  6765  002550  321C               	rrcf	___ftmul@f1+1,f,c
  6766  002552  321B               	rrcf	___ftmul@f1,f,c
  6767  002554  90D8               	bcf	status,0,c
  6768  002556  361E               	rlcf	___ftmul@f2,f,c
  6769  002558  361F               	rlcf	___ftmul@f2+1,f,c
  6770  00255A  3620               	rlcf	___ftmul@f2+2,f,c
  6771  00255C  2E28               	decfsz	___ftmul@cntr,f,c
  6772  00255E  D7EE               	goto	l4405
  6773  002560  0E09               	movlw	9
  6774  002562  6E28               	movwf	___ftmul@cntr,c
  6775  002564                     l4415:
  6776  002564  A01B               	btfss	___ftmul@f1,0,c
  6777  002566  D006               	goto	l4419
  6778  002568  501E               	movf	___ftmul@f2,w,c
  6779  00256A  2625               	addwf	___ftmul@f3_as_product,f,c
  6780  00256C  501F               	movf	___ftmul@f2+1,w,c
  6781  00256E  2226               	addwfc	___ftmul@f3_as_product+1,f,c
  6782  002570  5020               	movf	___ftmul@f2+2,w,c
  6783  002572  2227               	addwfc	___ftmul@f3_as_product+2,f,c
  6784  002574                     l4419:
  6785  002574  90D8               	bcf	status,0,c
  6786  002576  321D               	rrcf	___ftmul@f1+2,f,c
  6787  002578  321C               	rrcf	___ftmul@f1+1,f,c
  6788  00257A  321B               	rrcf	___ftmul@f1,f,c
  6789  00257C  90D8               	bcf	status,0,c
  6790  00257E  3227               	rrcf	___ftmul@f3_as_product+2,f,c
  6791  002580  3226               	rrcf	___ftmul@f3_as_product+1,f,c
  6792  002582  3225               	rrcf	___ftmul@f3_as_product,f,c
  6793  002584  2E28               	decfsz	___ftmul@cntr,f,c
  6794  002586  D7EE               	goto	l4415
  6795  002588  C025  F00F         	movff	___ftmul@f3_as_product,___ftpack@arg
  6796  00258C  C026  F010         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6797  002590  C027  F011         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6798  002594  C024  F012         	movff	___ftmul@exp,___ftpack@exp
  6799  002598  C029  F013         	movff	___ftmul@sign,___ftpack@sign
  6800  00259C  EC2C  F014         	call	___ftpack	;wreg free
  6801  0025A0  C00F  F01B         	movff	?___ftpack,?___ftmul
  6802  0025A4  C010  F01C         	movff	?___ftpack+1,?___ftmul+1
  6803  0025A8  C011  F01D         	movff	?___ftpack+2,?___ftmul+2
  6804  0025AC  0012               	return	
  6805  0025AE                     __end_of___ftmul:
  6806                           	opt stack 0
  6807                           tblptru	equ	0xFF8
  6808                           tblptrh	equ	0xFF7
  6809                           tblptrl	equ	0xFF6
  6810                           tablat	equ	0xFF5
  6811                           prodh	equ	0xFF4
  6812                           prodl	equ	0xFF3
  6813                           intcon	equ	0xFF2
  6814                           intcon2	equ	0xFF1
  6815                           postinc0	equ	0xFEE
  6816                           wreg	equ	0xFE8
  6817                           postdec1	equ	0xFE5
  6818                           fsr1l	equ	0xFE1
  6819                           indf2	equ	0xFDF
  6820                           postinc2	equ	0xFDE
  6821                           postdec2	equ	0xFDD
  6822                           fsr2h	equ	0xFDA
  6823                           fsr2l	equ	0xFD9
  6824                           status	equ	0xFD8
  6825                           
  6826 ;; *************** function ___ftsub *****************
  6827 ;; Defined at:
  6828 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftsub.c"
  6829 ;; Parameters:    Size  Location     Type
  6830 ;;  f1              3   53[COMRAM] float 
  6831 ;;  f2              3   56[COMRAM] float 
  6832 ;; Auto vars:     Size  Location     Type
  6833 ;;		None
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  3   53[COMRAM] float 
  6836 ;; Registers used:
  6837 ;;		wreg, status,2, status,0, cstack
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6843 ;;      Params:         6       0       0       0       0       0       0       0       0
  6844 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6846 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6847 ;;Total ram usage:        6 bytes
  6848 ;; Hardware stack levels used:    1
  6849 ;; Hardware stack levels required when called:    3
  6850 ;; This function calls:
  6851 ;;		___ftadd
  6852 ;; This function is called by:
  6853 ;;		_exp
  6854 ;; This function uses a non-reentrant model
  6855 ;;
  6856                           
  6857                           	psect	text26
  6858  002C20                     __ptext26:
  6859                           	opt stack 0
  6860  002C20                     ___ftsub:
  6861                           	opt stack 24
  6862                           
  6863                           ;incstack = 0
  6864  002C20  5039               	movf	___ftsub@f2,w,c
  6865  002C22  103A               	iorwf	___ftsub@f2+1,w,c
  6866  002C24  103B               	iorwf	___ftsub@f2+2,w,c
  6867  002C26  B4D8               	btfsc	status,2,c
  6868  002C28  D006               	goto	l4561
  6869  002C2A  0E00               	movlw	0
  6870  002C2C  1A39               	xorwf	___ftsub@f2,f,c
  6871  002C2E  0E00               	movlw	0
  6872  002C30  1A3A               	xorwf	___ftsub@f2+1,f,c
  6873  002C32  0E80               	movlw	128
  6874  002C34  1A3B               	xorwf	___ftsub@f2+2,f,c
  6875  002C36                     l4561:
  6876  002C36  C036  F02A         	movff	___ftsub@f1,___ftadd@f1
  6877  002C3A  C037  F02B         	movff	___ftsub@f1+1,___ftadd@f1+1
  6878  002C3E  C038  F02C         	movff	___ftsub@f1+2,___ftadd@f1+2
  6879  002C42  C039  F02D         	movff	___ftsub@f2,___ftadd@f2
  6880  002C46  C03A  F02E         	movff	___ftsub@f2+1,___ftadd@f2+1
  6881  002C4A  C03B  F02F         	movff	___ftsub@f2+2,___ftadd@f2+2
  6882  002C4E  EC6D  F00E         	call	___ftadd	;wreg free
  6883  002C52  C02A  F036         	movff	?___ftadd,?___ftsub
  6884  002C56  C02B  F037         	movff	?___ftadd+1,?___ftsub+1
  6885  002C5A  C02C  F038         	movff	?___ftadd+2,?___ftsub+2
  6886  002C5E  0012               	return	
  6887  002C60                     __end_of___ftsub:
  6888                           	opt stack 0
  6889                           tblptru	equ	0xFF8
  6890                           tblptrh	equ	0xFF7
  6891                           tblptrl	equ	0xFF6
  6892                           tablat	equ	0xFF5
  6893                           prodh	equ	0xFF4
  6894                           prodl	equ	0xFF3
  6895                           intcon	equ	0xFF2
  6896                           intcon2	equ	0xFF1
  6897                           postinc0	equ	0xFEE
  6898                           wreg	equ	0xFE8
  6899                           postdec1	equ	0xFE5
  6900                           fsr1l	equ	0xFE1
  6901                           indf2	equ	0xFDF
  6902                           postinc2	equ	0xFDE
  6903                           postdec2	equ	0xFDD
  6904                           fsr2h	equ	0xFDA
  6905                           fsr2l	equ	0xFD9
  6906                           status	equ	0xFD8
  6907                           
  6908 ;; *************** function ___ftadd *****************
  6909 ;; Defined at:
  6910 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftadd.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  f1              3   41[COMRAM] float 
  6913 ;;  f2              3   44[COMRAM] float 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  exp1            1   52[COMRAM] unsigned char 
  6916 ;;  exp2            1   51[COMRAM] unsigned char 
  6917 ;;  sign            1   50[COMRAM] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  3   41[COMRAM] float 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6927 ;;      Params:         6       0       0       0       0       0       0       0       0
  6928 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6929 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6930 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6931 ;;Total ram usage:       12 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:    2
  6934 ;; This function calls:
  6935 ;;		___ftpack
  6936 ;; This function is called by:
  6937 ;;		___ftsub
  6938 ;;		_floor
  6939 ;;		_log
  6940 ;;		_eval_poly
  6941 ;; This function uses a non-reentrant model
  6942 ;;
  6943                           
  6944                           	psect	text27
  6945  001CDA                     __ptext27:
  6946                           	opt stack 0
  6947  001CDA                     ___ftadd:
  6948                           	opt stack 24
  6949                           
  6950                           ;incstack = 0
  6951  001CDA  C02C  F030         	movff	___ftadd@f1+2,??___ftadd
  6952  001CDE  6A31               	clrf	(??___ftadd+1)& (0+255),c
  6953  001CE0  6A32               	clrf	(??___ftadd+2)& (0+255),c
  6954  001CE2  342B               	rlcf	___ftadd@f1+1,w,c
  6955  001CE4  3630               	rlcf	??___ftadd& (0+255),f,c
  6956  001CE6  E301               	bnc	u4141
  6957  001CE8  8031               	bsf	(??___ftadd+1)& (0+255),0,c
  6958  001CEA                     u4141:
  6959  001CEA  5030               	movf	??___ftadd,w,c
  6960  001CEC  6E35               	movwf	___ftadd@exp1,c
  6961  001CEE  C02F  F030         	movff	___ftadd@f2+2,??___ftadd
  6962  001CF2  6A31               	clrf	(??___ftadd+1)& (0+255),c
  6963  001CF4  6A32               	clrf	(??___ftadd+2)& (0+255),c
  6964  001CF6  342E               	rlcf	___ftadd@f2+1,w,c
  6965  001CF8  3630               	rlcf	??___ftadd& (0+255),f,c
  6966  001CFA  E301               	bnc	u4151
  6967  001CFC  8031               	bsf	(??___ftadd+1)& (0+255),0,c
  6968  001CFE                     u4151:
  6969  001CFE  5030               	movf	??___ftadd,w,c
  6970  001D00  6E34               	movwf	___ftadd@exp2,c
  6971  001D02  5035               	movf	___ftadd@exp1,w,c
  6972  001D04  B4D8               	btfsc	status,2,c
  6973  001D06  D00B               	goto	l660
  6974  001D08  5034               	movf	___ftadd@exp2,w,c
  6975  001D0A  5C35               	subwf	___ftadd@exp1,w,c
  6976  001D0C  B0D8               	btfsc	status,0,c
  6977  001D0E  D00E               	goto	l4317
  6978  001D10  5035               	movf	___ftadd@exp1,w,c
  6979  001D12  0800               	sublw	0
  6980  001D14  2434               	addwf	___ftadd@exp2,w,c
  6981  001D16  6E30               	movwf	??___ftadd& (0+255),c
  6982  001D18  0E18               	movlw	24
  6983  001D1A  6430               	cpfsgt	??___ftadd,c
  6984  001D1C  D007               	goto	l4317
  6985  001D1E                     l660:
  6986  001D1E  C02D  F02A         	movff	___ftadd@f2,?___ftadd
  6987  001D22  C02E  F02B         	movff	___ftadd@f2+1,?___ftadd+1
  6988  001D26  C02F  F02C         	movff	___ftadd@f2+2,?___ftadd+2
  6989  001D2A  0012               	return	
  6990  001D2C                     l4317:
  6991  001D2C  5034               	movf	___ftadd@exp2,w,c
  6992  001D2E  B4D8               	btfsc	status,2,c
  6993  001D30  D00B               	goto	l664
  6994  001D32  5035               	movf	___ftadd@exp1,w,c
  6995  001D34  5C34               	subwf	___ftadd@exp2,w,c
  6996  001D36  B0D8               	btfsc	status,0,c
  6997  001D38  D00E               	goto	l4323
  6998  001D3A  5034               	movf	___ftadd@exp2,w,c
  6999  001D3C  0800               	sublw	0
  7000  001D3E  2435               	addwf	___ftadd@exp1,w,c
  7001  001D40  6E30               	movwf	??___ftadd& (0+255),c
  7002  001D42  0E18               	movlw	24
  7003  001D44  6430               	cpfsgt	??___ftadd,c
  7004  001D46  D007               	goto	l4323
  7005  001D48                     l664:
  7006  001D48  C02A  F02A         	movff	___ftadd@f1,?___ftadd
  7007  001D4C  C02B  F02B         	movff	___ftadd@f1+1,?___ftadd+1
  7008  001D50  C02C  F02C         	movff	___ftadd@f1+2,?___ftadd+2
  7009  001D54  0012               	return	
  7010  001D56                     l4323:
  7011  001D56  0E06               	movlw	6
  7012  001D58  6E33               	movwf	___ftadd@sign,c
  7013  001D5A  BE2C               	btfsc	___ftadd@f1+2,7,c
  7014  001D5C  8E33               	bsf	___ftadd@sign,7,c
  7015  001D5E  BE2F               	btfsc	___ftadd@f2+2,7,c
  7016  001D60  8C33               	bsf	___ftadd@sign,6,c
  7017  001D62  8E2B               	bsf	___ftadd@f1+1,7,c
  7018  001D64  0EFF               	movlw	255
  7019  001D66  162A               	andwf	___ftadd@f1,f,c
  7020  001D68  0EFF               	movlw	255
  7021  001D6A  162B               	andwf	___ftadd@f1+1,f,c
  7022  001D6C  0E00               	movlw	0
  7023  001D6E  162C               	andwf	___ftadd@f1+2,f,c
  7024  001D70  8E2E               	bsf	___ftadd@f2+1,7,c
  7025  001D72  0EFF               	movlw	255
  7026  001D74  162D               	andwf	___ftadd@f2,f,c
  7027  001D76  0EFF               	movlw	255
  7028  001D78  162E               	andwf	___ftadd@f2+1,f,c
  7029  001D7A  0E00               	movlw	0
  7030  001D7C  162F               	andwf	___ftadd@f2+2,f,c
  7031  001D7E  5034               	movf	___ftadd@exp2,w,c
  7032  001D80  5C35               	subwf	___ftadd@exp1,w,c
  7033  001D82  B0D8               	btfsc	status,0,c
  7034  001D84  D01B               	goto	l4349
  7035  001D86                     l4339:
  7036  001D86  90D8               	bcf	status,0,c
  7037  001D88  362D               	rlcf	___ftadd@f2,f,c
  7038  001D8A  362E               	rlcf	___ftadd@f2+1,f,c
  7039  001D8C  362F               	rlcf	___ftadd@f2+2,f,c
  7040  001D8E  0634               	decf	___ftadd@exp2,f,c
  7041  001D90  5035               	movf	___ftadd@exp1,w,c
  7042  001D92  1834               	xorwf	___ftadd@exp2,w,c
  7043  001D94  B4D8               	btfsc	status,2,c
  7044  001D96  D00D               	goto	l4347
  7045  001D98  0633               	decf	___ftadd@sign,f,c
  7046  001D9A  C033  F030         	movff	___ftadd@sign,??___ftadd
  7047  001D9E  0E07               	movlw	7
  7048  001DA0  1630               	andwf	??___ftadd,f,c
  7049  001DA2  B4D8               	btfsc	status,2,c
  7050  001DA4  D006               	goto	l4347
  7051  001DA6  D7EF               	goto	l4339
  7052  001DA8                     l4345:
  7053  001DA8  90D8               	bcf	status,0,c
  7054  001DAA  322C               	rrcf	___ftadd@f1+2,f,c
  7055  001DAC  322B               	rrcf	___ftadd@f1+1,f,c
  7056  001DAE  322A               	rrcf	___ftadd@f1,f,c
  7057  001DB0  2A35               	incf	___ftadd@exp1,f,c
  7058  001DB2                     l4347:
  7059  001DB2  5034               	movf	___ftadd@exp2,w,c
  7060  001DB4  1835               	xorwf	___ftadd@exp1,w,c
  7061  001DB6  B4D8               	btfsc	status,2,c
  7062  001DB8  D01F               	goto	l675
  7063  001DBA  D7F6               	goto	l4345
  7064  001DBC                     l4349:
  7065  001DBC  5035               	movf	___ftadd@exp1,w,c
  7066  001DBE  5C34               	subwf	___ftadd@exp2,w,c
  7067  001DC0  B0D8               	btfsc	status,0,c
  7068  001DC2  D01A               	goto	l675
  7069  001DC4                     l4351:
  7070  001DC4  90D8               	bcf	status,0,c
  7071  001DC6  362A               	rlcf	___ftadd@f1,f,c
  7072  001DC8  362B               	rlcf	___ftadd@f1+1,f,c
  7073  001DCA  362C               	rlcf	___ftadd@f1+2,f,c
  7074  001DCC  0635               	decf	___ftadd@exp1,f,c
  7075  001DCE  5035               	movf	___ftadd@exp1,w,c
  7076  001DD0  1834               	xorwf	___ftadd@exp2,w,c
  7077  001DD2  B4D8               	btfsc	status,2,c
  7078  001DD4  D00D               	goto	l4359
  7079  001DD6  0633               	decf	___ftadd@sign,f,c
  7080  001DD8  C033  F030         	movff	___ftadd@sign,??___ftadd
  7081  001DDC  0E07               	movlw	7
  7082  001DDE  1630               	andwf	??___ftadd,f,c
  7083  001DE0  B4D8               	btfsc	status,2,c
  7084  001DE2  D006               	goto	l4359
  7085  001DE4  D7EF               	goto	l4351
  7086  001DE6                     l4357:
  7087  001DE6  90D8               	bcf	status,0,c
  7088  001DE8  322F               	rrcf	___ftadd@f2+2,f,c
  7089  001DEA  322E               	rrcf	___ftadd@f2+1,f,c
  7090  001DEC  322D               	rrcf	___ftadd@f2,f,c
  7091  001DEE  2A34               	incf	___ftadd@exp2,f,c
  7092  001DF0                     l4359:
  7093  001DF0  5034               	movf	___ftadd@exp2,w,c
  7094  001DF2  1835               	xorwf	___ftadd@exp1,w,c
  7095  001DF4  A4D8               	btfss	status,2,c
  7096  001DF6  D7F7               	goto	l4357
  7097  001DF8                     l675:
  7098  001DF8  AE33               	btfss	___ftadd@sign,7,c
  7099  001DFA  D00C               	goto	l684
  7100  001DFC  0EFF               	movlw	255
  7101  001DFE  1A2A               	xorwf	___ftadd@f1,f,c
  7102  001E00  0EFF               	movlw	255
  7103  001E02  1A2B               	xorwf	___ftadd@f1+1,f,c
  7104  001E04  0EFF               	movlw	255
  7105  001E06  1A2C               	xorwf	___ftadd@f1+2,f,c
  7106  001E08  0E01               	movlw	1
  7107  001E0A  262A               	addwf	___ftadd@f1,f,c
  7108  001E0C  0E00               	movlw	0
  7109  001E0E  222B               	addwfc	___ftadd@f1+1,f,c
  7110  001E10  0E00               	movlw	0
  7111  001E12  222C               	addwfc	___ftadd@f1+2,f,c
  7112  001E14                     l684:
  7113  001E14  AC33               	btfss	___ftadd@sign,6,c
  7114  001E16  D00C               	goto	l4365
  7115  001E18  0EFF               	movlw	255
  7116  001E1A  1A2D               	xorwf	___ftadd@f2,f,c
  7117  001E1C  0EFF               	movlw	255
  7118  001E1E  1A2E               	xorwf	___ftadd@f2+1,f,c
  7119  001E20  0EFF               	movlw	255
  7120  001E22  1A2F               	xorwf	___ftadd@f2+2,f,c
  7121  001E24  0E01               	movlw	1
  7122  001E26  262D               	addwf	___ftadd@f2,f,c
  7123  001E28  0E00               	movlw	0
  7124  001E2A  222E               	addwfc	___ftadd@f2+1,f,c
  7125  001E2C  0E00               	movlw	0
  7126  001E2E  222F               	addwfc	___ftadd@f2+2,f,c
  7127  001E30                     l4365:
  7128  001E30  0E00               	movlw	0
  7129  001E32  6E33               	movwf	___ftadd@sign,c
  7130  001E34  502A               	movf	___ftadd@f1,w,c
  7131  001E36  262D               	addwf	___ftadd@f2,f,c
  7132  001E38  502B               	movf	___ftadd@f1+1,w,c
  7133  001E3A  222E               	addwfc	___ftadd@f2+1,f,c
  7134  001E3C  502C               	movf	___ftadd@f1+2,w,c
  7135  001E3E  222F               	addwfc	___ftadd@f2+2,f,c
  7136  001E40  AE2F               	btfss	___ftadd@f2+2,7,c
  7137  001E42  D00E               	goto	l4375
  7138  001E44  0EFF               	movlw	255
  7139  001E46  1A2D               	xorwf	___ftadd@f2,f,c
  7140  001E48  0EFF               	movlw	255
  7141  001E4A  1A2E               	xorwf	___ftadd@f2+1,f,c
  7142  001E4C  0EFF               	movlw	255
  7143  001E4E  1A2F               	xorwf	___ftadd@f2+2,f,c
  7144  001E50  0E01               	movlw	1
  7145  001E52  262D               	addwf	___ftadd@f2,f,c
  7146  001E54  0E00               	movlw	0
  7147  001E56  222E               	addwfc	___ftadd@f2+1,f,c
  7148  001E58  0E00               	movlw	0
  7149  001E5A  222F               	addwfc	___ftadd@f2+2,f,c
  7150  001E5C  0E01               	movlw	1
  7151  001E5E  6E33               	movwf	___ftadd@sign,c
  7152  001E60                     l4375:
  7153  001E60  C02D  F00F         	movff	___ftadd@f2,___ftpack@arg
  7154  001E64  C02E  F010         	movff	___ftadd@f2+1,___ftpack@arg+1
  7155  001E68  C02F  F011         	movff	___ftadd@f2+2,___ftpack@arg+2
  7156  001E6C  C035  F012         	movff	___ftadd@exp1,___ftpack@exp
  7157  001E70  C033  F013         	movff	___ftadd@sign,___ftpack@sign
  7158  001E74  EC2C  F014         	call	___ftpack	;wreg free
  7159  001E78  C00F  F02A         	movff	?___ftpack,?___ftadd
  7160  001E7C  C010  F02B         	movff	?___ftpack+1,?___ftadd+1
  7161  001E80  C011  F02C         	movff	?___ftpack+2,?___ftadd+2
  7162  001E84  0012               	return	
  7163  001E86                     __end_of___ftadd:
  7164                           	opt stack 0
  7165                           tblptru	equ	0xFF8
  7166                           tblptrh	equ	0xFF7
  7167                           tblptrl	equ	0xFF6
  7168                           tablat	equ	0xFF5
  7169                           prodh	equ	0xFF4
  7170                           prodl	equ	0xFF3
  7171                           intcon	equ	0xFF2
  7172                           intcon2	equ	0xFF1
  7173                           postinc0	equ	0xFEE
  7174                           wreg	equ	0xFE8
  7175                           postdec1	equ	0xFE5
  7176                           fsr1l	equ	0xFE1
  7177                           indf2	equ	0xFDF
  7178                           postinc2	equ	0xFDE
  7179                           postdec2	equ	0xFDD
  7180                           fsr2h	equ	0xFDA
  7181                           fsr2l	equ	0xFD9
  7182                           status	equ	0xFD8
  7183                           
  7184 ;; *************** function ___ftneg *****************
  7185 ;; Defined at:
  7186 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftneg.c"
  7187 ;; Parameters:    Size  Location     Type
  7188 ;;  f1              3   14[COMRAM] float 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;		None
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  3   14[COMRAM] float 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7200 ;;      Params:         3       0       0       0       0       0       0       0       0
  7201 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7203 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7204 ;;Total ram usage:        3 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    1
  7207 ;; This function calls:
  7208 ;;		Nothing
  7209 ;; This function is called by:
  7210 ;;		_pow
  7211 ;;		_exp
  7212 ;; This function uses a non-reentrant model
  7213 ;;
  7214                           
  7215                           	psect	text28
  7216  002D7E                     __ptext28:
  7217                           	opt stack 0
  7218  002D7E                     ___ftneg:
  7219                           	opt stack 26
  7220                           
  7221                           ;incstack = 0
  7222  002D7E  500F               	movf	___ftneg@f1,w,c
  7223  002D80  1010               	iorwf	___ftneg@f1+1,w,c
  7224  002D82  1011               	iorwf	___ftneg@f1+2,w,c
  7225  002D84  B4D8               	btfsc	status,2,c
  7226  002D86  D006               	goto	l717
  7227  002D88  0E00               	movlw	0
  7228  002D8A  1A0F               	xorwf	___ftneg@f1,f,c
  7229  002D8C  0E00               	movlw	0
  7230  002D8E  1A10               	xorwf	___ftneg@f1+1,f,c
  7231  002D90  0E80               	movlw	128
  7232  002D92  1A11               	xorwf	___ftneg@f1+2,f,c
  7233  002D94                     l717:
  7234  002D94  C00F  F00F         	movff	___ftneg@f1,?___ftneg
  7235  002D98  C010  F010         	movff	___ftneg@f1+1,?___ftneg+1
  7236  002D9C  C011  F011         	movff	___ftneg@f1+2,?___ftneg+2
  7237  002DA0  0012               	return		;funcret
  7238  002DA2                     __end_of___ftneg:
  7239                           	opt stack 0
  7240                           tblptru	equ	0xFF8
  7241                           tblptrh	equ	0xFF7
  7242                           tblptrl	equ	0xFF6
  7243                           tablat	equ	0xFF5
  7244                           prodh	equ	0xFF4
  7245                           prodl	equ	0xFF3
  7246                           intcon	equ	0xFF2
  7247                           intcon2	equ	0xFF1
  7248                           postinc0	equ	0xFEE
  7249                           wreg	equ	0xFE8
  7250                           postdec1	equ	0xFE5
  7251                           fsr1l	equ	0xFE1
  7252                           indf2	equ	0xFDF
  7253                           postinc2	equ	0xFDE
  7254                           postdec2	equ	0xFDD
  7255                           fsr2h	equ	0xFDA
  7256                           fsr2l	equ	0xFD9
  7257                           status	equ	0xFD8
  7258                           
  7259 ;; *************** function ___ftdiv *****************
  7260 ;; Defined at:
  7261 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  f1              3   26[COMRAM] float 
  7264 ;;  f2              3   29[COMRAM] float 
  7265 ;; Auto vars:     Size  Location     Type
  7266 ;;  f3              3   36[COMRAM] float 
  7267 ;;  sign            1   40[COMRAM] unsigned char 
  7268 ;;  exp             1   39[COMRAM] unsigned char 
  7269 ;;  cntr            1   35[COMRAM] unsigned char 
  7270 ;; Return value:  Size  Location     Type
  7271 ;;                  3   26[COMRAM] float 
  7272 ;; Registers used:
  7273 ;;		wreg, status,2, status,0, cstack
  7274 ;; Tracked objects:
  7275 ;;		On entry : 0/0
  7276 ;;		On exit  : 0/0
  7277 ;;		Unchanged: 0/0
  7278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7279 ;;      Params:         6       0       0       0       0       0       0       0       0
  7280 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7281 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7282 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7283 ;;Total ram usage:       15 bytes
  7284 ;; Hardware stack levels used:    1
  7285 ;; Hardware stack levels required when called:    2
  7286 ;; This function calls:
  7287 ;;		___ftpack
  7288 ;; This function is called by:
  7289 ;;		_cuadrada
  7290 ;;		_exp
  7291 ;; This function uses a non-reentrant model
  7292 ;;
  7293                           
  7294                           	psect	text29
  7295  0026A0                     __ptext29:
  7296                           	opt stack 0
  7297  0026A0                     ___ftdiv:
  7298                           	opt stack 25
  7299                           
  7300                           ;incstack = 0
  7301  0026A0  C01D  F021         	movff	___ftdiv@f1+2,??___ftdiv
  7302  0026A4  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  7303  0026A6  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  7304  0026A8  341C               	rlcf	___ftdiv@f1+1,w,c
  7305  0026AA  3621               	rlcf	??___ftdiv& (0+255),f,c
  7306  0026AC  E301               	bnc	u4541
  7307  0026AE  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  7308  0026B0                     u4541:
  7309  0026B0  5021               	movf	??___ftdiv,w,c
  7310  0026B2  6E28               	movwf	___ftdiv@exp,c
  7311  0026B4  5028               	movf	___ftdiv@exp,w,c
  7312  0026B6  A4D8               	btfss	status,2,c
  7313  0026B8  D007               	goto	l4517
  7314  0026BA  0E00               	movlw	0
  7315  0026BC  6E1B               	movwf	?___ftdiv,c
  7316  0026BE  0E00               	movlw	0
  7317  0026C0  6E1C               	movwf	?___ftdiv+1,c
  7318  0026C2  0E00               	movlw	0
  7319  0026C4  6E1D               	movwf	?___ftdiv+2,c
  7320  0026C6  0012               	return	
  7321  0026C8                     l4517:
  7322  0026C8  C020  F021         	movff	___ftdiv@f2+2,??___ftdiv
  7323  0026CC  6A22               	clrf	(??___ftdiv+1)& (0+255),c
  7324  0026CE  6A23               	clrf	(??___ftdiv+2)& (0+255),c
  7325  0026D0  341F               	rlcf	___ftdiv@f2+1,w,c
  7326  0026D2  3621               	rlcf	??___ftdiv& (0+255),f,c
  7327  0026D4  E301               	bnc	u4561
  7328  0026D6  8022               	bsf	(??___ftdiv+1)& (0+255),0,c
  7329  0026D8                     u4561:
  7330  0026D8  5021               	movf	??___ftdiv,w,c
  7331  0026DA  6E29               	movwf	___ftdiv@sign,c
  7332  0026DC  5029               	movf	___ftdiv@sign,w,c
  7333  0026DE  A4D8               	btfss	status,2,c
  7334  0026E0  D007               	goto	l4523
  7335  0026E2  0E00               	movlw	0
  7336  0026E4  6E1B               	movwf	?___ftdiv,c
  7337  0026E6  0E00               	movlw	0
  7338  0026E8  6E1C               	movwf	?___ftdiv+1,c
  7339  0026EA  0E00               	movlw	0
  7340  0026EC  6E1D               	movwf	?___ftdiv+2,c
  7341  0026EE  0012               	return	
  7342  0026F0                     l4523:
  7343  0026F0  0E00               	movlw	0
  7344  0026F2  6E25               	movwf	___ftdiv@f3,c
  7345  0026F4  0E00               	movlw	0
  7346  0026F6  6E26               	movwf	___ftdiv@f3+1,c
  7347  0026F8  0E00               	movlw	0
  7348  0026FA  6E27               	movwf	___ftdiv@f3+2,c
  7349  0026FC  5029               	movf	___ftdiv@sign,w,c
  7350  0026FE  0F89               	addlw	137
  7351  002700  5E28               	subwf	___ftdiv@exp,f,c
  7352  002702  C01D  F029         	movff	___ftdiv@f1+2,___ftdiv@sign
  7353  002706  5020               	movf	___ftdiv@f2+2,w,c
  7354  002708  1A29               	xorwf	___ftdiv@sign,f,c
  7355  00270A  0E80               	movlw	128
  7356  00270C  1629               	andwf	___ftdiv@sign,f,c
  7357  00270E  8E1C               	bsf	___ftdiv@f1+1,7,c
  7358  002710  0EFF               	movlw	255
  7359  002712  161B               	andwf	___ftdiv@f1,f,c
  7360  002714  0EFF               	movlw	255
  7361  002716  161C               	andwf	___ftdiv@f1+1,f,c
  7362  002718  0E00               	movlw	0
  7363  00271A  161D               	andwf	___ftdiv@f1+2,f,c
  7364  00271C  8E1F               	bsf	___ftdiv@f2+1,7,c
  7365  00271E  0EFF               	movlw	255
  7366  002720  161E               	andwf	___ftdiv@f2,f,c
  7367  002722  0EFF               	movlw	255
  7368  002724  161F               	andwf	___ftdiv@f2+1,f,c
  7369  002726  0E00               	movlw	0
  7370  002728  1620               	andwf	___ftdiv@f2+2,f,c
  7371  00272A  0E18               	movlw	24
  7372  00272C  6E24               	movwf	___ftdiv@cntr,c
  7373  00272E                     l4543:
  7374  00272E  90D8               	bcf	status,0,c
  7375  002730  3625               	rlcf	___ftdiv@f3,f,c
  7376  002732  3626               	rlcf	___ftdiv@f3+1,f,c
  7377  002734  3627               	rlcf	___ftdiv@f3+2,f,c
  7378  002736  501E               	movf	___ftdiv@f2,w,c
  7379  002738  5C1B               	subwf	___ftdiv@f1,w,c
  7380  00273A  501F               	movf	___ftdiv@f2+1,w,c
  7381  00273C  581C               	subwfb	___ftdiv@f1+1,w,c
  7382  00273E  5020               	movf	___ftdiv@f2+2,w,c
  7383  002740  581D               	subwfb	___ftdiv@f1+2,w,c
  7384  002742  A0D8               	btfss	status,0,c
  7385  002744  D007               	goto	l695
  7386  002746  501E               	movf	___ftdiv@f2,w,c
  7387  002748  5E1B               	subwf	___ftdiv@f1,f,c
  7388  00274A  501F               	movf	___ftdiv@f2+1,w,c
  7389  00274C  5A1C               	subwfb	___ftdiv@f1+1,f,c
  7390  00274E  5020               	movf	___ftdiv@f2+2,w,c
  7391  002750  5A1D               	subwfb	___ftdiv@f1+2,f,c
  7392  002752  8025               	bsf	___ftdiv@f3,0,c
  7393  002754                     l695:
  7394  002754  90D8               	bcf	status,0,c
  7395  002756  361B               	rlcf	___ftdiv@f1,f,c
  7396  002758  361C               	rlcf	___ftdiv@f1+1,f,c
  7397  00275A  361D               	rlcf	___ftdiv@f1+2,f,c
  7398  00275C  2E24               	decfsz	___ftdiv@cntr,f,c
  7399  00275E  D7E7               	goto	l4543
  7400  002760  C025  F00F         	movff	___ftdiv@f3,___ftpack@arg
  7401  002764  C026  F010         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7402  002768  C027  F011         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7403  00276C  C028  F012         	movff	___ftdiv@exp,___ftpack@exp
  7404  002770  C029  F013         	movff	___ftdiv@sign,___ftpack@sign
  7405  002774  EC2C  F014         	call	___ftpack	;wreg free
  7406  002778  C00F  F01B         	movff	?___ftpack,?___ftdiv
  7407  00277C  C010  F01C         	movff	?___ftpack+1,?___ftdiv+1
  7408  002780  C011  F01D         	movff	?___ftpack+2,?___ftdiv+2
  7409  002784  0012               	return	
  7410  002786                     __end_of___ftdiv:
  7411                           	opt stack 0
  7412                           tblptru	equ	0xFF8
  7413                           tblptrh	equ	0xFF7
  7414                           tblptrl	equ	0xFF6
  7415                           tablat	equ	0xFF5
  7416                           prodh	equ	0xFF4
  7417                           prodl	equ	0xFF3
  7418                           intcon	equ	0xFF2
  7419                           intcon2	equ	0xFF1
  7420                           postinc0	equ	0xFEE
  7421                           wreg	equ	0xFE8
  7422                           postdec1	equ	0xFE5
  7423                           fsr1l	equ	0xFE1
  7424                           indf2	equ	0xFDF
  7425                           postinc2	equ	0xFDE
  7426                           postdec2	equ	0xFDD
  7427                           fsr2h	equ	0xFDA
  7428                           fsr2l	equ	0xFD9
  7429                           status	equ	0xFD8
  7430                           
  7431 ;; *************** function ___awtoft *****************
  7432 ;; Defined at:
  7433 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  7434 ;; Parameters:    Size  Location     Type
  7435 ;;  c               2   22[COMRAM] int 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;  sign            1   25[COMRAM] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  3   22[COMRAM] float 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7447 ;;      Params:         3       0       0       0       0       0       0       0       0
  7448 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7449 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7450 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7451 ;;Total ram usage:        4 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    2
  7454 ;; This function calls:
  7455 ;;		___ftpack
  7456 ;; This function is called by:
  7457 ;;		_rampa
  7458 ;;		_cuadrada
  7459 ;;		_sen
  7460 ;;		_exp
  7461 ;;		_log
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           	psect	text30
  7466  002CD0                     __ptext30:
  7467                           	opt stack 0
  7468  002CD0                     ___awtoft:
  7469                           	opt stack 25
  7470                           
  7471                           ;incstack = 0
  7472  002CD0  0E00               	movlw	0
  7473  002CD2  6E1A               	movwf	___awtoft@sign,c
  7474  002CD4  AE18               	btfss	___awtoft@c+1,7,c
  7475  002CD6  D006               	goto	l4573
  7476  002CD8  6C17               	negf	___awtoft@c,c
  7477  002CDA  1E18               	comf	___awtoft@c+1,f,c
  7478  002CDC  B0D8               	btfsc	status,0,c
  7479  002CDE  2A18               	incf	___awtoft@c+1,f,c
  7480  002CE0  0E01               	movlw	1
  7481  002CE2  6E1A               	movwf	___awtoft@sign,c
  7482  002CE4                     l4573:
  7483  002CE4  C017  F00F         	movff	___awtoft@c,___ftpack@arg
  7484  002CE8  C018  F010         	movff	___awtoft@c+1,___ftpack@arg+1
  7485  002CEC  6A11               	clrf	___ftpack@arg+2,c
  7486  002CEE  0E8E               	movlw	142
  7487  002CF0  6E12               	movwf	___ftpack@exp,c
  7488  002CF2  C01A  F013         	movff	___awtoft@sign,___ftpack@sign
  7489  002CF6  EC2C  F014         	call	___ftpack	;wreg free
  7490  002CFA  C00F  F017         	movff	?___ftpack,?___awtoft
  7491  002CFE  C010  F018         	movff	?___ftpack+1,?___awtoft+1
  7492  002D02  C011  F019         	movff	?___ftpack+2,?___awtoft+2
  7493  002D06  0012               	return	
  7494  002D08                     __end_of___awtoft:
  7495                           	opt stack 0
  7496                           tblptru	equ	0xFF8
  7497                           tblptrh	equ	0xFF7
  7498                           tblptrl	equ	0xFF6
  7499                           tablat	equ	0xFF5
  7500                           prodh	equ	0xFF4
  7501                           prodl	equ	0xFF3
  7502                           intcon	equ	0xFF2
  7503                           intcon2	equ	0xFF1
  7504                           postinc0	equ	0xFEE
  7505                           wreg	equ	0xFE8
  7506                           postdec1	equ	0xFE5
  7507                           fsr1l	equ	0xFE1
  7508                           indf2	equ	0xFDF
  7509                           postinc2	equ	0xFDE
  7510                           postdec2	equ	0xFDD
  7511                           fsr2h	equ	0xFDA
  7512                           fsr2l	equ	0xFD9
  7513                           status	equ	0xFD8
  7514                           
  7515 ;; *************** function ___lltoft *****************
  7516 ;; Defined at:
  7517 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lltoft.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;  c               4   22[COMRAM] unsigned long 
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;  exp             1   30[COMRAM] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  3   22[COMRAM] float 
  7524 ;; Registers used:
  7525 ;;		wreg, status,2, status,0, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7531 ;;      Params:         4       0       0       0       0       0       0       0       0
  7532 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7533 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7534 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7535 ;;Total ram usage:        9 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:    2
  7538 ;; This function calls:
  7539 ;;		___ftpack
  7540 ;; This function is called by:
  7541 ;;		_pow
  7542 ;; This function uses a non-reentrant model
  7543 ;;
  7544                           
  7545                           	psect	text31
  7546  002B22                     __ptext31:
  7547                           	opt stack 0
  7548  002B22                     ___lltoft:
  7549                           	opt stack 26
  7550                           
  7551                           ;incstack = 0
  7552  002B22  0E8E               	movlw	142
  7553  002B24  6E1F               	movwf	___lltoft@exp,c
  7554  002B26  D006               	goto	l4647
  7555  002B28                     l4645:
  7556  002B28  90D8               	bcf	status,0,c
  7557  002B2A  321A               	rrcf	___lltoft@c+3,f,c
  7558  002B2C  3219               	rrcf	___lltoft@c+2,f,c
  7559  002B2E  3218               	rrcf	___lltoft@c+1,f,c
  7560  002B30  3217               	rrcf	___lltoft@c,f,c
  7561  002B32  2A1F               	incf	___lltoft@exp,f,c
  7562  002B34                     l4647:
  7563  002B34  0E00               	movlw	0
  7564  002B36  1417               	andwf	___lltoft@c,w,c
  7565  002B38  6E1B               	movwf	??___lltoft& (0+255),c
  7566  002B3A  0E00               	movlw	0
  7567  002B3C  1418               	andwf	___lltoft@c+1,w,c
  7568  002B3E  6E1C               	movwf	(??___lltoft+1)& (0+255),c
  7569  002B40  0E00               	movlw	0
  7570  002B42  1419               	andwf	___lltoft@c+2,w,c
  7571  002B44  6E1D               	movwf	(??___lltoft+2)& (0+255),c
  7572  002B46  0EFF               	movlw	255
  7573  002B48  141A               	andwf	___lltoft@c+3,w,c
  7574  002B4A  6E1E               	movwf	(??___lltoft+3)& (0+255),c
  7575  002B4C  501B               	movf	??___lltoft,w,c
  7576  002B4E  101C               	iorwf	??___lltoft+1,w,c
  7577  002B50  101D               	iorwf	??___lltoft+2,w,c
  7578  002B52  101E               	iorwf	??___lltoft+3,w,c
  7579  002B54  A4D8               	btfss	status,2,c
  7580  002B56  D7E8               	goto	l4645
  7581  002B58  C017  F00F         	movff	___lltoft@c,___ftpack@arg
  7582  002B5C  C018  F010         	movff	___lltoft@c+1,___ftpack@arg+1
  7583  002B60  C019  F011         	movff	___lltoft@c+2,___ftpack@arg+2
  7584  002B64  C01F  F012         	movff	___lltoft@exp,___ftpack@exp
  7585  002B68  0E00               	movlw	0
  7586  002B6A  6E13               	movwf	___ftpack@sign,c
  7587  002B6C  EC2C  F014         	call	___ftpack	;wreg free
  7588  002B70  C00F  F017         	movff	?___ftpack,?___lltoft
  7589  002B74  C010  F018         	movff	?___ftpack+1,?___lltoft+1
  7590  002B78  C011  F019         	movff	?___ftpack+2,?___lltoft+2
  7591  002B7C  0012               	return	
  7592  002B7E                     __end_of___lltoft:
  7593                           	opt stack 0
  7594                           tblptru	equ	0xFF8
  7595                           tblptrh	equ	0xFF7
  7596                           tblptrl	equ	0xFF6
  7597                           tablat	equ	0xFF5
  7598                           prodh	equ	0xFF4
  7599                           prodl	equ	0xFF3
  7600                           intcon	equ	0xFF2
  7601                           intcon2	equ	0xFF1
  7602                           postinc0	equ	0xFEE
  7603                           wreg	equ	0xFE8
  7604                           postdec1	equ	0xFE5
  7605                           fsr1l	equ	0xFE1
  7606                           indf2	equ	0xFDF
  7607                           postinc2	equ	0xFDE
  7608                           postdec2	equ	0xFDD
  7609                           fsr2h	equ	0xFDA
  7610                           fsr2l	equ	0xFD9
  7611                           status	equ	0xFD8
  7612                           
  7613 ;; *************** function ___ftpack *****************
  7614 ;; Defined at:
  7615 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  arg             3   14[COMRAM] unsigned um
  7618 ;;  exp             1   17[COMRAM] unsigned char 
  7619 ;;  sign            1   18[COMRAM] unsigned char 
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;		None
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  3   14[COMRAM] float 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7631 ;;      Params:         5       0       0       0       0       0       0       0       0
  7632 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7633 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7634 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7635 ;;Total ram usage:        8 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    1
  7638 ;; This function calls:
  7639 ;;		Nothing
  7640 ;; This function is called by:
  7641 ;;		___altoft
  7642 ;;		___awtoft
  7643 ;;		___ftadd
  7644 ;;		___ftdiv
  7645 ;;		___ftmul
  7646 ;;		___lltoft
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           	psect	text32
  7651  002858                     __ptext32:
  7652                           	opt stack 0
  7653  002858                     ___ftpack:
  7654                           	opt stack 24
  7655                           
  7656                           ;incstack = 0
  7657  002858  5012               	movf	___ftpack@exp,w,c
  7658  00285A  B4D8               	btfsc	status,2,c
  7659  00285C  D005               	goto	l4255
  7660  00285E  500F               	movf	___ftpack@arg,w,c
  7661  002860  1010               	iorwf	___ftpack@arg+1,w,c
  7662  002862  1011               	iorwf	___ftpack@arg+2,w,c
  7663  002864  A4D8               	btfss	status,2,c
  7664  002866  D00C               	goto	l4261
  7665  002868                     l4255:
  7666  002868  0E00               	movlw	0
  7667  00286A  6E0F               	movwf	?___ftpack,c
  7668  00286C  0E00               	movlw	0
  7669  00286E  6E10               	movwf	?___ftpack+1,c
  7670  002870  0E00               	movlw	0
  7671  002872  6E11               	movwf	?___ftpack+2,c
  7672  002874  0012               	return	
  7673  002876                     l4259:
  7674  002876  2A12               	incf	___ftpack@exp,f,c
  7675  002878  90D8               	bcf	status,0,c
  7676  00287A  3211               	rrcf	___ftpack@arg+2,f,c
  7677  00287C  3210               	rrcf	___ftpack@arg+1,f,c
  7678  00287E  320F               	rrcf	___ftpack@arg,f,c
  7679  002880                     l4261:
  7680  002880  0E00               	movlw	0
  7681  002882  140F               	andwf	___ftpack@arg,w,c
  7682  002884  6E14               	movwf	??___ftpack& (0+255),c
  7683  002886  0E00               	movlw	0
  7684  002888  1410               	andwf	___ftpack@arg+1,w,c
  7685  00288A  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7686  00288C  0EFE               	movlw	254
  7687  00288E  1411               	andwf	___ftpack@arg+2,w,c
  7688  002890  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7689  002892  5014               	movf	??___ftpack,w,c
  7690  002894  1015               	iorwf	??___ftpack+1,w,c
  7691  002896  1016               	iorwf	??___ftpack+2,w,c
  7692  002898  B4D8               	btfsc	status,2,c
  7693  00289A  D00C               	goto	l4267
  7694  00289C  D7EC               	goto	l4259
  7695  00289E                     l4263:
  7696  00289E  2A12               	incf	___ftpack@exp,f,c
  7697  0028A0  0E01               	movlw	1
  7698  0028A2  260F               	addwf	___ftpack@arg,f,c
  7699  0028A4  0E00               	movlw	0
  7700  0028A6  2210               	addwfc	___ftpack@arg+1,f,c
  7701  0028A8  0E00               	movlw	0
  7702  0028AA  2211               	addwfc	___ftpack@arg+2,f,c
  7703  0028AC  90D8               	bcf	status,0,c
  7704  0028AE  3211               	rrcf	___ftpack@arg+2,f,c
  7705  0028B0  3210               	rrcf	___ftpack@arg+1,f,c
  7706  0028B2  320F               	rrcf	___ftpack@arg,f,c
  7707  0028B4                     l4267:
  7708  0028B4  0E00               	movlw	0
  7709  0028B6  140F               	andwf	___ftpack@arg,w,c
  7710  0028B8  6E14               	movwf	??___ftpack& (0+255),c
  7711  0028BA  0E00               	movlw	0
  7712  0028BC  1410               	andwf	___ftpack@arg+1,w,c
  7713  0028BE  6E15               	movwf	(??___ftpack+1)& (0+255),c
  7714  0028C0  0EFF               	movlw	255
  7715  0028C2  1411               	andwf	___ftpack@arg+2,w,c
  7716  0028C4  6E16               	movwf	(??___ftpack+2)& (0+255),c
  7717  0028C6  5014               	movf	??___ftpack,w,c
  7718  0028C8  1015               	iorwf	??___ftpack+1,w,c
  7719  0028CA  1016               	iorwf	??___ftpack+2,w,c
  7720  0028CC  B4D8               	btfsc	status,2,c
  7721  0028CE  D006               	goto	l4271
  7722  0028D0  D7E6               	goto	l4263
  7723  0028D2                     l4269:
  7724  0028D2  0612               	decf	___ftpack@exp,f,c
  7725  0028D4  90D8               	bcf	status,0,c
  7726  0028D6  360F               	rlcf	___ftpack@arg,f,c
  7727  0028D8  3610               	rlcf	___ftpack@arg+1,f,c
  7728  0028DA  3611               	rlcf	___ftpack@arg+2,f,c
  7729  0028DC                     l4271:
  7730  0028DC  BE10               	btfsc	___ftpack@arg+1,7,c
  7731  0028DE  D003               	goto	l637
  7732  0028E0  0E02               	movlw	2
  7733  0028E2  6012               	cpfslt	___ftpack@exp,c
  7734  0028E4  D7F6               	goto	l4269
  7735  0028E6                     l637:
  7736  0028E6  A012               	btfss	___ftpack@exp,0,c
  7737  0028E8  9E10               	bcf	___ftpack@arg+1,7,c
  7738  0028EA  90D8               	bcf	status,0,c
  7739  0028EC  3212               	rrcf	___ftpack@exp,f,c
  7740  0028EE  5012               	movf	___ftpack@exp,w,c
  7741  0028F0  1211               	iorwf	___ftpack@arg+2,f,c
  7742  0028F2  5013               	movf	___ftpack@sign,w,c
  7743  0028F4  A4D8               	btfss	status,2,c
  7744  0028F6  8E11               	bsf	___ftpack@arg+2,7,c
  7745  0028F8  C00F  F00F         	movff	___ftpack@arg,?___ftpack
  7746  0028FC  C010  F010         	movff	___ftpack@arg+1,?___ftpack+1
  7747  002900  C011  F011         	movff	___ftpack@arg+2,?___ftpack+2
  7748  002904  0012               	return	
  7749  002906                     __end_of___ftpack:
  7750                           	opt stack 0
  7751                           tblptru	equ	0xFF8
  7752                           tblptrh	equ	0xFF7
  7753                           tblptrl	equ	0xFF6
  7754                           tablat	equ	0xFF5
  7755                           prodh	equ	0xFF4
  7756                           prodl	equ	0xFF3
  7757                           intcon	equ	0xFF2
  7758                           intcon2	equ	0xFF1
  7759                           postinc0	equ	0xFEE
  7760                           wreg	equ	0xFE8
  7761                           postdec1	equ	0xFE5
  7762                           fsr1l	equ	0xFE1
  7763                           indf2	equ	0xFDF
  7764                           postinc2	equ	0xFDE
  7765                           postdec2	equ	0xFDD
  7766                           fsr2h	equ	0xFDA
  7767                           fsr2l	equ	0xFD9
  7768                           status	equ	0xFD8
  7769                           
  7770 ;; *************** function _Delay1KTCYx *****************
  7771 ;; Defined at:
  7772 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\d1ktcyx.c"
  7773 ;; Parameters:    Size  Location     Type
  7774 ;;  unit            1    wreg     unsigned char 
  7775 ;; Auto vars:     Size  Location     Type
  7776 ;;  unit            1   14[COMRAM] unsigned char 
  7777 ;; Return value:  Size  Location     Type
  7778 ;;                  1    wreg      void 
  7779 ;; Registers used:
  7780 ;;		wreg
  7781 ;; Tracked objects:
  7782 ;;		On entry : 0/0
  7783 ;;		On exit  : 0/0
  7784 ;;		Unchanged: 0/0
  7785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7786 ;;      Params:         0       0       0       0       0       0       0       0       0
  7787 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7789 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7790 ;;Total ram usage:        1 bytes
  7791 ;; Hardware stack levels used:    1
  7792 ;; Hardware stack levels required when called:    1
  7793 ;; This function calls:
  7794 ;;		Nothing
  7795 ;; This function is called by:
  7796 ;;		_cuadrada
  7797 ;; This function uses a non-reentrant model
  7798 ;;
  7799                           
  7800                           	psect	text33
  7801  002DE0                     __ptext33:
  7802                           	opt stack 0
  7803  002DE0                     _Delay1KTCYx:
  7804                           	opt stack 28
  7805                           
  7806                           ;incstack = 0
  7807                           ;Delay1KTCYx@unit stored from wreg
  7808  002DE0  6E0F               	movwf	Delay1KTCYx@unit,c
  7809  002DE2  0EFA               	movlw	250
  7810  002DE4                     u5937:
  7811  002DE4  F000               	nop	
  7812  002DE6  2EE8               	decfsz	wreg,f,c
  7813  002DE8  D7FD               	goto	u5937
  7814  002DEA  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  7815  002DEC  D7FA               	goto	l3293
  7816  002DEE  0012               	return	
  7817  002DF0                     __end_of_Delay1KTCYx:
  7818                           	opt stack 0
  7819                           tblptru	equ	0xFF8
  7820                           tblptrh	equ	0xFF7
  7821                           tblptrl	equ	0xFF6
  7822                           tablat	equ	0xFF5
  7823                           prodh	equ	0xFF4
  7824                           prodl	equ	0xFF3
  7825                           intcon	equ	0xFF2
  7826                           intcon2	equ	0xFF1
  7827                           postinc0	equ	0xFEE
  7828                           wreg	equ	0xFE8
  7829                           postdec1	equ	0xFE5
  7830                           fsr1l	equ	0xFE1
  7831                           indf2	equ	0xFDF
  7832                           postinc2	equ	0xFDE
  7833                           postdec2	equ	0xFDD
  7834                           fsr2h	equ	0xFDA
  7835                           fsr2l	equ	0xFD9
  7836                           status	equ	0xFD8
  7837                           
  7838 ;; *************** function _Delay10TCYx *****************
  7839 ;; Defined at:
  7840 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\d10tcyx.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  unit            1    wreg     unsigned char 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;  unit            1   14[COMRAM] unsigned char 
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1    wreg      void 
  7847 ;; Registers used:
  7848 ;;		wreg
  7849 ;; Tracked objects:
  7850 ;;		On entry : 0/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0
  7855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7857 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7858 ;;Total ram usage:        1 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:    1
  7861 ;; This function calls:
  7862 ;;		Nothing
  7863 ;; This function is called by:
  7864 ;;		_rampa
  7865 ;;		_cuadrada
  7866 ;;		_sen
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text34
  7871  002DF0                     __ptext34:
  7872                           	opt stack 0
  7873  002DF0                     _Delay10TCYx:
  7874                           	opt stack 28
  7875                           
  7876                           ;incstack = 0
  7877                           ;Delay10TCYx@unit stored from wreg
  7878  002DF0  6E0F               	movwf	Delay10TCYx@unit,c
  7879  002DF2  0E03               	movlw	3
  7880  002DF4                     u5947:
  7881  002DF4  2EE8               	decfsz	wreg,f,c
  7882  002DF6  D7FE               	goto	u5947
  7883  002DF8  F000               	nop	
  7884  002DFA  2E0F               	decfsz	Delay10TCYx@unit,f,c
  7885  002DFC  D7FA               	goto	l3285
  7886  002DFE  0012               	return	
  7887  002E00                     __end_of_Delay10TCYx:
  7888                           	opt stack 0
  7889                           tblptru	equ	0xFF8
  7890                           tblptrh	equ	0xFF7
  7891                           tblptrl	equ	0xFF6
  7892                           tablat	equ	0xFF5
  7893                           prodh	equ	0xFF4
  7894                           prodl	equ	0xFF3
  7895                           intcon	equ	0xFF2
  7896                           intcon2	equ	0xFF1
  7897                           postinc0	equ	0xFEE
  7898                           wreg	equ	0xFE8
  7899                           postdec1	equ	0xFE5
  7900                           fsr1l	equ	0xFE1
  7901                           indf2	equ	0xFDF
  7902                           postinc2	equ	0xFDE
  7903                           postdec2	equ	0xFDD
  7904                           fsr2h	equ	0xFDA
  7905                           fsr2l	equ	0xFD9
  7906                           status	equ	0xFD8
  7907                           
  7908 ;; *************** function _Delay100TCYx *****************
  7909 ;; Defined at:
  7910 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\pic18\d100tcyx.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  unit            1    wreg     unsigned char 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  unit            1   14[COMRAM] unsigned char 
  7915 ;; Return value:  Size  Location     Type
  7916 ;;                  1    wreg      void 
  7917 ;; Registers used:
  7918 ;;		wreg
  7919 ;; Tracked objects:
  7920 ;;		On entry : 0/0
  7921 ;;		On exit  : 0/0
  7922 ;;		Unchanged: 0/0
  7923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7924 ;;      Params:         0       0       0       0       0       0       0       0       0
  7925 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7927 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7928 ;;Total ram usage:        1 bytes
  7929 ;; Hardware stack levels used:    1
  7930 ;; Hardware stack levels required when called:    1
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_cuadrada
  7935 ;;		_sen
  7936 ;; This function uses a non-reentrant model
  7937 ;;
  7938                           
  7939                           	psect	text35
  7940  002E00                     __ptext35:
  7941                           	opt stack 0
  7942  002E00                     _Delay100TCYx:
  7943                           	opt stack 28
  7944                           
  7945                           ;incstack = 0
  7946                           ;Delay100TCYx@unit stored from wreg
  7947  002E00  6E0F               	movwf	Delay100TCYx@unit,c
  7948  002E02  0E21               	movlw	33
  7949  002E04                     u5957:
  7950  002E04  2EE8               	decfsz	wreg,f,c
  7951  002E06  D7FE               	goto	u5957
  7952  002E08  F000               	nop	
  7953  002E0A  2E0F               	decfsz	Delay100TCYx@unit,f,c
  7954  002E0C  D7FA               	goto	l3289
  7955  002E0E  0012               	return	
  7956  002E10                     __end_of_Delay100TCYx:
  7957                           	opt stack 0
  7958                           tblptru	equ	0xFF8
  7959                           tblptrh	equ	0xFF7
  7960                           tblptrl	equ	0xFF6
  7961                           tablat	equ	0xFF5
  7962                           prodh	equ	0xFF4
  7963                           prodl	equ	0xFF3
  7964                           intcon	equ	0xFF2
  7965                           intcon2	equ	0xFF1
  7966                           postinc0	equ	0xFEE
  7967                           wreg	equ	0xFE8
  7968                           postdec1	equ	0xFE5
  7969                           fsr1l	equ	0xFE1
  7970                           indf2	equ	0xFDF
  7971                           postinc2	equ	0xFDE
  7972                           postdec2	equ	0xFDD
  7973                           fsr2h	equ	0xFDA
  7974                           fsr2l	equ	0xFD9
  7975                           status	equ	0xFD8
  7976                           
  7977 ;; *************** function _ISR *****************
  7978 ;; Defined at:
  7979 ;;		line 24 in file "LAB4.c"
  7980 ;; Parameters:    Size  Location     Type
  7981 ;;		None
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;		None
  7984 ;; Return value:  Size  Location     Type
  7985 ;;                  1    wreg      void 
  7986 ;; Registers used:
  7987 ;;		wreg, status,2, status,0
  7988 ;; Tracked objects:
  7989 ;;		On entry : 0/0
  7990 ;;		On exit  : 0/0
  7991 ;;		Unchanged: 0/0
  7992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7993 ;;      Params:         0       0       0       0       0       0       0       0       0
  7994 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7995 ;;      Temps:         14       0       0       0       0       0       0       0       0
  7996 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7997 ;;Total ram usage:       14 bytes
  7998 ;; Hardware stack levels used:    1
  7999 ;; This function calls:
  8000 ;;		Nothing
  8001 ;; This function is called by:
  8002 ;;		Interrupt level 2
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	intcode
  8007  000008                     __pintcode:
  8008                           	opt stack 0
  8009  000008                     _ISR:
  8010                           	opt stack 24
  8011                           
  8012                           ;incstack = 0
  8013  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  8014  00000A  CFFA F001          	movff	pclath,??_ISR
  8015  00000E  CFFB F002          	movff	pclatu,??_ISR+1
  8016  000012  ED14  F010         	call	int_func,f	;refresh shadow registers
  8017                           pclatu	equ	0xFFB
  8018                           pclath	equ	0xFFA
  8019                           tblptru	equ	0xFF8
  8020                           tblptrh	equ	0xFF7
  8021                           tblptrl	equ	0xFF6
  8022                           tablat	equ	0xFF5
  8023                           prodh	equ	0xFF4
  8024                           prodl	equ	0xFF3
  8025                           intcon	equ	0xFF2
  8026                           intcon2	equ	0xFF1
  8027                           postinc0	equ	0xFEE
  8028                           wreg	equ	0xFE8
  8029                           postdec1	equ	0xFE5
  8030                           fsr1l	equ	0xFE1
  8031                           indf2	equ	0xFDF
  8032                           postinc2	equ	0xFDE
  8033                           postdec2	equ	0xFDD
  8034                           fsr2h	equ	0xFDA
  8035                           fsr2l	equ	0xFD9
  8036                           status	equ	0xFD8
  8037                           
  8038                           	psect	intcode_body
  8039  002028                     __pintcode_body:
  8040                           	opt stack 24
  8041  002028                     int_func:
  8042                           	opt stack 24
  8043  002028  0006               	pop		; remove dummy address from shadow register refresh
  8044  00202A  CFE9 F003          	movff	fsr0l,??_ISR+2
  8045  00202E  CFEA F004          	movff	fsr0h,??_ISR+3
  8046  002032  CFE1 F005          	movff	fsr1l,??_ISR+4
  8047  002036  CFE2 F006          	movff	fsr1h,??_ISR+5
  8048  00203A  CFD9 F007          	movff	fsr2l,??_ISR+6
  8049  00203E  CFDA F008          	movff	fsr2h,??_ISR+7
  8050  002042  CFF3 F009          	movff	prodl,??_ISR+8
  8051  002046  CFF4 F00A          	movff	prodh,??_ISR+9
  8052  00204A  CFF6 F00B          	movff	tblptrl,??_ISR+10
  8053  00204E  CFF7 F00C          	movff	tblptrh,??_ISR+11
  8054  002052  CFF8 F00D          	movff	tblptru,??_ISR+12
  8055  002056  CFF5 F00E          	movff	tablat,??_ISR+13
  8056                           
  8057                           ;LAB4.c: 26: if(INTCONbits.RBIF==1 && INTCONbits.RBIE==1)
  8058  00205A  B0F2               	btfsc	intcon,0,c	;volatile
  8059  00205C  A6F2               	btfss	intcon,3,c	;volatile
  8060  00205E  D06F               	goto	i2l97
  8061                           
  8062                           ;LAB4.c: 27: {
  8063                           ;LAB4.c: 28: if(PORTB!=0XF0)
  8064  002060  0EF0               	movlw	240
  8065  002062  1881               	xorwf	3969,w,c	;volatile
  8066  002064  B4D8               	btfsc	status,2,c
  8067  002066  D068               	goto	i2l98
  8068                           
  8069                           ;LAB4.c: 29: {
  8070                           ;LAB4.c: 30: PORTB=0xFE;
  8071  002068  0EFE               	movlw	254
  8072  00206A  6E81               	movwf	3969,c	;volatile
  8073                           
  8074                           ;LAB4.c: 31: if(RB4 == 0){tecla = 1;}
  8075  00206C  B881               	btfsc	3969,4,c	;volatile
  8076  00206E  D004               	goto	i2l2263
  8077  002070  0E00               	movlw	0
  8078  002072  6E50               	movwf	_tecla+1,c
  8079  002074  0E01               	movlw	1
  8080  002076  6E4F               	movwf	_tecla,c
  8081  002078                     i2l2263:
  8082                           
  8083                           ;LAB4.c: 32: if(RB5 == 0){tecla = 2;}
  8084  002078  BA81               	btfsc	3969,5,c	;volatile
  8085  00207A  D004               	goto	i2l2267
  8086  00207C  0E00               	movlw	0
  8087  00207E  6E50               	movwf	_tecla+1,c
  8088  002080  0E02               	movlw	2
  8089  002082  6E4F               	movwf	_tecla,c
  8090  002084                     i2l2267:
  8091                           
  8092                           ;LAB4.c: 33: if(RB6 == 0){tecla = 3;}
  8093  002084  BC81               	btfsc	3969,6,c	;volatile
  8094  002086  D004               	goto	i2l2271
  8095  002088  0E00               	movlw	0
  8096  00208A  6E50               	movwf	_tecla+1,c
  8097  00208C  0E03               	movlw	3
  8098  00208E  6E4F               	movwf	_tecla,c
  8099  002090                     i2l2271:
  8100                           
  8101                           ;LAB4.c: 34: if(RB7 == 0){tecla = 11;}
  8102  002090  BE81               	btfsc	3969,7,c	;volatile
  8103  002092  D004               	goto	i2l102
  8104  002094  0E00               	movlw	0
  8105  002096  6E50               	movwf	_tecla+1,c
  8106  002098  0E0B               	movlw	11
  8107  00209A  6E4F               	movwf	_tecla,c
  8108  00209C                     i2l102:
  8109                           
  8110                           ;LAB4.c: 35: PORTB=0xFD;
  8111  00209C  0EFD               	movlw	253
  8112  00209E  6E81               	movwf	3969,c	;volatile
  8113                           
  8114                           ;LAB4.c: 36: if(RB4 == 0){tecla = 4;}
  8115  0020A0  B881               	btfsc	3969,4,c	;volatile
  8116  0020A2  D004               	goto	i2l2279
  8117  0020A4  0E00               	movlw	0
  8118  0020A6  6E50               	movwf	_tecla+1,c
  8119  0020A8  0E04               	movlw	4
  8120  0020AA  6E4F               	movwf	_tecla,c
  8121  0020AC                     i2l2279:
  8122                           
  8123                           ;LAB4.c: 37: if(RB5 == 0){tecla = 5;}
  8124  0020AC  BA81               	btfsc	3969,5,c	;volatile
  8125  0020AE  D004               	goto	i2l2283
  8126  0020B0  0E00               	movlw	0
  8127  0020B2  6E50               	movwf	_tecla+1,c
  8128  0020B4  0E05               	movlw	5
  8129  0020B6  6E4F               	movwf	_tecla,c
  8130  0020B8                     i2l2283:
  8131                           
  8132                           ;LAB4.c: 38: if(RB6 == 0){tecla = 6;}
  8133  0020B8  BC81               	btfsc	3969,6,c	;volatile
  8134  0020BA  D004               	goto	i2l2287
  8135  0020BC  0E00               	movlw	0
  8136  0020BE  6E50               	movwf	_tecla+1,c
  8137  0020C0  0E06               	movlw	6
  8138  0020C2  6E4F               	movwf	_tecla,c
  8139  0020C4                     i2l2287:
  8140                           
  8141                           ;LAB4.c: 39: if(RB7 == 0){tecla = 12;}
  8142  0020C4  BE81               	btfsc	3969,7,c	;volatile
  8143  0020C6  D004               	goto	i2l106
  8144  0020C8  0E00               	movlw	0
  8145  0020CA  6E50               	movwf	_tecla+1,c
  8146  0020CC  0E0C               	movlw	12
  8147  0020CE  6E4F               	movwf	_tecla,c
  8148  0020D0                     i2l106:
  8149                           
  8150                           ;LAB4.c: 40: PORTB=0xFB;
  8151  0020D0  0EFB               	movlw	251
  8152  0020D2  6E81               	movwf	3969,c	;volatile
  8153                           
  8154                           ;LAB4.c: 41: if(RB4 == 0){tecla = 7;}
  8155  0020D4  B881               	btfsc	3969,4,c	;volatile
  8156  0020D6  D004               	goto	i2l2295
  8157  0020D8  0E00               	movlw	0
  8158  0020DA  6E50               	movwf	_tecla+1,c
  8159  0020DC  0E07               	movlw	7
  8160  0020DE  6E4F               	movwf	_tecla,c
  8161  0020E0                     i2l2295:
  8162                           
  8163                           ;LAB4.c: 42: if(RB5 == 0){tecla = 8;}
  8164  0020E0  BA81               	btfsc	3969,5,c	;volatile
  8165  0020E2  D004               	goto	i2l2299
  8166  0020E4  0E00               	movlw	0
  8167  0020E6  6E50               	movwf	_tecla+1,c
  8168  0020E8  0E08               	movlw	8
  8169  0020EA  6E4F               	movwf	_tecla,c
  8170  0020EC                     i2l2299:
  8171                           
  8172                           ;LAB4.c: 43: if(RB6 == 0){tecla = 9;}
  8173  0020EC  BC81               	btfsc	3969,6,c	;volatile
  8174  0020EE  D004               	goto	i2l2303
  8175  0020F0  0E00               	movlw	0
  8176  0020F2  6E50               	movwf	_tecla+1,c
  8177  0020F4  0E09               	movlw	9
  8178  0020F6  6E4F               	movwf	_tecla,c
  8179  0020F8                     i2l2303:
  8180                           
  8181                           ;LAB4.c: 44: if(RB7 == 0){tecla = 13;}
  8182  0020F8  BE81               	btfsc	3969,7,c	;volatile
  8183  0020FA  D004               	goto	i2l110
  8184  0020FC  0E00               	movlw	0
  8185  0020FE  6E50               	movwf	_tecla+1,c
  8186  002100  0E0D               	movlw	13
  8187  002102  6E4F               	movwf	_tecla,c
  8188  002104                     i2l110:
  8189                           
  8190                           ;LAB4.c: 45: PORTB=0xF7;
  8191  002104  0EF7               	movlw	247
  8192  002106  6E81               	movwf	3969,c	;volatile
  8193                           
  8194                           ;LAB4.c: 46: if(RB4 == 0){tecla = 15;}
  8195  002108  B881               	btfsc	3969,4,c	;volatile
  8196  00210A  D004               	goto	i2l2311
  8197  00210C  0E00               	movlw	0
  8198  00210E  6E50               	movwf	_tecla+1,c
  8199  002110  0E0F               	movlw	15
  8200  002112  6E4F               	movwf	_tecla,c
  8201  002114                     i2l2311:
  8202                           
  8203                           ;LAB4.c: 47: if(RB5 == 0){tecla = 0;}
  8204  002114  BA81               	btfsc	3969,5,c	;volatile
  8205  002116  D004               	goto	i2l2315
  8206  002118  0E00               	movlw	0
  8207  00211A  6E50               	movwf	_tecla+1,c
  8208  00211C  0E00               	movlw	0
  8209  00211E  6E4F               	movwf	_tecla,c
  8210  002120                     i2l2315:
  8211                           
  8212                           ;LAB4.c: 48: if(RB6 == 0){tecla = 10;}
  8213  002120  BC81               	btfsc	3969,6,c	;volatile
  8214  002122  D004               	goto	i2l2319
  8215  002124  0E00               	movlw	0
  8216  002126  6E50               	movwf	_tecla+1,c
  8217  002128  0E0A               	movlw	10
  8218  00212A  6E4F               	movwf	_tecla,c
  8219  00212C                     i2l2319:
  8220                           
  8221                           ;LAB4.c: 49: if(RB7 == 0){tecla = 14;}
  8222  00212C  BE81               	btfsc	3969,7,c	;volatile
  8223  00212E  D004               	goto	i2l98
  8224  002130  0E00               	movlw	0
  8225  002132  6E50               	movwf	_tecla+1,c
  8226  002134  0E0E               	movlw	14
  8227  002136  6E4F               	movwf	_tecla,c
  8228  002138                     i2l98:
  8229                           
  8230                           ;LAB4.c: 50: }
  8231                           ;LAB4.c: 52: LATB=0XF0;
  8232  002138  0EF0               	movlw	240
  8233  00213A  6E8A               	movwf	3978,c	;volatile
  8234                           
  8235                           ;LAB4.c: 53: INTCONbits.RBIF=0;
  8236  00213C  90F2               	bcf	intcon,0,c	;volatile
  8237  00213E                     i2l97:
  8238                           
  8239                           ;LAB4.c: 55: }
  8240                           ;LAB4.c: 56: PIE2=0X00;
  8241  00213E  0E00               	movlw	0
  8242  002140  6EA0               	movwf	4000,c	;volatile
  8243                           
  8244                           ;LAB4.c: 57: PIR2=0X00;
  8245  002142  0E00               	movlw	0
  8246  002144  6EA1               	movwf	4001,c	;volatile
  8247  002146  C00E  FFF5         	movff	??_ISR+13,tablat
  8248  00214A  C00D  FFF8         	movff	??_ISR+12,tblptru
  8249  00214E  C00C  FFF7         	movff	??_ISR+11,tblptrh
  8250  002152  C00B  FFF6         	movff	??_ISR+10,tblptrl
  8251  002156  C00A  FFF4         	movff	??_ISR+9,prodh
  8252  00215A  C009  FFF3         	movff	??_ISR+8,prodl
  8253  00215E  C008  FFDA         	movff	??_ISR+7,fsr2h
  8254  002162  C007  FFD9         	movff	??_ISR+6,fsr2l
  8255  002166  C006  FFE2         	movff	??_ISR+5,fsr1h
  8256  00216A  C005  FFE1         	movff	??_ISR+4,fsr1l
  8257  00216E  C004  FFEA         	movff	??_ISR+3,fsr0h
  8258  002172  C003  FFE9         	movff	??_ISR+2,fsr0l
  8259  002176  C002  FFFB         	movff	??_ISR+1,pclatu
  8260  00217A  C001  FFFA         	movff	??_ISR,pclath
  8261  00217E  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8262  002180  0011               	retfie		f
  8263  002182                     __end_of_ISR:
  8264                           	opt stack 0
  8265                           pclatu	equ	0xFFB
  8266                           pclath	equ	0xFFA
  8267                           tblptru	equ	0xFF8
  8268                           tblptrh	equ	0xFF7
  8269                           tblptrl	equ	0xFF6
  8270                           tablat	equ	0xFF5
  8271                           prodh	equ	0xFF4
  8272                           prodl	equ	0xFF3
  8273                           intcon	equ	0xFF2
  8274                           intcon2	equ	0xFF1
  8275                           postinc0	equ	0xFEE
  8276                           fsr0h	equ	0xFEA
  8277                           fsr0l	equ	0xFE9
  8278                           wreg	equ	0xFE8
  8279                           postdec1	equ	0xFE5
  8280                           fsr1h	equ	0xFE2
  8281                           fsr1l	equ	0xFE1
  8282                           indf2	equ	0xFDF
  8283                           postinc2	equ	0xFDE
  8284                           postdec2	equ	0xFDD
  8285                           fsr2h	equ	0xFDA
  8286                           fsr2l	equ	0xFD9
  8287                           status	equ	0xFD8
  8288                           pclatu	equ	0xFFB
  8289                           pclath	equ	0xFFA
  8290                           tblptru	equ	0xFF8
  8291                           tblptrh	equ	0xFF7
  8292                           tblptrl	equ	0xFF6
  8293                           tablat	equ	0xFF5
  8294                           prodh	equ	0xFF4
  8295                           prodl	equ	0xFF3
  8296                           intcon	equ	0xFF2
  8297                           intcon2	equ	0xFF1
  8298                           postinc0	equ	0xFEE
  8299                           fsr0h	equ	0xFEA
  8300                           fsr0l	equ	0xFE9
  8301                           wreg	equ	0xFE8
  8302                           postdec1	equ	0xFE5
  8303                           fsr1h	equ	0xFE2
  8304                           fsr1l	equ	0xFE1
  8305                           indf2	equ	0xFDF
  8306                           postinc2	equ	0xFDE
  8307                           postdec2	equ	0xFDD
  8308                           fsr2h	equ	0xFDA
  8309                           fsr2l	equ	0xFD9
  8310                           status	equ	0xFD8
  8311                           
  8312                           	psect	rparam
  8313  0000                     pclatu	equ	0xFFB
  8314                           pclath	equ	0xFFA
  8315                           tblptru	equ	0xFF8
  8316                           tblptrh	equ	0xFF7
  8317                           tblptrl	equ	0xFF6
  8318                           tablat	equ	0xFF5
  8319                           prodh	equ	0xFF4
  8320                           prodl	equ	0xFF3
  8321                           intcon	equ	0xFF2
  8322                           intcon2	equ	0xFF1
  8323                           postinc0	equ	0xFEE
  8324                           fsr0h	equ	0xFEA
  8325                           fsr0l	equ	0xFE9
  8326                           wreg	equ	0xFE8
  8327                           postdec1	equ	0xFE5
  8328                           fsr1h	equ	0xFE2
  8329                           fsr1l	equ	0xFE1
  8330                           indf2	equ	0xFDF
  8331                           postinc2	equ	0xFDE
  8332                           postdec2	equ	0xFDD
  8333                           fsr2h	equ	0xFDA
  8334                           fsr2l	equ	0xFD9
  8335                           status	equ	0xFD8
  8336                           
  8337                           	psect	temp
  8338  000051                     btemp:
  8339                           	opt stack 0
  8340  000051                     	ds	1
  8341  0000                     int$flags	set	btemp
  8342                           pclatu	equ	0xFFB
  8343                           pclath	equ	0xFFA
  8344                           tblptru	equ	0xFF8
  8345                           tblptrh	equ	0xFF7
  8346                           tblptrl	equ	0xFF6
  8347                           tablat	equ	0xFF5
  8348                           prodh	equ	0xFF4
  8349                           prodl	equ	0xFF3
  8350                           intcon	equ	0xFF2
  8351                           intcon2	equ	0xFF1
  8352                           postinc0	equ	0xFEE
  8353                           fsr0h	equ	0xFEA
  8354                           fsr0l	equ	0xFE9
  8355                           wreg	equ	0xFE8
  8356                           postdec1	equ	0xFE5
  8357                           fsr1h	equ	0xFE2
  8358                           fsr1l	equ	0xFE1
  8359                           indf2	equ	0xFDF
  8360                           postinc2	equ	0xFDE
  8361                           postdec2	equ	0xFDD
  8362                           fsr2h	equ	0xFDA
  8363                           fsr2l	equ	0xFD9
  8364                           status	equ	0xFD8


Data Sizes:
    Strings     167
    Constant    57
    Data        76
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     66      80
    BANK0           160     55     127
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    lcd_print@dato	PTR unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[16]), STR_12(CODE[13]), STR_11(CODE[12]), STR_10(CODE[13]), 
		 -> STR_9(CODE[16]), STR_8(CODE[13]), STR_7(CODE[13]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[13]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _lcd_init->_lcd_control
    _ingresar_frecuencia->_lcd_goto
    _lcd_print->_lcd_dato
    _lcd_dato->_lcd_time_control
    _lcd_goto->_lcd_control
    _lcd_clear_display->_lcd_control
    _lcd_control->_lcd_time_control
    _log->_eval_poly
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftdiv
    ___fttol->___ftmul
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftmul->___awtoft
    ___ftsub->___ftadd
    ___ftadd->___ftmul
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_rampa
    _sen->_pow
    _rampa->_pow
    _cuadrada->_pow
    _pow->_exp
    _exp->_floor

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  279430
                                             54 BANK0      1     1      0
                           _cuadrada
                _ingresar_frecuencia
                  _lcd_clear_display
                           _lcd_dato
                           _lcd_goto
                           _lcd_init
                          _lcd_print
                              _rampa
                                _sen
 ---------------------------------------------------------------------------------
 (1) _sen                                                 24    22      2   91656
                                             34 BANK0     18    16      2
                       _Delay100TCYx
                        _Delay10TCYx
                         _Delay1TCYx
                            ___awdiv
                           ___awtoft
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1324
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _rampa                                               32    30      2   90101
                                             34 BANK0     20    18      2
                        _Delay10TCYx
                         _Delay1TCYx
                           ___awtoft
                            ___ftmul
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _Delay1TCYx                                           1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0      15
                                             17 COMRAM     1     1      0
                        _lcd_control
 ---------------------------------------------------------------------------------
 (1) _ingresar_frecuencia                                  2     2      0    4522
                                             24 COMRAM     2     2      0
                             ___wmul
                  _lcd_clear_display
                           _lcd_dato
                           _lcd_goto
                          _lcd_print
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            2     0      2     956
                                             17 COMRAM     2     0      2
                           _lcd_dato
 ---------------------------------------------------------------------------------
 (2) _lcd_dato                                             2     2      0      15
                                             15 COMRAM     2     2      0
                   _lcd_time_control
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             7     3      4    2688
                                             17 COMRAM     7     3      4
                        _lcd_control
 ---------------------------------------------------------------------------------
 (1) _lcd_clear_display                                    0     0      0      15
                        _lcd_control
 ---------------------------------------------------------------------------------
 (2) _lcd_control                                          2     2      0      15
                                             15 COMRAM     2     2      0
                   _lcd_time_control
 ---------------------------------------------------------------------------------
 (3) _lcd_time_control                                     1     1      0       0
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _cuadrada                                            20    18      2   89462
                                             34 BANK0     14    12      2
                       _Delay100TCYx
                        _Delay10TCYx
                        _Delay1KTCYx
                           ___awtoft
                            ___ftdiv
                            ___fttol
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   78885
                                             17 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   25131
                                              0 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   42287
                                              8 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     513
                                              0 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3   10665
                                              0 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     630
                                             14 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (5) ___fttol                                             15    11      4    1218
                                             41 COMRAM    15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6     814
                                             14 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2865
                                             56 COMRAM    10     6      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   11097
                                             53 COMRAM    12     5      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     848
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    4840
                                             26 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5057
                                             53 COMRAM     6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    4693
                                             41 COMRAM    12     6      6
                           ___awtoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     237
                                             14 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (4) ___ftdiv                                             15     9      6    3734
                                             26 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___awtoft                                             4     1      3    3487
                                             22 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2763
                                             22 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2584
                                             14 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10TCYx                                          1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay100TCYx                                         1     1      0      22
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cuadrada
     _Delay100TCYx
     _Delay10TCYx
     _Delay1KTCYx
     ___awtoft
       ___ftpack
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _ingresar_frecuencia
     ___wmul
     _lcd_clear_display
       _lcd_control
         _lcd_time_control
     _lcd_dato
       _lcd_time_control
     _lcd_goto
       _lcd_control
         _lcd_time_control
     _lcd_print
       _lcd_dato
         _lcd_time_control
   _lcd_clear_display
     _lcd_control
       _lcd_time_control
   _lcd_dato
     _lcd_time_control
   _lcd_goto
     _lcd_control
       _lcd_time_control
   _lcd_init
     _lcd_control
       _lcd_time_control
   _lcd_print
     _lcd_dato
       _lcd_time_control
   _rampa
     _Delay10TCYx
     _Delay1TCYx
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
   _sen
     _Delay100TCYx
     _Delay10TCYx
     _Delay1TCYx
     ___awdiv
     ___awtoft
       ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___wmul
         _frexp

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     37      7F       5       79.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     42      50       1       85.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      CF      20        0.0%
DATA                 0      0      CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Jun 07 09:47:55 2017

                ___altoft@exp 0041                 ___altoft@sign 0042                            _RD 007D30  
                          _WR 007D31                  ___awdiv@sign 0014                   __CFG_BOR$ON 000000  
         ___wmul@multiplicand 0011                   __CFG_BORV$3 000000                  lcd_dato@dato 0011  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                  ___ftadd@exp1 0035                  ___ftadd@exp2 0034  
                ___ftadd@sign 0033                           l121 1B40                           l123 1B48  
                         l302 0D2E                           l135 1B9E                           l160 1CB0  
                         l145 1C02                           l147 1C0A                           l180 1752  
                         l172 165C                           l316 0D76                           l309 0D52  
                         l257 0A24                           l259 0A2C                           l188 186E  
                         l607 2E12                           l295 0D0A                           l288 0CE6  
                         l660 1D1E                           l637 28E6                           l717 2D94  
                         l664 1D48                           l675 1DF8                           l684 1E14  
                         l852 201A                           l695 2754                           l847 1EC4  
                         _GIE 007F97                  __CFG_CPB$OFF 000000                           _RB4 007C0C  
                         _RB5 007C0D                           _RB6 007C0E                           _RB7 007C0F  
                __CFG_CPD$OFF 000000                           _ISR 0008                           _exp 18C4  
                         _log 2182                           _sen 0DD6                           _pow 1E86  
                         wreg 000FE8                  __CFG_LVP$OFF 000000                          ?_ISR 0001  
                ___ftdiv@cntr 0024                    _Delay1TCYx 2E10                  ___ftdiv@sign 0029  
                cuadrada@frec 00CA                  __CFG_WDT$OFF 000000                          l1010 1996  
                        l1011 1ACA                          l1021 2692                          l3221 2C9A  
                        l3223 2CA0                          l3311 2A4A                          l3241 2D1E  
                        l3321 2A6C                          l3305 2A3A                          l5011 133E  
                        l3227 2CA8                          l4301 2ACC                          l3229 2CC8  
                        l3237 2D0A                          l3317 2A60                          l3333 2A92  
                        l4303 2AD8                          l5015 1352                          l3319 2A68  
                        l5113 1592                          l5017 1368                          l3337 2AA0  
                        l3329 2A88                          l4323 1D56                          l5027 1404  
                        l3285 2DF2                          l3293 2DE2                          l4261 2880  
                        l4317 1D2C                          l4405 253C                          l5213 10AC  
                        l5133 0E92                          l5301 09E4                          l4271 28DC  
                        l4263 289E                          l4255 2868                          l4351 1DC4  
                        l4415 2564                          l4431 29C6                          l5071 14BA  
                        l5223 10E8                          l5127 0E72                          l3289 2E02  
                        l4345 1DA8                          l4409 254C                          l4441 2A22  
                        l5065 1490                          l5217 10C4                          l5209 1098  
                        l5129 0E7C                          l5305 09FE                          l4267 28B4  
                        l4259 2876                          l4523 26F0                          l4347 1DB2  
                        l4339 1D86                          l4419 2574                          l4603 27C6  
                        l4435 29F6                          l4451 23F2                          l5075 1506  
                        l5171 0F60                          l4269 28D2                          l4517 26C8  
                        l4365 1E30                          l4357 1DE6                          l4349 1DBC  
                        l4605 2842                          l4621 233A                          l4613 22D6  
                        l5069 14A4                          l5245 1200                          l5181 0FFC  
                        l5165 0F36                          l5405 0B52                          l4543 272E  
                        l4375 1E60                          l4359 1DF0                          l4391 250A  
                        l5183 1006                          l5511 0CDA                          l5335 0A5A  
                        l5343 0A78                          l4561 2C36                          l4385 24E2  
                        l4481 248C                          l4473 2468                          l4633 2366  
                        l5169 0F4A                          l5281 0980                          l4483 2492  
                        l4715 1AA0                          l5187 101C                          l5339 0A6E  
                        l5291 09A0                          l4645 2B28                          l4573 2CE4  
                        l4469 2458                          l4637 2376                          l5461 0C1E  
                        l5349 0A86                          l4647 2B34                          l4487 24A8  
                        l4479 2480                          l4591 25FA                          l4743 1F6C  
                        l4735 1EFC                          l4911 1688                          l5623 0DCA  
                        l5455 0C0E                          l4681 18E8                          l4665 21D0  
                        l4729 1ED8                          l4825 1BCC                          l4913 169E  
                        l4499 292E                          l4595 2618                          l4587 25E6  
                        l4659 21A4                          l4747 1F92                          l4827 1BD2  
                        l4771 1B30                          l4923 173A                          l4907 1674  
                        ?_exp 00B0                          l4693 1960                          l4829 1BE2  
                        l4925 1744                          ?_log 00A8                          l4687 1924  
                        l4863 1C6C                          l4855 1C38                          l4935 17B2  
                        l5399 0B42                          l4769 1B1C                          l4859 1C4C  
                        l4795 1B76                          l4947 1856                          l4939 17C6  
                        l4973 12B2                          l4797 1B7C                          l4949 1860  
                        l4799 1B8C                          l4959 18AE                          l4895 1644  
                        l4897 164E                          ?_sen 00CA                          ?_pow 00B9  
                        STR_1 087E                          STR_2 08BB                          STR_3 083A  
                        STR_4 085C                          STR_5 086D                          STR_6 084B  
                        STR_7 08AE                          STR_8 08C8                          STR_9 088E  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        _LATD 000F8C                          u4141 1CEA                          u4151 1CFE  
                        _PIE2 000FA0                          u5131 169C                          u5140 16B4  
                        u5301 14B8                          u5230 122C                          u4351 24CA  
                        u5080 15BE                          u4441 23D6                          u4530 2956  
                        u5330 0DEC                          u4371 24F2                          u4460 2410  
                        u4541 26B0                          u5261 1366                          u4630 260A  
                        u5270 137E                          u4561 26D8                          u4465 2408  
                        u5441 10C2                          u4538 2958                          u5450 10E6  
                        u5381 0F5E                          u4670 2308                          u5390 0F76  
                        u4770 196A                          _PIR2 000FA1                          u4780 196C  
                        u4860 1F50                          u4678 230C                          u5907 2DB4  
                        u5917 2D3A                          u5927 2D4C                          i2l97 213E  
                        u5937 2DE4                          i2l98 2138                          u5947 2DF4  
                        u5957 2E04                          u5877 0926                          u5887 2C76  
                        u5897 2DD4                          _WREN 007D32                          _main 08E2  
                ___ftpack@arg 000F                  ___ftpack@exp 0012                          _seno 0060  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr0l 000FE9  
                        fsr2h 000FDA                          fsr1l 000FE1                          indf2 000FDF  
                        fsr2l 000FD9                          btemp 0051                          exp@x 00B0  
                        log@x 00A8                          sen@b 00DA                          sen@i 00D2  
                        pclat 000FFA                          sen@t 00D8                          pow@x 00B9  
                        pow@y 00BC                          prodh 000FF4                          prodl 000FF3  
                        start 0016                 __CFG_IESO$OFF 000000                 __CFG_MCLRE$ON 000000  
                ___ftmul@cntr 0028                  ___param_bank 000010                  ___ftmul@sign 0029  
                       ??_ISR 0001                   _Delay10TCYx 2DF0                  ___fttol@exp1 0038  
                       ??_exp 0043                         ??_log 0042                  ___fttol@lval 0034  
                       ??_sen 0043                         ??_pow 0043                   _Delay1KTCYx 2DE0  
               __CFG_PLLDIV$1 000000                         ?_main 0001               __end_of___awdiv 2AAA  
                       _EEADR 000FA9               __end_of___ftadd 1E86                         STR_10 08C8  
                       STR_11 08D5                         STR_12 08C8                         STR_13 089E  
       __size_of_Delay100TCYx 0010                         _CARRY 007EC0               __end_of___ftdiv 2786  
             __end_of___ftneg 2DA2               __end_of___ftmul 25AE               ___awdiv@divisor 0011  
             __end_of___ftsub 2C60               __end_of___fttol 24BA                         i2l110 2104  
                       i2l102 209C                         i2l106 20D0               ___awdiv@counter 0013  
                       _PORTA 000F80                         _PORTB 000F81                         _PORTC 000F82  
                       _PORTE 000F84                 __CFG_USBDIV$1 000000                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
                ___lltoft@exp 001F                __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000  
              __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000                 ___awtoft@sign 001A                         _floor 25AE  
                       _ldexp 22B2                         _frexp 2906                         _errno 0047  
                       _rampa 15A8                         _tecla 004F                 ___ftpack@sign 0013  
                       tablat 000FF5                         pow@yi 00C6                         status 000FD8  
              __CFG_ICPRT$OFF 000000                   exp@exponent 00B6                   ldexp@newexp 00AB  
             __initialization 2B7E                   log@exponent 00AB                  _Delay100TCYx 2E00  
                __end_of_main 0DD6                        ??_main 00DE                 ___fttol@sign1 0033  
               __activetblptr 000002               __CFG_CCP2MX$OFF 000000                        _ADCON1 000FC1  
                      ?_floor 00A8                        ?_ldexp 00A8                        ?_frexp 000F  
            __end_of___altoft 2B22                        ?_rampa 00CA                        _EEDATA 000FA8  
                 ?_Delay1TCYx 0001                        _EECON2 000FA7              ___awdiv@dividend 000F  
            __end_of___awtoft 2D08              __end_of___ftpack 2906              __end_of___lltoft 2B7E  
                      i2l2311 2114                        i2l2303 20F8                        i2l2315 2120  
                      i2l2319 212C                        i2l2271 2090                        i2l2263 2078  
                      i2l2283 20B8                        i2l2267 2084                        i2l2295 20E0  
                      i2l2287 20C4                        i2l2279 20AC                        i2l2299 20EC  
           ?_lcd_time_control 0001                 lcd_print@dato 0012                __CFG_XINST$OFF 000000  
          ??_lcd_time_control 000F              __end_of_lcd_dato 2DE0              __end_of_cuadrada 15A8  
            __end_of_lcd_init 2C98              __end_of_lcd_goto 2CD0                        ___ftge 2996  
        __size_of_lcd_control 0020                        ___wmul 2D58                     ??___awdiv 0013  
                   ??___ftadd 0030                __CFG_STVREN$ON 000000                     ??___ftdiv 0021  
                   ??___ftneg 0012   __end_of_ingresar_frecuencia 1CDA                     ??___ftmul 0021  
                   ??___ftsub 003C                     ??___fttol 002E             _lcd_clear_display 2E1A  
                      clear_0 2B84              ___awdiv@quotient 0015                        _opcion 0049  
          ?_lcd_clear_display 0001                        floor@i 00AB                        floor@x 00A8  
       ___ftmul@f3_as_product 0025                  __pdataCOMRAM 004D                        rampa@i 00D6  
                      rampa@j 00CE                        rampa@q 00DC                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
         ??_lcd_clear_display 0012              __end_ofexp@coeff 081F              __end_oflog@coeff 083A  
                  __accesstop 0060       __end_of__initialization 2BCA                    ___altoft@c 0039  
             __CFG_PBADEN$OFF 000000                    ___ftadd@f1 002A                    ___ftadd@f2 002D  
                  ___ftge@ff1 000F                    ___ftge@ff2 0012                  eval_poly@res 003F  
               ___rparam_used 000001                    ___ftdiv@f1 001B                    ___ftdiv@f2 001E  
                  ___ftdiv@f3 0025                    ___ftneg@f1 000F                    ___awtoft@c 0017  
                  ___ftmul@f1 001B                    ___ftmul@f2 001E                    ___ftsub@f1 0036  
                  ___ftsub@f2 0039                    ___fttol@f1 002A                __pcstackCOMRAM 0001  
   __end_of_lcd_clear_display 2E22                  __pidataBANK0 2BD8                    ___lltoft@c 0017  
               __end_of_floor 26A0                 __end_of_ldexp 23C6                 __end_of_frexp 2996  
               __end_of_rampa 18C4           __size_of_Delay1TCYx 000A            __size_of_lcd_print 002A  
                     ??_floor 0043                       ??_ldexp 00AD                       ??_frexp 0014  
                     ??_rampa 0043            __size_of_eval_poly 00D2                       ?___ftge 000F  
                ?_Delay10TCYx 0001                       ?___wmul 000F                  ?_Delay1KTCYx 0001  
                   ?___altoft 0039                     ?___awtoft 0017                     ?___ftpack 000F  
                   ?___lltoft 0017                     ?_lcd_dato 0001                     ?_cuadrada 00CA  
                   ?_lcd_init 0001                     ?_lcd_goto 0012               __CFG_VREGEN$OFF 000000  
                  _frecuencia 004D                       __Hparam 0000                       __Lparam 0000  
             lcd_control@dato 0011    __size_of_lcd_clear_display 0008             __end_of_lcd_print 2D32  
             __size_of___ftge 0090                       ___awdiv 2A26                       ___ftadd 1CDA  
                  _rampa$1044 00D0                    _rampa$1045 00D3                       ___ftdiv 26A0  
                     ___ftneg 2D7E               __size_of___wmul 0026                       ___ftmul 24BA  
                     ___ftsub 2C20                       ___fttol 23C6                  __psmallconst 0800  
                  ??___altoft 003D                       _decenas 0045                       __pcinit 2B7E  
                  ??___awtoft 001A                    ??___ftpack 0014             __end_of_eval_poly 2858  
             Delay10TCYx@unit 000F                       __ramtop 0800                    ??___lltoft 001B  
                     __ptext0 08E2                       __ptext1 0DD6                       __ptext2 2A26  
                     __ptext3 15A8                       __ptext4 2E10                       __ptext5 2C60  
                     __ptext6 1AD8                       __ptext7 2D08                       __ptext8 2DC2  
                     __ptext9 2C98                  __size_of_ISR 217A                  __size_of_exp 0214  
                __size_of_log 0130                  __size_of_sen 0440                  __size_of_pow 01A2  
                  ??_lcd_dato 0010                  ??_Delay1TCYx 000F                    ??_cuadrada 0043  
                  ??_lcd_init 0012                    ??_lcd_goto 0016                __pintcode_body 2028  
        end_of_initialization 2BCA                       exp@sign 00B8                 __Lmediumconst 0000  
                     int_func 2028                       pow@sign 00C5                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
          __end_of_Delay1TCYx 2E1A     __size_of_lcd_time_control 0026                     _TRISEbits 000F96  
                 ___ftdiv@exp 0028                 ??_lcd_control 0010                   ___ftmul@exp 0024  
            Delay100TCYx@unit 000F                __end_of___ftge 2A26                __end_of___wmul 2D7E  
        __size_of_Delay10TCYx 0010                 __pidataCOMRAM 2E22          __size_of_Delay1KTCYx 0010  
                  floor@expon 00AE  __size_of_ingresar_frecuencia 0202           start_initialization 2B7E  
                  eval_poly@d 0039                    eval_poly@n 003B                    eval_poly@x 0036  
                 __end_of_ISR 2182                    ldexp@value 00A8                   __end_of_exp 1AD8  
                 __end_of_log 22B2                   __end_of_sen 1216                   __end_of_pow 2028  
                  frexp@value 000F                      ??___ftge 0015                      ??___wmul 0013  
                 __pdataBANK0 0060           __end_of_lcd_control 2DC2              __CFG_LPT1OSC$OFF 000000  
           __size_of___altoft 0078                    sen@frecuen 00CA             __size_of___awtoft 0038  
           __size_of___ftpack 00AE             __size_of___lltoft 005C                   __pbssCOMRAM 0043  
               __pcstackBANK0 00A8                    rampa@i_250 00DA                    rampa@i_248 00D8  
                  rampa@q_249 00CC                    rampa@frecu 00CA               Delay1KTCYx@unit 000F  
           __size_of_lcd_dato 001E             __size_of_cuadrada 0392             __size_of_lcd_init 0038  
           __size_of_lcd_goto 0038                 ?_Delay100TCYx 0001                     __pintcode 0008  
                    ?___awdiv 000F                      ?___ftadd 002A                      ?___ftdiv 001B  
                    ?___ftneg 000F                      ?___ftmul 001B                      ?___ftsub 0036  
                    ?___fttol 002A                     _lcd_print 2D08              _lcd_time_control 2D32  
                 __smallconst 0800                     _eval_poly 2786                __size_of_floor 00F2  
              __size_of_ldexp 0114                __size_of_frexp 0090                __size_of_rampa 031C  
              ___wmul@product 0013                      _LATEbits 000F8D                   _lcd_control 2DA2  
              ??_Delay100TCYx 000F              __CFG_WDTPS$32768 000000                    ?_lcd_print 0012  
           ___wmul@multiplier 000F                     cuadrada@h 00D4                     cuadrada@x 00D6  
                   cuadrada@z 00D2                     lcd_goto@x 0012                     lcd_goto@y 0014  
                  ?_eval_poly 0036                   _INTCON2bits 000FF1                     copy_data0 2B9E  
                   copy_data1 2BBE                     frexp@eptr 0012           _ingresar_frecuencia 1AD8  
                    __Hrparam 0000                      __Lrparam 0000              __size_of___awdiv 0084  
            __size_of___ftadd 01AC              __size_of___ftdiv 00E6              __size_of___ftneg 0024  
                    ___altoft 2AAA              __size_of___ftmul 00F4              __size_of___ftsub 0040  
            __size_of___fttol 00F4                      ___awtoft 2CD0                      ___ftpack 2858  
                    ___lltoft 2B22         __CFG_FOSC$INTOSCIO_EC 000000                      _exp$1052 00B3  
        ?_ingresar_frecuencia 0001                      _sen$1048 00CC                      _sen$1049 00CF  
                    _centenas 0043                      __ptext10 2E1A                      __ptext11 2DA2  
                    __ptext20 23C6                      __ptext12 2D32                      __ptext21 2996  
                    __ptext13 1216                      __ptext30 2CD0                      __ptext22 2AAA  
                    __ptext14 1E86                      __ptext31 2B22                      __ptext23 2786  
                    __ptext15 2182                      __ptext32 2858                      __ptext24 2D58  
                    __ptext16 18C4                      __ptext33 2DE0                      __ptext25 24BA  
                    __ptext17 22B2                      __ptext34 2DF0                      __ptext26 2C20  
                    __ptext18 25AE                      __ptext35 2E00                      __ptext27 1CDA  
                    __ptext19 2906                      __ptext28 2D7E                      __ptext29 26A0  
                    _lcd_dato 2DC2                      _cuadrada 1216                      _lcd_init 2C60  
                    _lcd_goto 2C98                      _pow$1050 00BF                      _pow$1051 00C2  
               __size_of_main 04F4                Delay1TCYx@unit 000F                 ??_Delay10TCYx 000F  
                    int$flags 0051                      _unidades 004B                 ??_Delay1KTCYx 000F  
                 ??_lcd_print 0014                 _cuadrada$1046 00CC                 _cuadrada$1047 00CF  
       __CFG_CPUDIV$OSC1_PLL2 000000                      exp@coeff 0801                      log@coeff 081F  
       ??_ingresar_frecuencia 0019                    _INTCONbits 000FF2                   ??_eval_poly 003D  
                    sen@i_262 00D4                      sen@i_263 00D6          __end_of_Delay100TCYx 2E10  
                    intlevel2 0000      __end_of_lcd_time_control 2D58                    _OSCCONbits 000FD3  
            lcd_goto@posicion 0018           __end_of_Delay10TCYx 2E00           __end_of_Delay1KTCYx 2DF0  
                ?_lcd_control 0001  
